{
    "workbench.colorTheme": "Default Dark+",
    "security.workspace.trust.untrustedFiles": "open",
    "replacerules.rules": {
    // Last updated: June 27, 2022

    // Substitute 2 spaces for each tab that does not precede a variable.

    "6": {"find": "\\t(?!<%= vars)", "replace": "  "},

    // Search for errors everywhere

    "10": {"find": "(-SERVICE-INSTANCE-NAME\\b[^`]*```)", "replace": "$1<!-- |SERVICE-INSTANCE-NAME| is preferred. -->"},
    "11": {"find": "(-v\\s+\\d\\.\\d\\.\\d[\\n\\s.][^`]*```)", "replace": "$1<!-- If this is a command to run and it has a version number, consider replacing the version number with an HBS variable, such as {{ vars.tap_version }}. -->"},
    "12": {"find": "(:(?=\\n\\n\\|\\s*Option))", "replace": "$1<!-- A sentence that introduces a table of options ends in a period, not a colon. -->"},
    "13": {"find": "(:alt =\\> .[^\\{\\)]*\\<%= vars\\.[^\\)]*\\) %\\>)", "replace": "$1<!-- Use #{} to escape ERB variables within ERB image tags, as in #{vars.product_short}. -->"},
    "14": {"find": "(!\\[.{0,44}\\]\\([^\\.]*\\.png\\))", "replace": "$1<!-- Alt text must describe the image in detail. -->"},
    "15": {"find": "(!\\[.{141,}\\]\\([^\\.]*\\.png\\))", "replace": "$1<!-- DocWorks supports 140 characters max for alt text. -->"},
    "16": {"find": "((NOTE:|IMPORTANT:|CAUTION:))", "replace": "$1<!-- Proper note formatting is |> **Note:**| or |> **Caution:**| or |> **Important:**|. -->"},
    "17": {"find": "([\\*\\+\\-]\\s`[A-Za-z]*_)", "replace": "$1<!-- Use dashes for spacing in placeholders, not underscores. -->"},
    "18": {"find": "([\\s\\n]+\\*\\*[^*]{96})", "replace": "$1<!-- Consider reducing this run-in heading to fewer than 100 characters. -->"},
    "19": {"find": "([^-]CLIENT-SECRET\\b[^`]*```)", "replace": "$1<!-- Specify the server, as in |BOSH-CLIENT-SECRET| or |CREDHUB-CLIENT-SECRET|. -->"},
    "20": {"find": "([^!]\\[[a-z]+\\s[^\\]]*\\]\\([^\\)]*\\))", "replace": "$1<!-- The link should likely be a title or |THIRD-PARTY-NAME documentation|. -->"},
    "21": {"find": "([^\\>][^\\>]\\*\\*(Note:|Important:|Caution:))", "replace": "$1<!-- Proper note formatting is |> **Note:**| or |> **Caution:**| or |> **Important:**|. -->"},
    "22": {"find": "(\\.[a-z]+#[a-z-]+-\\d+\\))", "replace": "$1<!-- Find the anchor this link points to and give it a short HTML anchor ID, such as |anchor-id| -- keep it under 25 chars and use dashes instead of spaces -- then change this link to point to that HTML anchor ID. -->"},
    "23": {"find": "(\\.\\/[a-z-]*#[a-z-]*\\.html)", "replace": "$1<!-- Broken link -- the correct syntax is |page-name.html#anchor-id|. -->"},
    "24": {"find": "(\\.\\s*\\n\\s+\\*\\s\\[[^\\]]+\\]\\([^\\)]+\\)[\\s\\n]*\\*\\s\\[[^\\]]+\\]\\([^\\)]+\\))", "replace": "$1<!-- A sentence that introduces a jump list -- ToC for the topic -- ends in a colon.  -->"},
    "25": {"find": "(\\.yml)", "replace": "$1<!-- Per YAML.org, |.yaml| is the preferred extension. If the reader creates this YAML file, fix every instance of the filename in every topic as part of your commit. Files with the |.yml| extension downloaded from elsewhere are outside our control. -->"},
    "26": {"find": "(\\(https:..discuss.pivotal.io.*\\).*$)", "replace": "$1<!-- Discuss Pivotal is a deprecated URL. Contact Knowledge Base staff for its replacement. -->"},
    "27": {"find": "(\\(https:..github.com.*\\)(?!.*\\n?.*GitHub).*$)", "replace": "$1<!-- Type |in GitHub| somewhere in the cross-reference sentence. -->"},
    "28": {"find": "(\\(https:..pvtl.force.com.*\\).*$)", "replace": "$1<!-- Pivotal Force is a deprecated URL. Contact Knowledge Base staff for its replacement. -->"},
    "29": {"find": "(\\[(?!.*\\n?.*BOSH documentation).*\\]\\(https:..bosh.io.*\\))", "replace": "$1<!-- The link name must be |BOSH documentation|. -->"},
    "30": {"find": "(\\[(?!.*\\n?.*cert-manager documentation).*\\]\\(https:..cert-manager.io.docs.*\\))", "replace": "$1<!-- The link name must be |cert-manager documentation|. -->"},
    "31": {"find": "(\\[(?!.*\\n?.*Cloud Foundry documentation).*\\]\\(https:..docs.cloudfoundry.org.*\\))", "replace": "$1<!-- The link name must be |Cloud Foundry documentation|. -->"},
    "32": {"find": "(\\[(?!.*\\n?.*Concourse documentation).*\\]\\(https:..concourse-ci.org.*\\))", "replace": "$1<!-- The link name must be |Concourse documentation|. -->"},
    "33": {"find": "(\\[(?!.*\\n?.*Docker documentation).*\\]\\(https:..docs.docker.com.*\\))", "replace": "$1<!-- The link name must be |Docker documentation|. -->"},
    "34": {"find": "(\\[(?!.*\\n?.*GCP documentation).*\\]\\(https:..cloud.google.com.*\\))", "replace": "$1<!-- The link name must be |GCP documentation|. -->"},
    "35": {"find": "(\\[(?!.*\\n?.*Istio documentation).*\\]\\(https:..istio.io.latest.docs.*\\))", "replace": "$1<!-- The link name must be |Istio documentation|. -->"},
    "36": {"find": "(\\[(?!.*\\n?.*Kubernetes documentation).*\\]\\(https:..kubernetes.io.docs.*\\))", "replace": "$1<!-- The link name must be |Kubernetes documentation|. -->"},
    "37": {"find": "(\\[(?!.*\\n?.*Microsoft documentation).*\\]\\(https:..docs.microsoft.com.*\\))", "replace": "$1<!-- The link name must be |Microsoft documentation|. -->"},
    "38": {"find": "(\\[(?!.*\\n?.*Percona documentation).*\\]\\(https:..www.percona.com.doc.*\\))", "replace": "$1<!-- The link name must be |Percona documentation|. -->"},
    "39": {"find": "(\\[(?!.*\\n?.*RabbitMQ documentation).*\\]\\(https:..www.rabbitmq.com.*\\))", "replace": "$1<!-- The link name must be |RabbitMQ documentation|. -->"},
    "40": {"find": "(\\[(?!.*\\n?.*Terraform documentation).*\\]\\(https:..www.terraform.io.docs.*\\))", "replace": "$1<!-- The link name must be |Terraform documentation|. -->"},
    "41": {"find": "(\\[(?!.*\\n?.*VMware Tanzu Support knowledge base).*\\]\\(https:..community.pivotal.io.*\\))", "replace": "$1<!-- The link name must be |VMware Tanzu Support documentation|. -->"},
    "42": {"find": "(\\].(?=\\((http|#)))", "replace": "$1<!-- Broken link -->"},
    "43": {"find": "(\\]\\([^\\(\\:]*\\.[^\\/\\(]*\\.[a-z]+[#a-z-]*\\))", "replace": "$1<!-- Do not use periods in filenames. DocWorks reports them as errors. -->"},
    "44": {"find": "(\\]\\(\\.\\/[\\w\\.#-]+\\))", "replace": "$1<!-- Do not start relative links with |./|. It needs |../| or nothing. -->"},
    "45": {"find": "(\\*\\*(Note|Important|Caution)\\*\\*)", "replace": "$1<!-- Proper note formatting is |>**Note:**| or |>**Caution:**| or |>**Important:**|. -->"},
    "46": {"find": "(\\<%= image_tag(?![^\\)]*:alt)[^%]*%\\>)", "replace": "$1<!-- Images require alt text. -->"},
    "47": {"find": "(\\<%= image_tag[^\\)]*:alt .. \\W.{0,44}\\W\\) %\\>)", "replace": "$1<!-- Alt text must describe the image in detail. -->"},
    "48": {"find": "(\\<%= var.[\\w]* %\\>)", "replace": "$1<!-- ERB variables start with |vars.|, not |var|. -->"},
    "49": {"find": "(\\<%= vars.platform_name %\\> v2.0 and later\\b)", "replace": "$1<!-- |<%= vars.platform_name %> (formerly <%= vars.platform_old %>)| is preferred. -->"},
    "50": {"find": "(\\<%= vars.platform_old %\\> v2.0 and later\\b)", "replace": "$1<!-- |<%= vars.platform_name %> (formerly <%= vars.platform_old %>)| is preferred. -->"},
    "51": {"find": "(\\<%= vars.runtime_abbr %\\>)", "replace": "$1<!-- Use <%= vars.app_runtime_abbr -->"},
    "52": {"find": "(\\<%=\\spartial\\s[^'][^>]*\\>)", "replace": "$1<!-- Use single quotes with ERB partial tags. -->"},
    "53": {"find": "(\\<a\\s+id..[^'\\<]{26,})", "replace": "$1<!-- Shorten the anchor ID to 25 characters or fewer. Use dashes instead of spaces or periods. -->"},
    "54": {"find": "(\\<a\\s+id..[^'\\<]+\\.)", "replace": "$1<!-- In anchor IDs use dashes instead of spaces or periods. -->"},
    "55": {"find": "(\\<a\\s+id..[^'\\<]+\\s)", "replace": "$1<!-- In anchor IDs use dashes instead of spaces or periods. -->"},
    "56": {"find": "(\\<code\\>kubectl\\<\\/code\\>)", "replace": "$1<!-- Do not format |kubectl| as code. -->"},
    "57": {"find": "(\\<h1\\>)", "replace": "$1<!-- H1 headers are not allowed within topics. -->"},
    "58": {"find": "(\\<img src=.[^\\.]*\\.png. alt=\\W.{0,44}\\W\\>)", "replace": "$1<!-- Alt text must describe the image in detail. -->"},
    "59": {"find": "(\\<img src=.[^\\.]*\\.png. alt=\\W.{141,}\\W\\>)", "replace": "$1<!-- DocWorks supports 140 characters max for alt text. -->"},
    "60": {"find": "(\\<img src=(?!(.|\\n)*alt=.).*$)", "replace": "$1<!-- Images require alt text. -->"},
    "61": {"find": "(\\<td\\>\\<\\/td\\>)", "replace": "$1<!-- Insert |<em>n/a</em>| within purposefully empty cells. -->"},
    "62": {"find": "(\\<td\\>\\s*n\\/a)", "replace": "$1<!-- Insert |<em>n/a</em>| within purposefully empty cells. -->"},
    "63": {"find": "(\\>\\s*(Note|Caution|Important))", "replace": "$1<!-- Proper note formatting is |> **Note:**| or |> **Caution:**| or |> **Important:**|. -->"},
    "64": {"find": "(\\|(?!(\\n))\\s*\\|)", "replace": "$1<!-- Insert |_n/a_| within purposefully empty cells. -->"},
    "65": {"find": "(\\|(?!(\\n))\\s*n\\/a)", "replace": "$1<!-- Insert |_n/a_| within purposefully empty cells. -->"},
    "66": {"find": "(\\|\\n\\n+(?=\\|[^\\|]*\\|))", "replace": "$1<!-- Do not stack tables. -->"},
    "67": {"find": "(\\|\\s*.*\\.\\.\\..*\\|[\\s\\n]+\\|-+\\|)", "replace": "$1<!-- Do not use ellipsis in a column header. -->"},
    "68": {"find": "(\\|\\s*[A-Za-z-]+\\s[a-z-]+\\s[a-z-]+.*\\|[\\s\\n]+\\|-+\\|)", "replace": "$1<!-- Do not use sentence fragments as column headers. -->"},
    "69": {"find": "(\\bAmazon[\\s\\n]+documentation\\])", "replace": "$1<!-- The xref link name must be |AWS documentation|. -->"},
    "70": {"find": "(\\bAPP(?!-NAME)[^`]*```)", "replace": "$1<!-- |APP-NAME| is preferred. -->"},
    "71": {"find": "(\\bchoose[\\s\\n]+\\*\\*)", "replace": "$1<!-- |select| or |click| is preferred for interacting with UI elements. -->"},
    "72": {"find": "(\\bChoose[\\s\\n]+\\*\\*)", "replace": "$1<!-- |Select| or |Click| is preferred for interacting with UI elements. -->"},
    "73": {"find": "(\\bPRIVATE-KEY-FILE\\b[^`]*```)", "replace": "$1<!-- |PATH-TO-PRIVATE-KEY| is preferred. -->"},
    "74": {"find": "(\\brun:[\\s\\n]*\\<code\\>[\\s\\n\\~]*\\$)", "replace": "$1<!-- We only include dollar signs in example terminal code, not in commands the reader might copy and paste. -->"},
    "75": {"find": "(\\brun:[\\s\\n]*`+[\\s\\n\\~]*\\$[^`]*```)", "replace": "$1<!-- We only include dollar signs in example terminal code, not in commands the reader might copy and paste. -->"},
    "76": {"find": "(\\brun[^:]*:[\\s\\n]*\\<pre class)", "replace": "$1<!-- Commands are formatted in triple backtick blocks, not terminal snippets. -->"},
    "77": {"find": "(\\brunning[^:]*:[\\s\\n]*\\<code\\>[\\s\\n\\~]*\\$)", "replace": "$1<!-- We only include dollar signs in example terminal code, not in commands the reader might copy and paste. -->"},
    "78": {"find": "(\\brunning[^:]*:[\\s\\n]*`+[\\s\\n\\~]*\\$)", "replace": "$1<!-- We only include dollar signs in example terminal code, not in commands the reader might copy and paste. -->"},
    "79": {"find": "(\\bSERVICE-INSTANCE[\\s\\n]+[^`]*```)", "replace": "$1<!-- |SERVICE-INSTANCE-NAME| is preferred. -->"},
    "80": {"find": "(\\bYOUR-PRIVATE-KEY\\b[^`]*```)", "replace": "$1<!-- |PATH-TO-PRIVATE-KEY| is preferred. -->"},
    "81": {"find": "(\\bYOUR-VM\\b[^`]*```)", "replace": "$1<!-- Specify the VM, as in |OPS-MANAGER-VM| or |STEMCELL-BASE-VM|. -->"},
    "82": {"find": "(\\n```[^`]*[A-Z][A-Z]+[\\-\\_][^`]*```(?![\\s\\n]*Where))", "replace": "$1<!-- Define any non-obvious placeholders present in the code snippet in the style of |Where PLACEHOLDER is...| -->"},
    "83": {"find": "(\\sCVE-\\d{4}(?!.*\\n?([^\\[]*\\]|[^\\>]*\\<\\/a\\>)).*$)", "replace": "$1<!-- Link to the CVE page at https://nvd.nist.gov/ or, if unavailable, cve.org -->"},
    "84": {"find": "(##+[^\\n]*\\>\\s*[A-Z][a-z-]+ing\\b.*\\n\\n(.+\\n){1,}\\n+\\d\\.)", "replace": "$1<!-- Procedure headers use imperatives, not gerunds. -->"},
    "85": {"find": "(##+\\s*\\d\\.)", "replace": "$1<!-- Do not format a numbered step as a header. -->"},
    "86": {"find": "(`.*[_\\A-Z].*`[\\s\\n]+errand\\b)", "replace": "$1<!-- Errands tend to be lowercase and they use dashes instead of underscores or spaces. -->"},
    "87": {"find": "(`.*[_\\A-Z].*`[\\s\\n]+errands\\b)", "replace": "$1<!-- Errands tend to be lowercase and they use dashes instead of underscores or spaces. -->"},
    "88": {"find": "(```[^<]*(<strong>|<em>|<h\\d>|<html>|<body>)(?![^<]*<\\/pre>)[^`]*```)", "replace": "$1<!-- Use unicode for angle brackets to ensure they show up in the snippet. |&lt;| for |<| and |&gt;| for |>|. -->"},
    "89": {"find": "(```\\n(?!\\n)\\s*(?!\\s|Where|\\d\\.).)", "replace": "$1<!-- The opening code fence needs the language. The closing code fence needs a newline beneath it. -->"},
    "90": {"find": "(`kubectl`)", "replace": "$1<!-- Do not format |kubectl| as code. -->"},
    "91": {"find": "(`tanzu`[\\s\\n]+CLI\\b)", "replace": "$1<!-- |Tanzu CLI| is preferred. No code tags. -->"},
    "92": {"find": "(^[\\s]*(?!\\<li\\>)[^\\<]*\\<a href=.#[^\\>]*.>(?![^\\.]*\\n?[^\\.]*(earlier|previously|before|later)).*$)", "replace": "$1<!-- After giving the anchor, state whether the target is |earlier| or |later| in the topic. -->"},
    "93": {"find": "(^[^\\n#]+#{2,6})", "replace": "$1<!-- Delete any whitespace or other characters before this header. -->"},
    "94": {"find": "(^\\[[^\\]]*\\]\\(#[^\\)]*\\)(?![^\\.]*\\n?[^\\.]*(earlier|previously|before|later)).*$)", "replace": "$1<!-- After giving the anchor, state whether the target is |earlier| or |later| in the topic. -->"},
    "95": {"find": "(^\\*\\*(Note:|Important:|Caution:))", "replace": "$1<!-- Proper note formatting is |> **Note:**| or |> **Caution:**| or |> **Important:**|. -->"},
    "96": {"find": "(^\\>.*\\n\\n(?=\\>\\s*\\*\\*))", "replace": "$1<!-- Do not stack notes. -->"},
    "97": {"find": "(^\\d\\.\\s+.*example.*\\.[\\s\\n]*(?=```))", "replace": "$1<!-- When introducing an example in a step, end with a colon. -->"},
    "98": {"find": "(^\\d\\.\\s+[^:]*:\\s*\\n\\s+\\*)", "replace": "$1<!-- A step that has sub-steps ends in a period, not a colon. -->"},
    "99": {"find": "(^#\\s*(?=<a\\s+id))", "replace": "$1<!-- Do not use anchor IDs for level 1 headers in DocsWorks content. -->"},
    "100": {"find": "(^##+\\s*(?!Breaking\\s+[Cc]hanges|Compatibility|Features|Fixed\\s+[Ii]ssues|Known\\s+[Ii]ssues|Maintenance\\s+[Cc]hanges|New\\s+[Ff]eatures|Resolved\\s+[Ii]ssues|Security\\s+[Ff]ixes|Security\\s+[Ii]ssues|See\\s+also|\\<a[\\s\\n]+id=)[^\\s#])", "replace": "$1<!-- Add an HTML anchor ID unless you have reason not to. Keep it under 26 chars. Use dashes instead of spaces and periods. -->"},
    "101": {"find": "(^#+\\s*.*\\n+(?=\\>\\s*\\*\\*))", "replace": "$1<!-- Do not place a note immediately beneath a header. -->"},
    "102": {"find": "(^#+\\s*.*\\n+(?=\\|[^\\|]*\\|))", "replace": "$1<!-- Do not place a table immediately beneath a header. -->"},
    "103": {"find": "(^#+\\s*[a-z][^\\d])", "replace": "$1<!-- Headers start with an uppercase letter. -->"},
    "104": {"find": "(^#+\\s*[A-Za-z-\\s]+\\s+[A-Z][a-z-]+$)", "replace": "$1<!-- For VMware style, write all headers in sentence case. -->"},
    "105": {"find": "(^#+\\s*\\<a[\\s\\n]+id=[^>]*\\>\\<.a\\>\\s*[a-z])", "replace": "$1<!-- Headers start with an uppercase letter. -->"},
    "106": {"find": "(^#s*\\<a[\\s\\n]+id=[^>]*\\>)", "replace": "$1<!-- Do not use anchor IDs for level 1 headers in DocsWorks content. -->"},
    "107": {"find": "(<[A-Z]+_[A-Z_]+>[^`]*```)", "replace": "$1<!-- If a placeholder, delete the angle brackets and use dashes instead of underscores. -->"},
    "108": {"find": "(<[A-Z]+-[A-Z_]+>[^`]*```)", "replace": "$1<!-- If a placeholder, delete the angle brackets. -->"},
    "109": {"find": "(<[A-Z]+.\\s[A-Z_]+>[^`]*```)", "replace": "$1<!-- If a placeholder, delete the angle brackets and use dashes instead of escaped spaces. -->"},
    "110": {"find": "(<[A-Z]+\\s[A-Z_]+>[^`]*```)", "replace": "$1<!-- If a placeholder, delete the angle brackets and use dashes instead of spaces. -->"},
    "111": {"find": "(docs-pcf-staging.cfapps.io.*$)", "replace": "$1<!-- Do not link to staging versions of the docs. -->"},
    "112": {"find": "(html#[a-z-]*\\)[\\s\\n]+earlier\\b)", "replace": "$1<!-- Delete |earlier|: the reference is in another topic. -->"},
    "113": {"find": "(html#[a-z-]*\\)[\\s\\n]+later\\b)", "replace": "$1<!-- Delete |later|: the reference is in another topic. -->"},
    "114": {"find": "(https:..docs-staging)", "replace": "$1<!-- Do not link to the staging version unless A. this is the main branch and B. there is no prod link for this page right now. -->"},
    "115": {"find": "(PATH-TO-MANIFEST[^\\.][^`]*```)", "replace": "$1<!-- Include the file extension, as in |PATH-TO-MANIFEST.yml|. -->"},
    "116": {"find": "(PATH-TO-VARIABLES[^\\.][^`]*```)", "replace": "$1<!-- Include the file extension, as in |PATH-TO-VARIABLES.yml|. -->"},
    "117": {"find": "(Where `[A-Za-z]*_)", "replace": "$1<!-- Use dashes for spacing in placeholders, not underscores.  -->"},

    // Search for errors outside code tags

    "121": {"find": "(---\n\n[^#\n]*(?=(#[^#]|###))(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The first header must be ## -- no smaller, no larger. -->"},
    "122": {"find": "(,(?=[\s\n]+then[^\.]*\.\n)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider deleting |then| or writing |and| after the comma. -->"},
    "123": {"find": "((\/[a-z0-9\-\._#]+){1,}\.[a-z]{2,5}(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If this is a URL then you likely need to present it per xref rules: https://confluence.eng.vmware.com/display/IXCS/Links%2C+Cross-References%2C+and+Citations -->"},
    "124": {"find": "((fix|fixes|issue|issues|this[\s\n]+release):\n\n-\s[^-](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- In release notes, each feature, KI, and resolved issue needs a run-in heading. -->"},
    "125": {"find": "([\s\.]\d+\-\d+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use &ndash; for a range, not a regular dash. -->"},
    "126": {"find": "([\s\n]+--[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- IX Standards forbids em dashes. -->"},
    "127": {"find": "([\s\n]+(?!\ba\b|\bany\b|\bthat\b|\bthe\b|\bthis\b)[a-z-]*[\s\n]+shutdown\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The noun is |shutdown|. The action is |shut down|. -->"},
    "128": {"find": "([\s\n]+(?!terminal[\s\n]+)emulator\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- VMware software is not an emulator. -->"},
    "129": {"find": "([\s\n]+[a-z-]+[\s\n]+Backend\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Back end| is preferred if not part of a brand name. -->"},
    "130": {"find": "([\s\n]+[a-z-]+[\s\n]+Beta\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |beta| is preferred. -->"},
    "131": {"find": "([\s\n]+[a-z-]+[\s\n]+Component\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |component| is the preferred casing. -->"},
    "132": {"find": "([\s\n]+[a-z-]+[\s\n]+Components\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |components| is the preferred casing. -->"},
    "133": {"find": "([\s\n]+[a-z-]+[\s\n]+Jumpbox\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |jumpbox| is preferred. -->"},
    "134": {"find": "([\s\n]+[a-z-]+[\s\n]+Pod\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |pod| is preferred if referring to a K8s pod. -->"},
    "135": {"find": "([\s\n]+[a-z-]+[\s\n]+Pods\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |pods| is preferred if referring to a K8s pod. -->"},
    "136": {"find": "([\s\n]+[a-z-]+[\s\n]+Professional(?=[\s\n]+Beta)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Lowercase |professional| is preferred for |professional beta|. -->"},
    "137": {"find": "([\s\n]+[a-z-]+[\s\n]+Professional[\s\n]+beta\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |professional beta| is preferred. -->"},
    "138": {"find": "([\s\n]+[a-z-]+[\s\n]+Regional[\s\n]+cluster\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- In GKE, |regional| is the preferred casing. -->"},
    "139": {"find": "([\s\n]+[a-z-]+[\s\n]+Regional[\s\n]+clusters\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- In GKE, |regional| is the preferred casing. -->"},
    "140": {"find": "([\s\n]+[a-z-]+[\s\n]+Secret\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |secret| is the preferred casing. -->"},
    "141": {"find": "([\s\n]+[a-z-]+[\s\n]+Secrets\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |secrets| is the preferred casing. -->"},
    "142": {"find": "([\s\n]+[a-z-]+[\s\n]+Stemcell\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Lowercase is preferred unless |stemcell| starts a sentence or is in a title. -->"},
    "143": {"find": "([\s\n]+[a-z-]+[\s\n]+Stemcells\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Lowercase is preferred unless |stemcells| starts a sentence or is in a title. -->"},
    "144": {"find": "([\s\n]+[a-z-]+[\s\n]+Syslog\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Lowercase is preferred unless |syslog| starts a sentence or is in a title. -->"},
    "145": {"find": "([\s\n]+[a-z-]+[\s\n]+System\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |system| is the preferred casing. -->"},
    "146": {"find": "([\s\n]+[a-z-]+[\s\n]+Systems\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |systems| is the preferred casing. -->"},
    "147": {"find": "([\s\n]+[a-z-]+[\s\n]+Technical[\s\n]+support\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |technical support| is preferred. -->"},
    "148": {"find": "([\s\n]+[a-z-]+[\s\n]+Technical[\s\n]+Support\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |technical support| is preferred. -->"},
    "149": {"find": "([\s\n]+[a-z-]+[\s\n]+Zonal[\s\n]+cluster\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- In GKE, |zonal| is the preferred casing. -->"},
    "150": {"find": "([\s\n]+[a-z-]+[\s\n]+Zonal[\s\n]+clusters\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- In GKE, |zonal| is the preferred casing. -->"},
    "151": {"find": "([\s\n]+[a-z-]+[\s\n]+Zonal[\s\n]+mode\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- In GKE, |zonal| is the preferred casing. -->"},
    "152": {"find": "([\s\n]+\.html\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |HTML| is preferred. -->"},
    "153": {"find": "([\s\n]+\.zip\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |ZIP| is preferred. -->"},
    "154": {"find": "([\s\n]+\/[^\s\/\*](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider enclosing in code tags. -->"},
    "155": {"find": "([\s\n]+\d{1,2}.\d{1,2}\.\d{1,2}(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Version numbers are written as |v1.11.11| unless brand styling dictates otherwise. -->"},
    "156": {"find": "([\s\n]+e\.g:[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |For example,| is preferred. -->"},
    "157": {"find": "([\s\n]+E\.g:[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |For example,| is preferred. -->"},
    "158": {"find": "([\s\n]+e\.g[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |For example,| is preferred. -->"},
    "159": {"find": "([\s\n]+E\.g[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |For example,| is preferred. -->"},
    "160": {"find": "([\s\n]+e\.g\.,[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |For example,| is preferred. -->"},
    "161": {"find": "([\s\n]+E\.g\.,[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |For example,| is preferred. -->"},
    "162": {"find": "([\s\n]+e\.g\.:[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |For example,| is preferred. -->"},
    "163": {"find": "([\s\n]+E\.g\.:[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |For example,| is preferred. -->"},
    "164": {"find": "([\s\n]+e\.g\.[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |For example,| is preferred. -->"},
    "165": {"find": "([\s\n]+E\.g\.[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |For example,| is preferred. -->"},
    "166": {"find": "([\s\n]+eg\.:[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |For example,| is preferred. -->"},
    "167": {"find": "([\s\n]+eg\.[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |For example,| is preferred. -->"},
    "168": {"find": "([\s\n]+he[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |they| is preferred. -->"},
    "169": {"find": "([\s\n]+He[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |They| is preferred. -->"},
    "170": {"find": "([\s\n]+http:..www(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Proper xref formatting is preferred over giving a raw link. -->"},
    "171": {"find": "([\s\n]+https:..www(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Proper xref formatting is preferred over giving a raw link. -->"},
    "172": {"find": "([\s\n]+mail\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |email| is preferred. -->"},
    "173": {"find": "([\s\n]+Mail\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Email| is preferred. -->"},
    "174": {"find": "([\s\n]+she[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |they| is preferred. -->"},
    "175": {"find": "([\s\n]+She[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |They| is preferred. -->"},
    "176": {"find": "([\w][\s\n]+On-demand(?!(\n|\s)(Broker|broker))(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |On-Demand| is preferred -- capitalize the |D| if you capitalized the |O|. -->"},
    "177": {"find": "([^:]\n\n\s*\d\.\sRun:(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Write what this command does. As in |Do x by running:| or |To do x, run:|. -->"},
    "178": {"find": "([^\.\*\+:\-]*,[^\.\*\+:\-]*,[^\.\*\+:\-]*,[^\.\*\+:\-]*,[^\.\*\+:\-]*,(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If a list, maybe reformat it as bullets. If this is a rambling sentence, break it up into smaller sentences. -->"},
    "179": {"find": "([^\.\n]\s\bChart\b(?=[\s\n]+[\.a-z]+[\s\n]+[\.a-z]+)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |chart| is preferred unless part of a pronoun. -->"},
    "180": {"find": "([^\.`]yaml\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |YAML| is preferred. -->"},
    "181": {"find": "([^\s\n]\<\/em\>(?![\s\n\<\.:,-])(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- A space is likely missing here. -->"},
    "182": {"find": "([^\s\n]\<\/strong\>(?![\s\n\<\.:,-])(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- A space is likely missing here. -->"},
    "183": {"find": "([^\s\n\>]\<em\>(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- A space is likely missing here. -->"},
    "184": {"find": "([^\s\n\>]\<strong\>(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- A space is likely missing here. -->"},
    "185": {"find": "([^A-Za-z0-9\s][^A-Za-z0-9\s][^A-Za-z0-9\s][\s\n]+character\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Write the word for the special character so that screen readers can read it. -->"},
    "186": {"find": "([^A-Za-z0-9\s][^A-Za-z0-9\s][^A-Za-z0-9\s][\s\n]+characters\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Write the word for the special character so that screen readers can read it. -->"},
    "187": {"find": "([^a][\s\n]+third[\s\n]+party\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |third-party| is preferred when an adjective. -->"},
    "188": {"find": "([^bo][\s\n]+button\b(?![^\[\(]*[\]\)])(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Delete |button| if redundant. For example, write |click Save| instead of |Click the Save button|. -->"},
    "189": {"find": "([^e][\s\n]+Tanzu[\s\n]+Network\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware Tanzu Network| is preferred. Note the lack of |the|. -->"},
    "190": {"find": "([^f][\s\n]+the[\s\n]+following:(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- To introduce steps just write |To do x:| -->"},
    "191": {"find": "([^h][\s\n]+SAWS\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |TriggerMesh SAWS| is the preferred abbreviation after first use. -->"},
    "192": {"find": "([^n]\b[\s\n]+real[\s\n]+time\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |real-time| is preferred. -->"},
    "193": {"find": "([^r][\s\n]+Amazon[\s\n]+Web[\s\n]+Services(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |AWS| after the first use. -->"},
    "194": {"find": "([^r][\s\n]+image[\s\n]+registry\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If generic, |container image registry| on first use. If VMware-provided, |Tanzu Network Registry| on first use. In both cases, |registry| thereafter except where risking ambiguity. -->"},
    "195": {"find": "([^s][\s\n]+executable(?![\s\n]+file)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a noun. Use |executable file| instead. -->"},
    "196": {"find": "([^s][\s\n]+marketplace\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Marketplace| is preferred. -->"},
    "197": {"find": "([^u][^b][\s\n]+Maestro\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not shorten |CredHub Maestro| to just |Maestro| -->"},
    "198": {"find": "([A-Z][A-Z]+'s\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- To make an abbreviation a plural, just add a lowercase |s| without an apostrophe. -->"},
    "199": {"find": "([a-z]*[\s\n]+or[\s\n]+[a-z]*[\s\n]+not\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "200": {"find": "([A-Z]+[a-z]+[\s\n]+style(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Check if |style| needs a hyphen. -->"},
    "201": {"find": "([a-z`\*]+,[\s\n]+[a-z`\*]+[\s\n]+and[\s\n]+[a-z`\*]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Insert the Oxford comma if it is missing here. -->"},
    "202": {"find": "([a-z`\*]+,[\s\n]+[a-z`\*]+[\s\n]+or[\s\n]+[a-z`\*]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Insert the Oxford comma if it is missing here. -->"},
    "203": {"find": "([A-Za-z];(?=[\s\n]+[A-Za-z]+)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Two sentences are preferred over a compound sentence that uses a semi-colon. -->"},
    "204": {"find": "([A-Za-z][a-z]+teen\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use numerals for numbers greater than nine. -->"},
    "205": {"find": "([A-Za-z]{2,}[\s\n]*&(?=[\s\n]*)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |and| is preferred. -->"},
    "206": {"find": "(\(Go\)[\s\n]+Router\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Gorouter| is preferred. -->"},
    "207": {"find": "(\(s\)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not combine a singular and a plural. Maybe write |one or more| instead. -->"},
    "208": {"find": "(\)[\s\n]doc\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Wrong xref style. See https://docs-wiki.tas.vmware.com/wiki/style/cross-ref-style.html -->"},
    "209": {"find": "(\)[\s\n]page\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Wrong xref style. See https://docs-wiki.tas.vmware.com/wiki/style/cross-ref-style.html -->"},
    "210": {"find": "(\)[\s\n]topic\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Wrong xref style. See https://docs-wiki.tas.vmware.com/wiki/style/cross-ref-style.html -->"},
    "211": {"find": "(\<sup\>\*\<\/sup\>(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use footnotes anywhere, including tables. -->"},
    "212": {"find": "(\|[\s\n]*\*(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Put the asterisk in superscript tags. -->"},
    "213": {"find": "(\|\s*[^\|\.]*\.\s*\|(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not include closing punctuation for a sentence fragment in a cell, unless it is followed by another fragment or sentence. -->"},
    "214": {"find": "(\b(a|an|any|that|the|these|this|those)[\s\n]+[\w]{4,}[\s\n]+backed\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If this is a compound modifier then it is missing a hyphen. -->"},
    "215": {"find": "(\b[^-]check[\s\n]+(?!mark|box)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |verify|, |ensure|, and |confirm| are all preferred. -->"},
    "216": {"find": "(\b[^d][\s\n]+Web\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Capitalize only when you use the term |World Wide Web|. Do not use |WWW|. Do not capitalize |the web|. -->"},
    "217": {"find": "(\b[a-z-]+[\s\n]+single-sign-on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- SSO stands for |single sign-on|. Note the casing and hyphen placement. -->"},
    "218": {"find": "(\b[a-z-]+[\s\n]+Single-sign-on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- SSO stands for |single sign-on|. Note the casing and hyphen placement. -->"},
    "219": {"find": "(\b[a-z-]+[\s\n]+Single-Sign-on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- SSO stands for |single sign-on|. Note the casing and hyphen placement. -->"},
    "220": {"find": "(\b[a-z-]+[\s\n]+Single-Sign-On\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- SSO stands for |single sign-on|. Note the casing and hyphen placement. -->"},
    "221": {"find": "(\b[a-z-]+[\s\n]+Single[\s\n]+sign-on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- SSO stands for |single sign-on|. Note the casing and hyphen placement. -->"},
    "222": {"find": "(\b[a-z-]+[\s\n]+Single[\s\n]+Sign-on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- SSO stands for |single sign-on|. Note the casing and hyphen placement. -->"},
    "223": {"find": "(\b[a-z-]+[\s\n]+Single[\s\n]+Sign-On\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- SSO stands for |single sign-on|. Note the casing and hyphen placement. -->"},
    "224": {"find": "(\b[A-Z][a-z-]+[\s\n]+native\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If this is a compound adjective then it is missing a hyphen. -->"},
    "225": {"find": "(\b[A-Z][a-z-]+[\s\n]+Wizard\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |wizard| is preferred when written after the formal name of a wizard. -->"},
    "226": {"find": "(\b[a-z]\.\s[A-Z](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Write all ordered steps as numbers. -->"},
    "227": {"find": "(\b[a-z]+[\s\n]+Return(?!=[\s\n]+to\b)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Enter| is the preferred name for the keyboard key. -->"},
    "228": {"find": "(\b[a-z]n[\s\n]+step[\s\n]+\d(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |earlier| or |later| is preferred instead of referring to the step number: numbers can change with edits. -->"},
    "229": {"find": "(\b[A-Z]n[\s\n]+step[\s\n]+\d(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |earlier| or |later| is preferred instead of referring to the step number: numbers can change with edits. -->"},
    "230": {"find": "(\ba[\s\n]+deploy\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |a deployment| is preferred. -->"},
    "231": {"find": "(\bA[\s\n]+deploy\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |A deployment| is preferred. -->"},
    "232": {"find": "(\ba[\s\n]+given\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "233": {"find": "(\ba[\s\n]+HA[\s\n]+cluster\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |an HA cluster| is preferred. -->"},
    "234": {"find": "(\bA[\s\n]+HA[\s\n]+cluster\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |An HA cluster| is preferred. -->"},
    "235": {"find": "(\ba[\s\n]+RSU\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |an RSU| is preferred. -->"},
    "236": {"find": "(\bA[\s\n]+RSU\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |an RSU| is preferred. -->"},
    "237": {"find": "(\ba[\s\n]+single[\s\n]+time\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Once? -->"},
    "238": {"find": "(\ba[\s\n]+SQL\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |an SQL| is preferred. -->"},
    "239": {"find": "(\bable[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |can| is preferred. -->"},
    "240": {"find": "(\babort\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Where practical, |stop| is preferred. Other alternatives: |cancel|, |halt prematurely|, |end prematurely|, |stop prematurely|. -->"},
    "241": {"find": "(\bAbort\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Where practical, |Stop| is preferred. Other alternatives: |Cancel|, |Halt prematurely|, |End prematurely|, |Stop prematurely|. -->"},
    "242": {"find": "(\bAbove\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If referring to a page location, use |Earlier| or, better, just use an anchor. If referring to product versions, use |Later|. -->"},
    "243": {"find": "(\babove\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If referring to a page location, use |earlier| or, better, just use an anchor. If referring to product versions, use |later|. -->"},
    "244": {"find": "(\bactively\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "245": {"find": "(\bActually\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Delete unless referring to a situation that is actual instead of virtual. Most uses are extraneous. -->"},
    "246": {"find": "(\bactually\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Delete unless referring to a situation that is actual instead of virtual. Most uses are extraneous. -->"},
    "247": {"find": "(\badaptor\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |adapter| is preferred. -->"},
    "248": {"find": "(\bAdaptor\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Adapter| is preferred. -->"},
    "249": {"find": "(\badaptors\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |adapters| is preferred. -->"},
    "250": {"find": "(\bAdaptors\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Adapters| is preferred. -->"},
    "251": {"find": "(\baddon\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |add-on| is preferred. -->"},
    "252": {"find": "(\bADFS\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Write |AD FS| per the Microsoft preference. -->"},
    "253": {"find": "(\badministrate\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |administer| is preferred or, ideally, a plainer synonym such as |manage|. -->"},
    "254": {"find": "(\bAdministrate\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Administer| is preferred or, ideally, a plainer synonym such as |Manage|. -->"},
    "255": {"find": "(\badministrated\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |administered| is preferred or, ideally, a plainer synonym such as |managed|. -->"},
    "256": {"find": "(\badministrates\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |administers| is preferred or, ideally, a plainer synonym such as |manages|. -->"},
    "257": {"find": "(\badministrating\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |administering| is preferred or, ideally, a plainer synonym such as |managing|. -->"},
    "258": {"find": "(\bAdministrating\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Administering| is preferred or, ideally, a plainer synonym such as |Managing|. -->"},
    "259": {"find": "(\badministrator\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |admin| is preferred. -->"},
    "260": {"find": "(\bAdministrator\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Admin| is preferred. -->"},
    "261": {"find": "(\bAdministrators\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Admins| is preferred. -->"},
    "262": {"find": "(\badministrators\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |admins| is preferred. -->"},
    "263": {"find": "(\baffect\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider using a more precise verb. -->"},
    "264": {"find": "(\bafter[\s\n]+you[\s\n]+are[\s\n]+satisfied\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "265": {"find": "(\bAfter[\s\n]+you[\s\n]+are[\s\n]+satisfied\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "266": {"find": "(\baggregated[\s\n]+APIs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The k8s term |Aggregated APIs| is title case. -->"},
    "267": {"find": "(\bAI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |application instance| is preferred. -->"},
    "268": {"find": "(\bair-gap\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The noun is |air gap|. -->"},
    "269": {"find": "(\bair[\s\n]+gapped\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |air-gapped| is preferred. -->"},
    "270": {"find": "(\bAir[\s\n]+gapped\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Air-gapped| is preferred. -->"},
    "271": {"find": "(\bairgap\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |air-gap| is preferred. -->"},
    "272": {"find": "(\bAirgap\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Air-gap| is preferred. -->"},
    "273": {"find": "(\bairgapped\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |air-gapped| is preferred. -->"},
    "274": {"find": "(\bAirgapped\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Air-gapped| is preferred. -->"},
    "275": {"find": "(\balert[\s\n]+box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dialog box| is preferred. -->"},
    "276": {"find": "(\bAlert[\s\n]+box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dialog box| is preferred. -->"},
    "277": {"find": "(\bAlert[\s\n]+window\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dialog box| is preferred. -->"},
    "278": {"find": "(\balert[\s\n]+window\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dialog box| is preferred. -->"},
    "279": {"find": "(\ball[\s\n]+the[\s\n]+necessary\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |all| might be redundant -->"},
    "280": {"find": "(\bAll[\s\n]+the[\s\n]+necessary\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |All| might be redundant -->"},
    "281": {"find": "(\ballow[\s\n]+list\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |allowlist| is preferred. No space. -->"},
    "282": {"find": "(\balong[\s\n]+with\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a conjunction. Whenever possible, use |with| or |and| instead. -->"},
    "283": {"find": "(\bAlong[\s\n]+with\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a conjunction. Whenever possible, use |with| or |and| instead. -->"},
    "284": {"find": "(\balpha-numeric\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |alphanumeric| is preferred. -->"},
    "285": {"find": "(\balso[\s\n]+possible[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Active voice |you can also| might be better. -->"},
    "286": {"find": "(\bAmazon[\s\n]+Web[\s\n]+Service\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Amazon Web Services| on first use and |AWS| thereafter. -->"},
    "287": {"find": "(\ban[\s\n]+earlier[\s\n]+step\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Write |earlier in this procedure| or, if referring to a separate procedure, link to it. -->"},
    "288": {"find": "(\ban[\s\n]+UAA\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |a UAA| is preferred. -->"},
    "289": {"find": "(\bAn[\s\n]+UAA\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |A UAA| is preferred. -->"},
    "290": {"find": "(\band\/or\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |or| is preferred. -->"},
    "291": {"find": "(\banti-virus\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |antivirus| is preferred. -->"},
    "292": {"find": "(\bAnytime\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Whenever| is preferred. -->"},
    "293": {"find": "(\banytime\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |whenever| is preferred. -->"},
    "294": {"find": "(\bAPI[\s\n]+Portal\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |API portal| is the preferred casing in the TAP docs. -->"},
    "295": {"find": "(\bapi\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |API| is preferred. -->"},
    "296": {"find": "(\bApi\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |API| is preferred. -->"},
    "297": {"find": "(\bapp[\s\n]+accelerator[\s\n]+GUI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Application Accelerator UI| is preferred. -->"},
    "298": {"find": "(\bApp[\s\n]+accelerator[\s\n]+GUI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Application Accelerator UI| is preferred. -->"},
    "299": {"find": "(\bapp[\s\n]+Accelerator[\s\n]+GUI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Application Accelerator UI| is preferred. -->"},
    "300": {"find": "(\bapp[\s\n]+accelerator[\s\n]+UI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Application Accelerator UI| is preferred. -->"},
    "301": {"find": "(\bApp[\s\n]+accelerator[\s\n]+UI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Application Accelerator UI| is preferred. -->"},
    "302": {"find": "(\bapp[\s\n]+Accelerator[\s\n]+UI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Application Accelerator UI| is preferred. -->"},
    "303": {"find": "(\bapp[\s\n]+container\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |application container| is preferred. -->"},
    "304": {"find": "(\bApp[\s\n]+Developer\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |app developer| is preferred. -->"},
    "305": {"find": "(\bApp[\s\n]+manager\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Apps Manager| is preferred. -->"},
    "306": {"find": "(\bappendices\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |appendixes| is preferred. -->"},
    "307": {"find": "(\bAppendices\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Appendixes| is preferred. -->"},
    "308": {"find": "(\bapplication[\s\n]+accelerator[\s\n]+GUI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Application Accelerator UI| is preferred. -->"},
    "309": {"find": "(\bApplication[\s\n]+accelerator[\s\n]+GUI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Application Accelerator UI| is preferred. -->"},
    "310": {"find": "(\bapplication[\s\n]+Accelerator[\s\n]+GUI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Application Accelerator UI| is preferred. -->"},
    "311": {"find": "(\bapplication[\s\n]+accelerator[\s\n]+UI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Application Accelerator UI| is preferred. -->"},
    "312": {"find": "(\bApplication[\s\n]+accelerator[\s\n]+UI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Application Accelerator UI| is preferred. -->"},
    "313": {"find": "(\bapplication[\s\n]+Accelerator[\s\n]+UI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Application Accelerator UI| is preferred. -->"},
    "314": {"find": "(\bapplication[\s\n]+developer\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |app developer| is preferred. -->"},
    "315": {"find": "(\bapplication[\s\n]+program[\s\n]+interface\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |API| is preferred. -->"},
    "316": {"find": "(\bapplication[\s\n]+security[\s\n]+group\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |ASG| is preferred. -->"},
    "317": {"find": "(\bApplication[\s\n]+Transformation\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |App Modernization| is preferred. -->"},
    "318": {"find": "(\bApplication[\s\n]+VM\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |host VM| is preferred. -->"},
    "319": {"find": "(\bApplication[\s\n]+Workload\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |application workload| is preferred. -->"},
    "320": {"find": "(\bApplication[\s\n]+Workloads\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |application workloads| is preferred. -->"},
    "321": {"find": "(\bAppTX\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |App Modernization| is preferred. -->"},
    "322": {"find": "(\bApr\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |April| is preferred. -->"},
    "323": {"find": "(\bare[\s\n]going[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |going to| might be redundant. -->"},
    "324": {"find": "(\bartefact\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |artifact| is preferred. -->"},
    "325": {"find": "(\bArtefact\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Artifact| is preferred. -->"},
    "326": {"find": "(\bAs[\s\n]+an[\s\n]+example,(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |For example,| might be better here. -->"},
    "327": {"find": "(\bas[\s\n]+an[\s\n]+example,(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |for example,| might be better here. -->"},
    "328": {"find": "(\bas[\s\n]+long[\s\n]+as\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |if| is preferred. -->"},
    "329": {"find": "(\bAs[\s\n]+long[\s\n]+as\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |If| is preferred. -->"},
    "330": {"find": "(\bas[\s\n]+well[\s\n]+as\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |and| is preferred. -->"},
    "331": {"find": "(\bassist[\s\n]+with\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Simply |help| is preferred. -->"},
    "332": {"find": "(\bassistance\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |help| is preferred. -->"},
    "333": {"find": "(\bassists[\s\n]+with\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Simply |helps| is preferred. -->"},
    "334": {"find": "(\bassumes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not write |this procedure assumes x|. Rewrite as prerequisites. -->"},
    "335": {"find": "(\bAssuming\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |If| might be better here. -->"},
    "336": {"find": "(\bat[\s\n]+the[\s\n]+moment\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- 1st preference: delete. 2nd preference: replace these words with |currently|. -->"},
    "337": {"find": "(\bAt[\s\n]+the[\s\n]+moment\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- 1st preference: delete. 2nd preference: replace these words with |Currently|. -->"},
    "338": {"find": "(\bat[\s\n]+the[\s\n]+time[\s\n]+of[\s\n]+writing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- 1st preference: delete. 2nd preference: replace these words with |currently|. -->"},
    "339": {"find": "(\bAt[\s\n]+the[\s\n]+time[\s\n]+of[\s\n]+writing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- 1st preference: delete. 2nd preference: replace these words with |Currently|. -->"},
    "340": {"find": "(\bat[\s\n]+this[\s\n]+point\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Remove (this phrase is unnecessary in steps) or replace with a less wordy alternative. -->"},
    "341": {"find": "(\bAt[\s\n]+this[\s\n]+point\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Remove (this phrase is unnecessary in steps) or replace with a less wordy alternative. -->"},
    "342": {"find": "(\bAug\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |August| is preferred. -->"},
    "343": {"find": "(\bauth\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |authentication| is preferred. -->"},
    "344": {"find": "(\bauto-run\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |autorun| is preferred. -->"},
    "345": {"find": "(\bAuto-run\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Autorun| is preferred. -->"},
    "346": {"find": "(\bauto[\s\n]+TLS\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Auto TLS| is the preferred casing. -->"},
    "347": {"find": "(\bavailability[\s\n]+zone[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |AZ| after the first use. -->"},
    "348": {"find": "(\bAvailability[\s\n]+zone[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |AZ| after the first use. -->"},
    "349": {"find": "(\bAvailability[\s\n]+Zone\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |availability zone (AZ)| on first use and |AZ| thereafter. -->"},
    "350": {"find": "(\bavailability[\s\n]+zones[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |AZ| after the first use. -->"},
    "351": {"find": "(\bAvailability[\s\n]+zones[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |AZ| after the first use. -->"},
    "352": {"find": "(\baware\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- To avoid anthropomorphism, use |detects|. -->"},
    "353": {"find": "(\bAWS[\s\n]+S3(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Amazon S3| is preferred. -->"},
    "354": {"find": "(\bAzure[\s\n]+Active[\s\n]+Directory[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Azure Active Directory (AD)| on first use. or |Azure AD| thereafter. -->"},
    "355": {"find": "(\bAzure[\s\n]+Active[\s\n]+directory\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Azure Active Directory (AD)| on first use. or |Azure AD| thereafter. -->"},
    "356": {"find": "(\bAzure[\s\n]+active[\s\n]+directory\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Azure Active Directory (AD)| on first use. or |Azure AD| thereafter. -->"},
    "357": {"find": "(\bback-up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The noun is |backup| and the verb is |back up|. -->"},
    "358": {"find": "(\bBack-up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The noun is |backup| and the verb is |back up|. -->"},
    "359": {"find": "(\bbackend\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |back end| is preferred. -->"},
    "360": {"find": "(\bbasically\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "361": {"find": "(\bBasically\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "362": {"find": "(\bbe[\s\n]+[a-z-]*ed[\s\n]+by\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Active voice is preferred. -->"},
    "363": {"find": "(\bbe[\s\n]+sufficient\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |suffice| is punchier. -->"},
    "364": {"find": "(\bbe[\s\n]+sure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? |before| might be better. -->"},
    "365": {"find": "(\bBe[\s\n]+sure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? |Before| might be better. -->"},
    "366": {"find": "(\bBefore\b[^,]*,[\s\n]+first\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |first| is likely redundant. -->"},
    "367": {"find": "(\bbefore\b[^,]*,[\s\n]+first\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |first| is likely redundant. -->"},
    "368": {"find": "(\bBelow\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If referring to a page location, use |Following| or |Later| or, better, just use an anchor. If referring to product versions, use |Earlier|. -->"},
    "369": {"find": "(\bbelow\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If referring to a page location, use |following| or |later| or, better, just use an anchor. If referring to product versions, use |earlier|. -->"},
    "370": {"find": "(\bBest[\s\n]+Practice\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Best Practice sections are discouraged. Check if the material could be placed somewhere else. -->"},
    "371": {"find": "(\bBest[\s\n]+Practices\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Best Practice sections are discouraged. Check if the material could be placed somewhere else. -->"},
    "372": {"find": "(\bBETA\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |beta| is preferred. -->"},
    "373": {"find": "(\bbi-directional\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |bidirectional| is preferred. -->"},
    "374": {"find": "(\bBi-directional\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Bidirectional| is preferred. -->"},
    "375": {"find": "(\bBig[\s\n]+Data\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |big data| is preferred. -->"},
    "376": {"find": "(\bbit-map\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |bitmap| is preferred. -->"},
    "377": {"find": "(\bBit-map\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Bitmap| is preferred. -->"},
    "378": {"find": "(\bbit-maps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |bitmaps| is preferred. -->"},
    "379": {"find": "(\bBit-maps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Bitmaps| is preferred. -->"},
    "380": {"find": "(\bblack-list\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred noun: |denylist|. Other alternative: |banned list|. Preferred verb: |block|. Other alternatives: |deny|, |ban|. -->"},
    "381": {"find": "(\bBlack-list\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred noun: |Denylist|. Other alternative: |Banned list|. Preferred verb: |Block|. Other alternatives: |Deny|, |Ban|. -->"},
    "382": {"find": "(\bBlack-out\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred verb: |Restrict|. Preferred noun: |Restriction|. Other alternative noun: |Outage|. -->"},
    "383": {"find": "(\bblack-out\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred verb: |restrict|. Preferred noun: |restriction|. Other alternative noun: |outage|. -->"},
    "384": {"find": "(\bblack[\s\n]+hat\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |unethical hacker| is preferred. -->"},
    "385": {"find": "(\bBlack[\s\n]+hat\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Unethical hacker| is preferred. -->"},
    "386": {"find": "(\bBlack[\s\n]+Hat\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Unethical Hacker| is preferred. -->"},
    "387": {"find": "(\bblack[\s\n]+list\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred noun: |denylist|. Other alternative: |banned list|. Preferred verb: |block|. Other alternatives: |deny|, |ban|. -->"},
    "388": {"find": "(\bblack[\s\n]+screen[\s\n]+of[\s\n]+death\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with a description of what the user sees and recommend a course of action. -->"},
    "389": {"find": "(\bBlack[\s\n]+screen[\s\n]+of[\s\n]+death\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with a description of what the user sees and recommend a course of action. -->"},
    "390": {"find": "(\bBlack[\s\n]+Screen[\s\n]+of[\s\n]+Death\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with a description of what the user sees and recommend a course of action. -->"},
    "391": {"find": "(\bblacklist\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred noun: |Denylist|. Other alternative: |Banned list|. Preferred verb: |Block|. Other alternatives: |Deny|, |Ban|. -->"},
    "392": {"find": "(\bBlackout\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred verb: |Restrict|. Preferred noun: |Restriction|. Other alternative noun: |Outage|. -->"},
    "393": {"find": "(\bblackout\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred verb: |restrict|. Preferred noun: |restriction|. Other alternative noun: |outage|. -->"},
    "394": {"find": "(\bblob[\s\n]+store\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |blobstore| is preferred. -->"},
    "395": {"find": "(\bBlue-Green[\s\n]+deployment\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |blue-green deployment| is preferred. -->"},
    "396": {"find": "(\bblue[\s\n]+screen[\s\n]+of[\s\n]+death\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with a description of what the user sees and recommend a course of action. -->"},
    "397": {"find": "(\bBlue[\s\n]+screen[\s\n]+of[\s\n]+death\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with a description of what the user sees and recommend a course of action. -->"},
    "398": {"find": "(\bBlue[\s\n]+Screen[\s\n]+of[\s\n]+Death\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with a description of what the user sees and recommend a course of action. -->"},
    "399": {"find": "(\bboolean\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Boolean| is preferred unless it is in programming documentation as a primitive. -->"},
    "400": {"find": "(\bbooleans\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Boolean values| is preferred. -->"},
    "401": {"find": "(\bBooleans\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Boolean values| is preferred. -->"},
    "402": {"find": "(\bboot(?=[\s\n]+the|[\s\n]+this|[\s\n]+up)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |start| is preferred outside of developer documentation. -->"},
    "403": {"find": "(\bBoot(?=[\s\n]+the|[\s\n]+this|[\s\n]+up)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Start| is preferred outside of developer documentation. -->"},
    "404": {"find": "(\bBOSH-init\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |bosh-init| is preferred. -->"},
    "405": {"find": "(\bBosh(?![\n\s-]lite)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |BOSH| is preferred. -->"},
    "406": {"find": "(\bbosh[\s\n]+(?![\n\s-]lite)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |BOSH| is preferred. -->"},
    "407": {"find": "(\bBOSH[\s\n]+director\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |BOSH Director| is preferred. -->"},
    "408": {"find": "(\bBOSH[\s\n]+Health[\s\n]+Monitor[\s\n]+metrics\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |BOSH health metrics| is preferred. -->"},
    "409": {"find": "(\bbosh[\s\n]+lite\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |BOSH-Lite| is preferred. -->"},
    "410": {"find": "(\bBOSH[\s\n]+lite\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |BOSH-Lite| is preferred. -->"},
    "411": {"find": "(\bBOSH[\s\n]+Lite\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |BOSH-Lite| is preferred. -->"},
    "412": {"find": "(\bBOSH[\s\n]+metrics\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |BOSH health metrics| is preferred. -->"},
    "413": {"find": "(\bBOSH[\s\n]+System[\s\n]+Metrics\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |BOSH health metrics| is preferred. -->"},
    "414": {"find": "(\bBPM\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |bpm| is preferred as this is the BOSH docs style. -->"},
    "415": {"find": "(\bbring[\s\n]+down\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |close| or |stop| is preferred. -->"},
    "416": {"find": "(\bBring[\s\n]+down\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Close| or |Stop| is preferred. -->"},
    "417": {"find": "(\bbring[\s\n]+up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |display| is preferred. -->"},
    "418": {"find": "(\bBring[\s\n]+up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Display| is preferred. -->"},
    "419": {"find": "(\bBrokerpak\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Only capitalize |brokerpak| when it is in a title or starts a sentence. -->"},
    "420": {"find": "(\bBrokerpaks\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Only capitalize |brokerpaks| when it is in a title or starts a sentence. -->"},
    "421": {"find": "(\bbrowse\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |navigate| is preferred. -->"},
    "422": {"find": "(\bBrowse\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Navigate| is preferred. -->"},
    "423": {"find": "(\bBSOD\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with a description of what the user sees and recommend a course of action. -->"},
    "424": {"find": "(\bbug\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |issue| is preferred. -->"},
    "425": {"find": "(\bBug\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Issue| is preferred. -->"},
    "426": {"find": "(\bbugs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |issue| is preferred. -->"},
    "427": {"find": "(\bBugs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Issue| is preferred. -->"},
    "428": {"find": "(\bbump\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |update| is preferred. -->"},
    "429": {"find": "(\bBump\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Update| is preferred. -->"},
    "430": {"find": "(\bBumped\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Updated| is preferred. -->"},
    "431": {"find": "(\bbumped\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |updated| is preferred. -->"},
    "432": {"find": "(\bbumps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |updates| is preferred. -->"},
    "433": {"find": "(\bBumps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Updates| is preferred. -->"},
    "434": {"find": "(\bBus[\s\n]+Logic\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |BusLogic| is preferred. -->"},
    "435": {"find": "(\bby[\s\n]+means[\s\n]+of\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |by| or |with| is preferred. -->"},
    "436": {"find": "(\bcakewalk\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |easy| is preferred. -->"},
    "437": {"find": "(\bCakewalk\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Easy| is preferred. -->"},
    "438": {"find": "(\bcan[\s\n]+be\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider switching to active voice. -->"},
    "439": {"find": "(\bcan[\s\n]+get[\s\n]+[a-z-]*ed\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |could be| is likely the correct grammar here if sticking with passive voice. -->"},
    "440": {"find": "(\bcanceled\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |cancelled|. -->"},
    "441": {"find": "(\bCanceled\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |Cancelled|. -->"},
    "442": {"find": "(\bcanceling\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |cancelling|. -->"},
    "443": {"find": "(\bCanceling\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |Cancelling|. -->"},
    "444": {"find": "(\bcase[\s\n]+sensitive\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |case-sensitive| is preferred. -->"},
    "445": {"find": "(\bCase[\s\n]+sensitive\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Case-sensitive| is preferred. -->"},
    "446": {"find": "(\bcatalogue\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |catalog| is preferred. -->"},
    "447": {"find": "(\bCatalogue\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Catalog| is preferred. -->"},
    "448": {"find": "(\bcatalogues\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |catalog| is preferred. -->"},
    "449": {"find": "(\bCatalogues\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Catalogs| is preferred. -->"},
    "450": {"find": "(\bcauses[\s\n]+downtime[\s\n]+of[\s\n]+the\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |causes downtime for the| is preferred. -->"},
    "451": {"find": "(\bcauses[\s\n]+downtime[\s\n]+on[\s\n]+the\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |causes downtime for the| is preferred. -->"},
    "452": {"find": "(\bcauses[\s\n]+downtime[\s\n]+to[\s\n]+the\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |causes downtime for the| is preferred. -->"},
    "453": {"find": "(\bCC[\s\n]+API\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |CAPI| is preferred. -->"},
    "454": {"find": "(\bCell[\s\n]+VM\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |host VM| is preferred. -->"},
    "455": {"find": "(\bCert-Manager\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |cert-manager| is preferred. -->"},
    "456": {"find": "(\bCert-manager\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |cert-manager| is preferred. -->"},
    "457": {"find": "(\bCert[\s\n]+Manager\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |cert-manager| is preferred. -->"},
    "458": {"find": "(\bcert[\s\n]+manager\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |cert-manager| is preferred. -->"},
    "459": {"find": "(\bcert\b[^-`](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |certificate| is preferred. -->"},
    "460": {"find": "(\bcertificate[\s\n]+authority[\s\n]+certificate[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |certificate authority (CA) certificate| on first use. |CA certificate| thereafter. -->"},
    "461": {"find": "(\bCertificate[\s\n]+Authority[\s\n]+certificate[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |certificate authority (CA) certificate| on first use. |CA certificate| thereafter. -->"},
    "462": {"find": "(\bcertificate[\s\n]+authority[\s\n]+certificates[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |certificate authority (CA) certificate| on first use. |CA certificate| thereafter. -->"},
    "463": {"find": "(\bCertificate[\s\n]+Authority[\s\n]+certificates[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |certificate authority (CA) certificate| on first use. |CA certificate| thereafter. -->"},
    "464": {"find": "(\bcertificate[\s\n]+signing[\s\n]+request[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |CSR| after first use. -->"},
    "465": {"find": "(\bCertificate[\s\n]+signing[\s\n]+request[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |CSR| after first use. -->"},
    "466": {"find": "(\bCertificate[\s\n]+Signing[\s\n]+Request[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |CSR| after first use. -->"},
    "467": {"find": "(\bcertificate[\s\n]+signing[\s\n]+requests[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |CSR| after first use. -->"},
    "468": {"find": "(\bCertificate[\s\n]+signing[\s\n]+requests[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |CSR| after first use. -->"},
    "469": {"find": "(\bCertificate[\s\n]+Signing[\s\n]+Requests[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |CSR| after first use. -->"},
    "470": {"find": "(\bcerts\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |certificates| is preferred. -->"},
    "471": {"find": "(\bCF-compatible[\s\n]+CNB[\s\n]+buildpack\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |CF-compatible CNB| is preferred. -->"},
    "472": {"find": "(\bCF[\s\n]+(?![Cc][Ll][Ii])(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Foundry| is preferred. -->"},
    "473": {"find": "(\bcf[\s\n]+cli\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The brand name is shortened as |cf CLI|. -->"},
    "474": {"find": "(\bCF[\s\n]+CLI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The brand name is shortened as |cf CLI|. -->"},
    "475": {"find": "(\bcf[\s\n]+push\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If code, add code tags and sandwich between |the| and |command|. -->"},
    "476": {"find": "(\bchannel[\s\n]+Partner\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |channel partner| is preferred. -->"},
    "477": {"find": "(\bchannel[\s\n]+Partners\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |channel partners| is preferred. -->"},
    "478": {"find": "(\bchart[\s\n]+museum\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |ChartMuseum| is preferred. -->"},
    "479": {"find": "(\bChart[\s\n]+Museum\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |ChartMuseum| is preferred. -->"},
    "480": {"find": "(\bchartmuseum\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |ChartMuseum| is preferred. -->"},
    "481": {"find": "(\bcheck[\s\n]+point\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |checkpoint| is preferred. -->"},
    "482": {"find": "(\bCheck[\s\n]+point\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Checkpoint| is preferred. -->"},
    "483": {"find": "(\bcheck[\s\n]+points\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |checkpoints| is preferred. -->"},
    "484": {"find": "(\bCheck[\s\n]+points\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Checkpoints| is preferred. -->"},
    "485": {"find": "(\bCheck[\s\n]+th[a-z]+[\s\n]+box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Select the check box| is preferred. -->"},
    "486": {"find": "(\bcheck[\s\n]+th[a-z]+[\s\n]+box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |select the check box| is preferred. -->"},
    "487": {"find": "(\bCheck\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Verify|, |Ensure|, and |Confirm| are all preferred. -->"},
    "488": {"find": "(\bcheckbox\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |check box| is preferred. -->"},
    "489": {"find": "(\bcheckmark\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |check mark| is preferred. -->"},
    "490": {"find": "(\bchip[\s\n]+set\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |chipset| is preferred. -->"},
    "491": {"find": "(\bChip[\s\n]+set\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Chipset| is preferred. -->"},
    "492": {"find": "(\bchip[\s\n]+sets\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |chipsets| is preferred. -->"},
    "493": {"find": "(\bChip[\s\n]+sets\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Chipsets| is preferred. -->"},
    "494": {"find": "(\bchooses[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider if |choose| is redundant. -->"},
    "495": {"find": "(\bClam[\s\n]+av\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |ClamAV| is preferred. -->"},
    "496": {"find": "(\bClam[\s\n]+AV\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |ClamAV| is preferred. -->"},
    "497": {"find": "(\bClamav\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |ClamAV| is preferred. -->"},
    "498": {"find": "(\bclean-up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The verb is |clean up|. The noun and adjective are both |cleanup|. -->"},
    "499": {"find": "(\bClean-up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Clean up| as a verb. |Cleanup| as a noun. -->"},
    "500": {"find": "(\bclear(?![\s\n]+text\b)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |deselect| is preferred if referring to menu items. -->"},
    "501": {"find": "(\bClear(?![\s\n]+text\b)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Deselect| is preferred if referring to menu items. -->"},
    "502": {"find": "(\bclear[\s\n]+text\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Unencrypted text is |plaintext|. Unformatted text is |plain text|. -->"},
    "503": {"find": "(\bClear[\s\n]+text\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Unencrypted text is |plaintext|. Unformatted text is |plain text|. -->"},
    "504": {"find": "(\bCLi\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |CLI| is the preferred casing. -->"},
    "505": {"find": "(\bCli\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |CLI| is the preferred casing. -->"},
    "506": {"find": "(\bClI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |CLI| is the preferred casing. -->"},
    "507": {"find": "(\bclick[\s\n]+[A-Z](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Embolden the names of UI elements. -->"},
    "508": {"find": "(\bClick[\s\n]+[A-Z](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Embolden the names of UI elements. -->"},
    "509": {"find": "(\bClick[\s\n]+OK[\s\n]+and[\s\n]+OK\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Click OK and click OK again| is preferred. -->"},
    "510": {"find": "(\bclick[\s\n]+OK[\s\n]+and[\s\n]+OK\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |click OK and click OK again| is preferred. -->"},
    "511": {"find": "(\bclick[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |click| is preferred. -->"},
    "512": {"find": "(\bClick[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Just |Click| is preferred for use with arrows, buttons, files, hyperlinks, icons, menus and menu items in a UI context that does not use a menu cascade, progressive disclosure controls, spin boxes. -->"},
    "513": {"find": "(\bclick[\s\n]+the[\s\n]+[A-Z](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Embolden the names of UI elements. -->"},
    "514": {"find": "(\bClick[\s\n]+the[\s\n]+[A-Z](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Embolden the names of UI elements. -->"},
    "515": {"find": "(\bclient\/server\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |client-server| is preferred. -->"},
    "516": {"find": "(\bcloud-native-buildpack\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Native Buildpack| is preferred. -->"},
    "517": {"find": "(\bCloud-Native-buildpack\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Native Buildpack| is preferred. -->"},
    "518": {"find": "(\bCloud-Native-Buildpack\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Native Buildpack| is preferred. -->"},
    "519": {"find": "(\bcloud-native[\s\n]+application[\s\n]+bundle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Native Application Bundle| has no hyphen and is capitalized. Shorten to |CNAB| after first use. -->"},
    "520": {"find": "(\bCloud-native[\s\n]+application[\s\n]+bundle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Native Application Bundle| has no hyphen and is capitalized. Shorten to |CNAB| after first use. -->"},
    "521": {"find": "(\bCloud-native[\s\n]+Buildpack\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Native Buildpack| is preferred. -->"},
    "522": {"find": "(\bCloud-Native[\s\n]+Buildpack\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Native Buildpack| is preferred. -->"},
    "523": {"find": "(\bCloud-Native[\s\n]+buildpack\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Native Buildpack| is preferred. -->"},
    "524": {"find": "(\bCloud[\s\n]+Controller[\s\n]+API\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- 1st use: |Cloud Foundry API (CAPI)|. Subsequent uses: |CAPI|. -->"},
    "525": {"find": "(\bcloud[\s\n]+controller\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Controller| is preferred. -->"},
    "526": {"find": "(\bCloud[\s\n]+Foundries\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Foundry| has no plural. |Cloud Foundry deployments| is likely what is meant. -->"},
    "527": {"find": "(\bcloud[\s\n]+foundries\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Foundry| has no plural. |Cloud Foundry deployments| is likely what is meant. -->"},
    "528": {"find": "(\bCloud[\s\n]+foundries\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Foundry| has no plural. |Cloud Foundry deployments| is likely what is meant. -->"},
    "529": {"find": "(\bCloud[\s\n]+Foundry[\s\n]+API(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |CAPI| after the first use. -->"},
    "530": {"find": "(\bCloud[\s\n]+Foundry[\s\n]+Organisation\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Foundry org| or just |org| is preferred. -->"},
    "531": {"find": "(\bCloud[\s\n]+Foundry[\s\n]+Organization\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Foundry org| or just |org| is preferred. -->"},
    "532": {"find": "(\bCloud[\s\n]+Native-Buildpack\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Native Buildpack| is preferred. -->"},
    "533": {"find": "(\bCloud[\s\n]+Native-buildpack\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Native Buildpack| is preferred. -->"},
    "534": {"find": "(\bCloud[\s\n]+native-Buildpack\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Native Buildpack| is preferred. -->"},
    "535": {"find": "(\bcloud[\s\n]+native(?!(-|\s)(buildpack|Buildpack|application[\s\n]+bundle|Applicable[\s\n]+Bundle))(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |cloud-native| is preferred. -->"},
    "536": {"find": "(\bCloud[\s\n]+native[\s\n]+application[\s\n]+bundle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Native Application Bundle| is capitalized. Shorten to |CNAB| after first use. -->"},
    "537": {"find": "(\bcloud[\s\n]+native[\s\n]+application[\s\n]+bundle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Native Application Bundle| is capitalized. Shorten to |CNAB| after first use. -->"},
    "538": {"find": "(\bcloud[\s\n]+native[\s\n]+buildpack\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Native Buildpack| is preferred. -->"},
    "539": {"find": "(\bCloud[\s\n]+Native[\s\n]+buildpack\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Native Buildpack| is preferred. -->"},
    "540": {"find": "(\bCloud[\s\n]+Service[\s\n]+Broker[\s\n]+on[\s\n]+AWS\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The shortened VMware product title is |Cloud Service Broker for AWS|. -->"},
    "541": {"find": "(\bcloud[\s\n]+service[\s\n]+broker[\s\n]+on[\s\n]+AWS\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The shortened VMware product title is |Cloud Service Broker for AWS|. -->"},
    "542": {"find": "(\bCloud[\s\n]+Service[\s\n]+Broker[\s\n]+on[\s\n]+Azure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The shortened VMware product title is |Cloud Service Broker for Azure|. -->"},
    "543": {"find": "(\bcloud[\s\n]+service[\s\n]+broker[\s\n]+on[\s\n]+Azure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The shortened VMware product title is |Cloud Service Broker for Azure|. -->"},
    "544": {"find": "(\bCloud[\s\n]+Service[\s\n]+Broker[\s\n]+on[\s\n]+GCP\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The shortened VMware product title is |Cloud Service Broker for GCP|. -->"},
    "545": {"find": "(\bcloud[\s\n]+service[\s\n]+broker[\s\n]+on[\s\n]+GCP\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The shortened VMware product title is |Cloud Service Broker for GCP|. -->"},
    "546": {"find": "(\bCloudController\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Controller| is preferred. -->"},
    "547": {"find": "(\bCloudformation\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |CloudFormation| is preferred. -->"},
    "548": {"find": "(\bCloudFoundry\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Foundry| is preferred -->"},
    "549": {"find": "(\bCNAB[\s\n]+bundle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Delete |bundle| -- it is already in the acronym |CNAB|. -->"},
    "550": {"find": "(\bCNAB[\s\n]+Bundle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Delete |Bundle| -- it is already in the acronym |CNAB|. -->"},
    "551": {"find": "(\bco-processor\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |coprocessor| is preferred. -->"},
    "552": {"find": "(\bCo-processor\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Coprocessor| is preferred. -->"},
    "553": {"find": "(\bco-processors\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |coprocessors| is preferred. -->"},
    "554": {"find": "(\bCo-processors\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Coprocessors| is preferred. -->"},
    "555": {"find": "(\bcodepath\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |code path| is preferred. -->"},
    "556": {"find": "(\bCodepath\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Code path| is preferred. -->"},
    "557": {"find": "(\bcodepaths\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |code paths| is preferred. -->"},
    "558": {"find": "(\bCodepaths\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Code paths| is preferred. -->"},
    "559": {"find": "(\bcofounder\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |co-founder| is preferred. -->"},
    "560": {"find": "(\bCofounder\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Co-founder| is preferred. -->"},
    "561": {"find": "(\bcofounders\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |co-founders| is preferred. -->"},
    "562": {"find": "(\bCofounders\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Co-founders| is preferred. -->"},
    "563": {"find": "(\bcollocate\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |co-locate| is now preferred. -->"},
    "564": {"find": "(\bcollocated\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |co-located| is now preferred. -->"},
    "565": {"find": "(\bcollocates\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |co-locates| is now preferred. -->"},
    "566": {"find": "(\bcollocating\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |co-locating| is preferred. -->"},
    "567": {"find": "(\bCollocating\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Co-locating| is preferred. -->"},
    "568": {"find": "(\bcolocate\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |co-locate| is now preferred. -->"},
    "569": {"find": "(\bcolocated\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |co-located| is now preferred. -->"},
    "570": {"find": "(\bcolocates\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |co-locates| is now preferred. -->"},
    "571": {"find": "(\bcolocating\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |co-locating| is preferred. -->"},
    "572": {"find": "(\bColocating\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Co-locating| is preferred. -->"},
    "573": {"find": "(\bcombine[\s\n]+them[\s\n]+together\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |together| might be redundant. -->"},
    "574": {"find": "(\bCombine[\s\n]+them[\s\n]+together\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |together| might be redundant. -->"},
    "575": {"find": "(\bcombining[\s\n]+them[\s\n]+together\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |together| might be redundant. -->"},
    "576": {"find": "(\bCombining[\s\n]+them[\s\n]+together\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |together| might be redundant. -->"},
    "577": {"find": "(\bcomes[\s\n]+with\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |included| is preferred. -->"},
    "578": {"find": "(\bcoming[\s\n]+soon\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Only document what exists. There are legal ramifications to making promises. -->"},
    "579": {"find": "(\bCommand[\s\n]+Line[\s\n]+Interface\b(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |CLI| after first use. -->"},
    "580": {"find": "(\bCommand[\s\n]+line[\s\n]+interface\b(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |CLI| after first use. -->"},
    "581": {"find": "(\bcommand[\s\n]+line[\s\n]+interface\b(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |CLI| after first use. -->"},
    "582": {"find": "(\bcommand[\s\n]+shell\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |shell| is preferred. -->"},
    "583": {"find": "(\bcompiletime\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |compile time| is preferred. -->"},
    "584": {"find": "(\bcomplain\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use to refer to the issuance of warnings. Replace with |issue warnings| or |display warnings|. -->"},
    "585": {"find": "(\bcomplete[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)procedure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |follow| is preferred over |complete|. -->"},
    "586": {"find": "(\bComplete[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)procedure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Follow| is preferred over |Complete|. -->"},
    "587": {"find": "(\bcomplete[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)procedures\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |follow| is preferred over |complete|. -->"},
    "588": {"find": "(\bComplete[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)procedures\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Follow| is preferred over |Complete|. -->"},
    "589": {"find": "(\bcomplete[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)steps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |follow| is preferred over |complete|. -->"},
    "590": {"find": "(\bComplete[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)steps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Follow| is preferred over |Complete|. -->"},
    "591": {"find": "(\bcomplete[\s\n]+one[\s\n]+of\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |complete one of the following actions| is better moved to the start of the step so that the reader is less likely to miss it. -->"},
    "592": {"find": "(\bcomponent[\s\n]+VM\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- All VMs are component VMs except for the host VMs. -->"},
    "593": {"find": "(\bconceivably\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "594": {"find": "(\bConceivably\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "595": {"find": "(\bconcerned[\s\n]+with\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |relevant to|, |pertinent to|, or |applicable to| is preferred. -->"},
    "596": {"find": "(\bConfig\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |config| is preferred. -->"},
    "597": {"find": "(\bConfirm[\s\n]+if\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Confirm that| is better. -->"},
    "598": {"find": "(\bconfirm[\s\n]+if\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |confirm that| is better. -->"},
    "599": {"find": "(\bcons\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |disadvantages| is preferred. -->"},
    "600": {"find": "(\bCons\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Disadvantages| is preferred. -->"},
    "601": {"find": "(\bconsole[\s\n]+OS\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |service console| is preferred unless referring specifically to the operating system for the console. -->"},
    "602": {"find": "(\bConsole[\s\n]+OS\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Service console| is preferred unless referring specifically to the operating system for the console. -->"},
    "603": {"find": "(\bcontainer[\s\n]+networking\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |CF Networking| is preferred. -->"},
    "604": {"find": "(\bcontainer[\s\n]+registry\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If generic, |container image registry| on first use. If VMware-provided, |Tanzu Network Registry| on first use. In both cases, |registry| thereafter except where risking ambiguity. -->"},
    "605": {"find": "(\bContinuous[\s\n]+Integration\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |continuous integration| is preferred. -->"},
    "606": {"find": "(\bcontrol-C\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Ctrl-C| is preferred. -->"},
    "607": {"find": "(\bControl-C\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Ctrl-C| is preferred. -->"},
    "608": {"find": "(\bcould've\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "609": {"find": "(\bcould\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |can| or |might| whenever possible is preferred. When providing examples, use simple present tense verbs instead of postulating what someone or something could or would do. -->"},
    "610": {"find": "(\bcoworker\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |co-worker| is preferred. -->"},
    "611": {"find": "(\bCoworker\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Co-worker| is preferred. -->"},
    "612": {"find": "(\bcoworkers\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |co-workers| is preferred. -->"},
    "613": {"find": "(\bCoworkers\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Co-workers| is preferred. -->"},
    "614": {"find": "(\bcpu\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |CPU| is preferred. -->"},
    "615": {"find": "(\bcrash\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |fail|, |become unavailable|, or |stop responding| is preferred. However, |crash| may be used as an index term and in release notes and KB articles if |stop responding| and |fail| cannot be used instead. -->"},
    "616": {"find": "(\bcrashes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |fails|, |becomes unavailable|, or |stops responding| is preferred. However, |crashes| may be used as an index term and in release notes and KB articles if |stops responding| and |fails| cannot be used instead. -->"},
    "617": {"find": "(\bcredhub\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The CF component is named |CredHub| -->"},
    "618": {"find": "(\bCredhub\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The CF component is named |CredHub| -->"},
    "619": {"find": "(\bCSB[\s\n]+on[\s\n]+AWS\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The shortened VMware product title is |Cloud Service Broker for AWS|. -->"},
    "620": {"find": "(\bCSB[\s\n]+on[\s\n]+Azure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The shortened VMware product title is |Cloud Service Broker for Azure|. -->"},
    "621": {"find": "(\bCSB[\s\n]+on[\s\n]+GCP\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The shortened VMware product title is |Cloud Service Broker for GCP|. -->"},
    "622": {"find": "(\bcURL\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |cURL| is the project. |curl| is the CLI. -->"},
    "623": {"find": "(\bcursor\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |pointer| is preferred. -->"},
    "624": {"find": "(\bCustom[\s\n]+resource[\s\n]+definition[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |CRD| after first use. -->"},
    "625": {"find": "(\bCustom[\s\n]+Resource[\s\n]+Definition[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |CRD| after first use. -->"},
    "626": {"find": "(\bcustom[\s\n]+resource[\s\n]+definition[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |CRD| after first use. -->"},
    "627": {"find": "(\bcustomer\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The intended reader is a VMware customer: |you| is better than addressing the reader in 3rd person. -->"},
    "628": {"find": "(\bCustomer\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The intended reader is a VMware customer: |You| is better than addressing the reader in 3rd person. -->"},
    "629": {"find": "(\bcustomers\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The intended reader is a VMware customer: |you| is better than addressing the reader in 3rd person. -->"},
    "630": {"find": "(\bCustomers\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The intended reader is a VMware customer: |You| is better than addressing the reader in 3rd person. -->"},
    "631": {"find": "(\bdata-center\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |data center| is preferred. -->"},
    "632": {"find": "(\bData-center\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Data center| is preferred. -->"},
    "633": {"find": "(\bdata-centers\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |data centers| is preferred. -->"},
    "634": {"find": "(\bData-centers\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Data centers| is preferred. -->"},
    "635": {"find": "(\bdata-sheet\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |datasheet| is preferred. -->"},
    "636": {"find": "(\bData-sheet\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Datasheet| is preferred. -->"},
    "637": {"find": "(\bdata-sheets\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |datasheets| is preferred. -->"},
    "638": {"find": "(\bData-sheets\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Datasheets| is preferred. -->"},
    "639": {"find": "(\bdata-store\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |datastore| is preferred. -->"},
    "640": {"find": "(\bData-store\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Datastore| is preferred. -->"},
    "641": {"find": "(\bdata-stores\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |datastores| is preferred. -->"},
    "642": {"find": "(\bData-stores\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Datastores| is preferred. -->"},
    "643": {"find": "(\bdata[\s\n]+are\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |data is| is preferred. -->"},
    "644": {"find": "(\bData[\s\n]+are\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Data is| is preferred. -->"},
    "645": {"find": "(\bdata[\s\n]+set\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dataset| is preferred. -->"},
    "646": {"find": "(\bdata[\s\n]+sheet\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |datasheet| is preferred. -->"},
    "647": {"find": "(\bData[\s\n]+sheet\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Datasheet| is preferred. -->"},
    "648": {"find": "(\bdata[\s\n]+sheets\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |datasheets| is preferred. -->"},
    "649": {"find": "(\bData[\s\n]+sheets\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Datasheets| is preferred. -->"},
    "650": {"find": "(\bdata[\s\n]+store\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |datastore| is preferred. -->"},
    "651": {"find": "(\bdata[\s\n]+store\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |datastore| is preferred. -->"},
    "652": {"find": "(\bData[\s\n]+store\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Datastore| is preferred. -->"},
    "653": {"find": "(\bdata[\s\n]+stores\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |datastores| is preferred. -->"},
    "654": {"find": "(\bData[\s\n]+stores\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Datastores| is preferred. -->"},
    "655": {"find": "(\bdatacenter\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |data center| is preferred. -->"},
    "656": {"find": "(\bDatacenter\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |data center| is preferred. -->"},
    "657": {"find": "(\bdatacenters\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |data centers| is preferred. -->"},
    "658": {"find": "(\bDatacenters\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Data centers| is preferred. -->"},
    "659": {"find": "(\bdatatype\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |data type| is preferred. -->"},
    "660": {"find": "(\bDatatype\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Data type| is preferred. -->"},
    "661": {"find": "(\bdatatypes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |data types| is preferred. -->"},
    "662": {"find": "(\bDatatypes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Data types| is preferred. -->"},
    "663": {"find": "(\bDate:[\s\n]+X\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Missing the date? -->"},
    "664": {"find": "(\bdate:[\s\n]+x\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Missing the date? -->"},
    "665": {"find": "(\bDate:[\s\n]+x\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Missing the date? -->"},
    "666": {"find": "(\bdate:[\s\n]+X\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Missing the date? -->"},
    "667": {"find": "(\bDB\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |database| is preferred. -->"},
    "668": {"find": "(\bDBs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |databases| is preferred. -->"},
    "669": {"find": "(\bDec\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |December| is preferred. -->"},
    "670": {"find": "(\bdedicated[\s\n]+VM[\s\n]+plan\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dedicated-VM plan| is preferred. -->"},
    "671": {"find": "(\bDedicated[\s\n]+VM[\s\n]+plan\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dedicated-VM plan| is preferred. -->"},
    "672": {"find": "(\bDedicated[\s\n]+VM[\s\n]+Plan\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dedicated-VM plan| is preferred. -->"},
    "673": {"find": "(\bdedicated[\s\n]+VM[\s\n]+Plan\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dedicated-VM plan| is preferred. -->"},
    "674": {"find": "(\bDefault[\s\n]+Supplies[\s\n]+Chain\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Default Supply Chain| -- singular -- is used in TAP docs. -->"},
    "675": {"find": "(\bdefaults\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |by default| is usually better. -->"},
    "676": {"find": "(\bdelimited\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |separated| is preferred. -->"},
    "677": {"find": "(\bDelimited\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Separated| is preferred. -->"},
    "678": {"find": "(\bdeny[\s\n]+list\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |denylist| is preferred. No space. -->"},
    "679": {"find": "(\bdependent\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |depends|? Avoid nounification of verbs where practical. -->"},
    "680": {"find": "(\bDeselect[\s\n]+th[a-z]+[\s\n]+box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Deselect the check box| is preferred. -->"},
    "681": {"find": "(\bdeselect[\s\n]+th[a-z]+[\s\n]+box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |deselect the check box| is preferred. -->"},
    "682": {"find": "(\bdesigned[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use. Tell the reader what the product or information does. -->"},
    "683": {"find": "(\bdesire\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |want| is preferred. -->"},
    "684": {"find": "(\bDesktop\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |desktop| is preferred. -->"},
    "685": {"find": "(\bdetails[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |details about| is preferred. -->"},
    "686": {"find": "(\bDetails[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Details about| is preferred. -->"},
    "687": {"find": "(\bdetermine\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |determine| has two meanings. Consider if the univocal |discover| or |verify| would be better. -->"},
    "688": {"find": "(\bDetermine\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Determine| has two meanings. Consider if the univocal |discover| or |verify| would be better. -->"},
    "689": {"find": "(\bdetermined\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |determine| has two meanings. Consider if the univocal |discover| or |verify| would be better. -->"},
    "690": {"find": "(\bDetermined\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Determine| has two meanings. Consider if the univocal |discover| or |verify| would be better. -->"},
    "691": {"find": "(\bdetermines\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |determine| has two meanings. Consider if the univocal |discover| or |verify| would be better. To avoid anthropomorphism, use |detect|. -->"},
    "692": {"find": "(\bdevelopment[\s\n]+environment\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If this simply refers to the user machine, |local machine| is preferred. If drawing a distinction from a production environment, leave as is. -->"},
    "693": {"find": "(\bdevops\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |DevOps| is preferred. -->"},
    "694": {"find": "(\bDevops\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |DevOps| is preferred. -->"},
    "695": {"find": "(\bdialog(?![\s\n]+box\b)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dialog box| is preferred. -->"},
    "696": {"find": "(\bDialog(?![\s\n]+box\b)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Dialog box| is preferred. -->"},
    "697": {"find": "(\bdialup\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dial-up| is preferred. -->"},
    "698": {"find": "(\bDialup\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Dial-up| is preferred. -->"},
    "699": {"find": "(\bDiego[\s\n]+BBS\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |BBS| is preferred. -->"},
    "700": {"find": "(\bDiego[\s\n]+brain\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Diego Brain| is now preferred. -->"},
    "701": {"find": "(\bDiego[\s\n]+cell\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Diego Cell| is now preferred. -->"},
    "702": {"find": "(\bDiego[\s\n]+cells\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Diego Cells| is now preferred. -->"},
    "703": {"find": "(\bDigital[\s\n]+Transformation\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |digital transformation| is preferred. -->"},
    "704": {"find": "(\bdisable\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |deactivate| is preferred. -->"},
    "705": {"find": "(\bDisable\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Deactivate| is preferred. -->"},
    "706": {"find": "(\bdisabled\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |deactivated| is preferred. -->"},
    "707": {"find": "(\bDisabled\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Deactivated| is preferred. -->"},
    "708": {"find": "(\bdisc\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |disk| is preferred. -->"},
    "709": {"find": "(\bDiscussed\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Mentioned earlier| is preferred over |Discussed earlier|. -->"},
    "710": {"find": "(\bdiscussed\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |As mentioned earlier| is preferred over |As discussed earlier|. -->"},
    "711": {"find": "(\bdisk[\s\n]+IO\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |disk I/O| is preferred. -->"},
    "712": {"find": "(\bdiskette\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |disk| is preferred, and specifically for floppy disks. -->"},
    "713": {"find": "(\bdiskettes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |disks| are preferred, and specifically for floppy disks. -->"},
    "714": {"find": "(\bdismiss\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a synonym for |close|. -->"},
    "715": {"find": "(\bDismiss\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a synonym for |Close|. -->"},
    "716": {"find": "(\bdistro\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |distribution| is preferred. -->"},
    "717": {"find": "(\bdo[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)procedure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |follow| is preferred over |do|. -->"},
    "718": {"find": "(\bDo[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)procedure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Follow| is preferred over |Do|. -->"},
    "719": {"find": "(\bdo[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)procedures\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |follow| is preferred over |do|. -->"},
    "720": {"find": "(\bDo[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)procedures\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Follow| is preferred over |Do|. -->"},
    "721": {"find": "(\bdo[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)steps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |follow| is preferred over |do|. -->"},
    "722": {"find": "(\bDo[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)steps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Follow| is preferred over |Do|. -->"},
    "723": {"find": "(\bdo[\s\n]+manual\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |manually| might be better. -->"},
    "724": {"find": "(\bDo[\s\n]+manual\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Manually| might be better. -->"},
    "725": {"find": "(\bdo[\s\n]+one[\s\n]+of\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |do one of the following actions| is better moved to the start of the step so that the reader is less likely to miss it. -->"},
    "726": {"find": "(\bdo[\s\n]+operations\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |perform operations| or just |operate| might read better. -->"},
    "727": {"find": "(\bdoc\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |documentation| is preferred. -->"},
    "728": {"find": "(\bDocker[\s\n]+trusted[\s\n]+registry\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Docker Registry| is preferred. -->"},
    "729": {"find": "(\bdocker\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Docker| is preferred. -->"},
    "730": {"find": "(\bdocs(?!\.\w)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |documentation| is preferred. -->"},
    "731": {"find": "(\bDocs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Documentation| is preferred. -->"},
    "732": {"find": "(\bDoppler[\s\n]+server\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Doppler| is preferred. -->"},
    "733": {"find": "(\bDoppler[\s\n]+VM\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Doppler| is preferred. -->"},
    "734": {"find": "(\bdoppler\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Doppler| is preferred. -->"},
    "735": {"find": "(\bdouble-parens[\s\n]+expression\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |double-parentheses expression| is preferred. -->"},
    "736": {"find": "(\bdouble[\s\n]+click\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |double-click| is preferred. -->"},
    "737": {"find": "(\bDouble[\s\n]+click\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Double-click| is preferred. -->"},
    "738": {"find": "(\bdown[\s\n]+load\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |download| is preferred. -->"},
    "739": {"find": "(\bDown[\s\n]+load\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Download| is preferred. -->"},
    "740": {"find": "(\bdown[\s\n]+loads\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |downloads| is preferred. -->"},
    "741": {"find": "(\bDown[\s\n]+loads\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Downloads| is preferred. -->"},
    "742": {"find": "(\bdown[\s\n]+time\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |downtime| is preferred. -->"},
    "743": {"find": "(\bdown[\s\n]+time\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |downtime| is preferred. -->"},
    "744": {"find": "(\bDown[\s\n]+time\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Downtime| is preferred. -->"},
    "745": {"find": "(\bdownscale\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |scale down| is preferred. -->"},
    "746": {"find": "(\bdrag[\s\n]+and[\s\n]+drop\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |drag-and-drop| is preferred when an adjective. When used as a verb, |drag| is sufficient. -->"},
    "747": {"find": "(\bDrag[\s\n]+and[\s\n]+drop\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Drag-and-drop| is preferred when an adjective. When used as a verb, |drag| is sufficient. -->"},
    "748": {"find": "(\bdrill[\s\n]+down\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with appropriate navigational terms. -->"},
    "749": {"find": "(\bDrill[\s\n]+down\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with appropriate navigational terms. -->"},
    "750": {"find": "(\bdrop-down(?![\s\n]+list|[\s\n]+menu)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |drop-down menu| is preferred. -->"},
    "751": {"find": "(\bdrop-down[\s\n]+list\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |drop-down menu| is preferred. -->"},
    "752": {"find": "(\bDrop-down[\s\n]+list\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Drop-down menu| is preferred. -->"},
    "753": {"find": "(\bdrop[\s\n]+down\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |drop-down menu| is preferred. -->"},
    "754": {"find": "(\bdropdown(?![\s\n]+list|[\s\n]+menu)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |drop-down menu| is preferred. -->"},
    "755": {"find": "(\bDropdown(?![\s\n]+list|[\s\n]+menu)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Drop-down menu| is preferred. -->"},
    "756": {"find": "(\bdropdown[\s\n]+list\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |drop-down menu| is preferred. -->"},
    "757": {"find": "(\bdropdown[\s\n]+menu\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |drop-down menu| is preferred. -->"},
    "758": {"find": "(\bdropdown[\s\n]+menus\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |drop-down menus| is preferred. -->"},
    "759": {"find": "(\bDropdown[\s\n]+menus\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Drop-down menu| is preferred. -->"},
    "760": {"find": "(\bDropdowns\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Drop-down menus| is preferred. -->"},
    "761": {"find": "(\bdropdowns\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |drop-down menus| is preferred. -->"},
    "762": {"find": "(\bdump\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a verb. Instead, use a verb such as |copy| or |back up|, as appropriate. OK to use as a noun with a modifier, for example, |core dump|, |memory dump|, and as an adjective, for example, |dump file|. -->"},
    "763": {"find": "(\bDump\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a verb. Instead, use a verb such as |copy| or |back up|, as appropriate. OK to use as a noun with a modifier, for example, |core dump|, |memory dump|, and as an adjective, for example, |dump file|. -->"},
    "764": {"find": "(\bdumps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a verb. Instead, use a verb such as |copy| or |back up|, as appropriate. OK to use as a noun with a modifier, for example, |core dump|, |memory dump|, and as an adjective, for example, |dump file|. -->"},
    "765": {"find": "(\bDumps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a verb. Instead, use a verb such as |copy| or |back up|, as appropriate. OK to use as a noun with a modifier, for example, |core dump|, |memory dump|, and as an adjective, for example, |dump file|. -->"},
    "766": {"find": "(\bduring[\s\n]+the[\s\n]+boot[\s\n]+sequence\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |during startup| is preferred. -->"},
    "767": {"find": "(\be-book\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |eBook| is preferred. Use the same capitalization in a heading or the first word in a sentence. -->"},
    "768": {"find": "(\bE-book\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |eBook| is preferred. Use the same capitalization in a heading or the first word in a sentence. -->"},
    "769": {"find": "(\be-books\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |eBooks| is preferred. Use the same capitalization in a heading or the first word in a sentence. -->"},
    "770": {"find": "(\bE-books\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |eBooks| is preferred. Use the same capitalization in a heading or the first word in a sentence. -->"},
    "771": {"find": "(\be-mail\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |email| is preferred. -->"},
    "772": {"find": "(\bE-mail\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Email| is preferred. -->"},
    "773": {"find": "(\bearlier[\s\n]+version\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The style |v#.# and earlier| is preferred because it is more specific. -->"},
    "774": {"find": "(\beasily\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid when describing an instruction. -->"},
    "775": {"find": "(\beasy\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid when describing an instruction. -->"},
    "776": {"find": "(\bEbook\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |eBook| is preferred. Use the same capitalization in a heading or the first word in a sentence. -->"},
    "777": {"find": "(\bebook\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |eBook| is preferred. Use the same capitalization in a heading or the first word in a sentence. -->"},
    "778": {"find": "(\bEbooks\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |eBooks| is preferred. Use the same capitalization in a heading or the first word in a sentence. -->"},
    "779": {"find": "(\bebooks\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |eBooks| is preferred. Use the same capitalization in a heading or the first word in a sentence. -->"},
    "780": {"find": "(\bebusiness\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |e-business| is preferred, but capitalize as |E-Business| in a heading or the first word in a sentence. -->"},
    "781": {"find": "(\bEbusiness\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |E-Business| is preferred in a heading or as the first word in a sentence. -->"},
    "782": {"find": "(\bebusinesses\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |e-businesses| is preferred, but capitalize as |E-Business| in a heading or the first word in a sentence. -->"},
    "783": {"find": "(\bEbusinesses\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |E-Businesses| is preferred in a heading or as the first word in a sentence. -->"},
    "784": {"find": "(\beighty\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use numerals for numbers greater than nine. -->"},
    "785": {"find": "(\beither\b[^\n:]*:[\s\n]*\*.*[\s\n]*\*.*[\s\n]*\*(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |either| applies to two items only. If the list exceeds two, use |any|. -->"},
    "786": {"find": "(\beither\b[^\n:]*:[\s\n]*\<.l\>.*[\s\n]*\<li\>.*[\s\n]*\<li\>.*[\s\n]*\<li\>(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |either| applies to two items only. If the list exceeds two, use |any|. -->"},
    "787": {"find": "(\beligible\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Might the plainer |able| be better? -->"},
    "788": {"find": "(\bend[\s\n]+up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Quite colloquial. Try rephrasing the sentence to replace with simply |are|. -->"},
    "789": {"find": "(\bends[\s\n]+up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Quite colloquial. Try rephrasing the sentence to replace with simply |is|. -->"},
    "790": {"find": "(\benter[\s\n]+in\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider shortening to just |enter|. -->"},
    "791": {"find": "(\benter[\s\n]+the[\s\n]+following\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |To X, run:| and |X by running:| are preferred. -->"},
    "792": {"find": "(\benv\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |environment| is preferred -->"},
    "793": {"find": "(\bephemeral[\s\n]+disk\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- There are two kinds of disk: ephemeral and persistent. You do not need to modify |disk| with |ephemeral| unless there is discussion of persistent disks in the same topic. Always define persistent disks as persistent. -->"},
    "794": {"find": "(\bet[\s\n]+al\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |and others| is preferred. -->"},
    "795": {"find": "(\bet[\s\n]+aliae\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |and others| is preferred. -->"},
    "796": {"find": "(\bet[\s\n]+alii\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |and others| is preferred. -->"},
    "797": {"find": "(\betc[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |and so on| is preferred. -->"},
    "798": {"find": "(\bEtc[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |and so on| is preferred. -->"},
    "799": {"find": "(\betc\.(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |and so on| is preferred. -->"},
    "800": {"find": "(\bEtc\.(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |and so on| is preferred. -->"},
    "801": {"find": "(\bethernet\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Ethernet| is preferred. -->"},
    "802": {"find": "(\bEventing[\s\n]+component\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- In Knative docs, |Knative Eventing| is preferred, sans |component|. -->"},
    "803": {"find": "(\beventing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Knative Eventing| is preferred. -->"},
    "804": {"find": "(\beveryone's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "805": {"find": "(\bEveryone's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "806": {"find": "(\bevict\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |remove| or |eject| is preferred. -->"},
    "807": {"find": "(\bEvict\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Remove| or |Eject| is preferred. -->"},
    "808": {"find": "(\beviction\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |removal| or |ejection| is preferred. -->"},
    "809": {"find": "(\bEviction\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Removal| or |Ejection| is preferred. -->"},
    "810": {"find": "(\bExecutable(?![\s\n]+file)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a noun. Use |Executable file| instead. -->"},
    "811": {"find": "(\bexecute:(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |run| is preferred. -->"},
    "812": {"find": "(\bexecute[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)procedure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |follow| is preferred over |execute|. -->"},
    "813": {"find": "(\bExecute[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)procedure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Follow| is preferred over |Execute|. -->"},
    "814": {"find": "(\bexecute[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)procedures\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |follow| is preferred over |execute|. -->"},
    "815": {"find": "(\bExecute[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)procedures\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Follow| is preferred over |Execute|. -->"},
    "816": {"find": "(\bexecute[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)steps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |follow| is preferred over |execute|. -->"},
    "817": {"find": "(\bExecute[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)steps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Follow| is preferred over |Execute|. -->"},
    "818": {"find": "(\bexecuting\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |running| is preferred. -->"},
    "819": {"find": "(\bExecuting\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Running| is preferred. -->"},
    "820": {"find": "(\bexercise\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |use| might be better. -->"},
    "821": {"find": "(\bExercise\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Use| might be better. -->"},
    "822": {"find": "(\bexpand[\s\n]+arrow\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |expand button| (the triangle that expands an inspector or panel to show more of the panel is preferred.) Do not use either term for controls that do not expand an interface item is preferred. Use the preferred term only if the interface item has no label is preferred. Otherwise, use |expand| as a verb is preferred. -->"},
    "823": {"find": "(\bexpected\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider replacing with |in most cases| to sound more confident. -->"},
    "824": {"find": "(\bexperimental\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The terms |experimental| and |beta| have different meanings only in VMware. Otherwise, use |beta| and never |experimental|. -->"},
    "825": {"find": "(\bexport[\s\n]+from\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |export to| makes more sense if writing from the perspective of the exporter. -->"},
    "826": {"find": "(\bexport[\s\n]+out[\s\n]+of\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |export to| makes more sense if writing from the perspective of the exporter. -->"},
    "827": {"find": "(\bexported[\s\n]+from\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |export to| makes more sense if writing from the perspective of the exporter. -->"},
    "828": {"find": "(\bexported[\s\n]+out[\s\n]+of\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |export to| makes more sense if writing from the perspective of the exporter. -->"},
    "829": {"find": "(\bfail-over\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |fail over| as a verb, although |fail| is often sufficient. -->"},
    "830": {"find": "(\bfailover\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |fail over| as a verb, although |fail| is often sufficient. -->"},
    "831": {"find": "(\bFAQ\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use FAQs unless absolutely necessary. Fold into other appropriate locations in the doc. -->"},
    "832": {"find": "(\bFASTT\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The IBM storage system is |FAStT|. -->"},
    "833": {"find": "(\bFault[\s\n]+Tolerance\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |fault tolerance| is preferred. -->"},
    "834": {"find": "(\bFeature\b(?=\n+[^:]+\.)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Add a stem to introduce the new feature. -->"},
    "835": {"find": "(\bFeatures\b(?=\n+[^:]+\.)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Add a stem to introduce the new features. -->"},
    "836": {"find": "(\bFeb\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |February| is preferred. -->"},
    "837": {"find": "(\bfemale\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |jack| or |socket| is preferred. -->"},
    "838": {"find": "(\bFemale\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Jack| or |Socket| is preferred. -->"},
    "839": {"find": "(\bFiber[\s\n]+Channel[\s\n]+adapter\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Fibre Channel adapter| is preferred. -->"},
    "840": {"find": "(\bfiber[\s\n]+channel[\s\n]+adapter\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Fibre Channel adapter| is preferred. -->"},
    "841": {"find": "(\bfibre[\s\n]+channel[\s\n]+adapter\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Fibre Channel adapter| is preferred. -->"},
    "842": {"find": "(\bfifty\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use numerals for numbers greater than nine. -->"},
    "843": {"find": "(\bfile-system\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |file system| is preferred. -->"},
    "844": {"find": "(\bFile-system\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |File system| is preferred. -->"},
    "845": {"find": "(\bfile-systems\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |file systems| is preferred. -->"},
    "846": {"find": "(\bFile-systems\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |File systems| is preferred. -->"},
    "847": {"find": "(\bfile[\s\n]+name\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |filename| is preferred. -->"},
    "848": {"find": "(\bFile[\s\n]+name\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Filename| is preferred. -->"},
    "849": {"find": "(\bfile[\s\n]+names\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |filenames| is preferred. -->"},
    "850": {"find": "(\bFile[\s\n]+names\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Filenames| is preferred. -->"},
    "851": {"find": "(\bfile[\s\n]+sharing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |file-sharing| is preferred when an adjective. -->"},
    "852": {"find": "(\bFile[\s\n]+sharing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |File-sharing| is preferred when an adjective. -->"},
    "853": {"find": "(\bfile[\s\n]+store\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |filestore| is preferred. -->"},
    "854": {"find": "(\bfilestorage\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |file storage| is preferred. -->"},
    "855": {"find": "(\bfilesystem\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |file system| is preferred. -->"},
    "856": {"find": "(\bFilesystem\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |File system| is preferred. -->"},
    "857": {"find": "(\bfilesystems\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |file systems| is preferred. -->"},
    "858": {"find": "(\bFilesystems\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |File systems| is preferred. -->"},
    "859": {"find": "(\bfingerd\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |the finger daemon| is preferred. -->"},
    "860": {"find": "(\bfire[\s\n]+wall\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |firewall| is preferred. -->"},
    "861": {"find": "(\bFire[\s\n]+wall\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Firewall| is preferred. -->"},
    "862": {"find": "(\bfire[\s\n]+walls\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |firewalls| is preferred. -->"},
    "863": {"find": "(\bFire[\s\n]+walls\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Firewalls| is preferred. -->"},
    "864": {"find": "(\bfirehose\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Firehose| is capitalized. -->"},
    "865": {"find": "(\bfolder\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |directory| in a command-line context and |folder| in a GUI context, unless the GUI prefers |directory|. When in doubt, default to |directory|. -->"},
    "866": {"find": "(\bFolder\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |directory| in a command-line context and |folder| in a GUI context, unless the GUI prefers |directory|. When in doubt, default to |directory|. -->"},
    "867": {"find": "(\bfolders\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |directories| in a command-line context and |folders| in a GUI context, unless the GUI prefers |directories|. When in doubt, default to |directories|. -->"},
    "868": {"find": "(\bFolders\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |directories| in a command-line context and |folders| in a GUI context, unless the GUI prefers |directories|. When in doubt, default to |directories|. -->"},
    "869": {"find": "(\bfollowing[\s\n]+command\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Maybe shorten to just |run:| -->"},
    "870": {"find": "(\bFor[\s\n]+example\b[^,:](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider adding a comma after |For example|. -->"},
    "871": {"find": "(\bfor[\s\n]+example\b[^,\.](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider adding a comma after |for example|. -->"},
    "872": {"find": "(\bFor[\s\n]+instance[,:](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |For example,| is preferred. -->"},
    "873": {"find": "(\bfor[\s\n]+instance[,:\.](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |for example,| is preferred. -->"},
    "874": {"find": "(\bfor[\s\n]+more[\s\n]+information\.(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The x-ref format is |For more information, see...| -->"},
    "875": {"find": "(\bfor[\s\n]+the[\s\n]+sake[\s\n]+of\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |to| might be better here. -->"},
    "876": {"find": "(\bFor[\s\n]+the[\s\n]+sake[\s\n]+of\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |To| might be better here. -->"},
    "877": {"find": "(\bforty\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use numerals for numbers greater than nine. -->"},
    "878": {"find": "(\bFree-BSD\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |FreeBSD| is preferred. -->"},
    "879": {"find": "(\bFree[\s\n]+BSD\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |FreeBSD| is preferred. -->"},
    "880": {"find": "(\bFrequently[\s\n]+Asked[\s\n]+Questions\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use FAQs unless absolutely necessary. Fold into other appropriate locations in the doc. -->"},
    "881": {"find": "(\bfrom[\s\n]+scratch\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Depending on context, delete or replace with |new| or |from the beginning|. When using |Create|, |from scratch| is redundant. -->"},
    "882": {"find": "(\bfull-screen[\s\n]+mode\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |full screen mode| is preferred. -->"},
    "883": {"find": "(\bFull-screen[\s\n]+mode\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Full screen mode| is preferred. -->"},
    "884": {"find": "(\bfully[\s\n]+qualified[\s\n]+domain[\s\n]+name[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |FQDN| after the first use. -->"},
    "885": {"find": "(\bFully[\s\n]+qualified[\s\n]+domain[\s\n]+name[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |FQDN| after the first use. -->"},
    "886": {"find": "(\bfunctionality\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |function|, |features|, or |capability| is preferred. -->"},
    "887": {"find": "(\bFunctionality\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Function|, |Features|, or |Capability| is preferred. -->"},
    "888": {"find": "(\bfuture\b[^\.\n]+\swill(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If writing about an upcoming change, only say that it is |planned| for a future release; do not promise it. -->"},
    "889": {"find": "(\bGarbage[\s\n]+Collector\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |garbage collector| is preferred. -->"},
    "890": {"find": "(\bgarden-runc\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Garden-runC| is preferred. -->"},
    "891": {"find": "(\bGarden-RunC\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Garden-runC| is preferred. -->"},
    "892": {"find": "(\bGemfire\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |GemFire| is preferred. -->"},
    "893": {"find": "(\bgeneral[\s\n]+beta\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |public beta| is preferred. -->"},
    "894": {"find": "(\bGeneral[\s\n]+beta\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Public beta| is preferred. -->"},
    "895": {"find": "(\bget[\s\n]+in[\s\n]+touch\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use a specific communication verb instead, such as |email|. -->"},
    "896": {"find": "(\bGet[\s\n]+in[\s\n]+touch\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use a specific communication verb instead, such as |email|. -->"},
    "897": {"find": "(\bgets\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- There is likely a more precise and formal word to use here than |gets|. -->"},
    "898": {"find": "(\bgif\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |GIF| is preferred. -->"},
    "899": {"find": "(\bGit[\s\n]+lab\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |GitLab| is preferred. -->"},
    "900": {"find": "(\bGit[\s\n]+Lab\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |GitLab| is preferred. -->"},
    "901": {"find": "(\bgit\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Git| is the preferred casing. -->"},
    "902": {"find": "(\bGithub\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The brand name is |GitHub|. -->"},
    "903": {"find": "(\bGitlab\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |GitLab| is preferred. -->"},
    "904": {"find": "(\bGlobal[\s\n]+Support[\s\n]+Services\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware Tanzu Support| is preferred. -->"},
    "905": {"find": "(\bgo[\s\n]+router\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Gorouter| is preferred. -->"},
    "906": {"find": "(\bGo[\s\n]+Router\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Gorouter| is preferred. -->"},
    "907": {"find": "(\bGo[\s\n]+routine\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |goroutine| is preferred. -->"},
    "908": {"find": "(\bgoes[\s\n]+down\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |fails|, |becomes unavailable|, or |stops responding| is preferred. -->"},
    "909": {"find": "(\bGolang\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |golang| is preferred. -->"},
    "910": {"find": "(\bgonna\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "911": {"find": "(\bgood[\s\n]+chance\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |likely| is shorter, less colloquial, and easier to translate than |good chance|. -->"},
    "912": {"find": "(\bGoogle[\s\n]+Cloud[\s\n]+Platform[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |GCP| after the first use. -->"},
    "913": {"find": "(\bgorouter\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Gorouter| is preferred. -->"},
    "914": {"find": "(\bGoRouter\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Gorouter| is preferred. -->"},
    "915": {"find": "(\bGoroutine\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |goroutine| is preferred. -->"},
    "916": {"find": "(\bgotta\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "917": {"find": "(\bgradle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Gradle| is preferred. -->"},
    "918": {"find": "(\bgrandfather\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |legacy| is preferred. -->"},
    "919": {"find": "(\bGrandfather\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Legacy| is preferred. -->"},
    "920": {"find": "(\bgrandfathered\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |legacy| is preferred. -->"},
    "921": {"find": "(\bGrandfathered\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Legacy| is preferred. -->"},
    "922": {"find": "(\bgranular\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Where possible, replace with some variation of |detail|, depending on context. -->"},
    "923": {"find": "(\bGranular\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Where possible, replace with some variation of |detail|, depending on context. -->"},
    "924": {"find": "(\bgraphical[\s\n]+interface\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |UI| is preferred. -->"},
    "925": {"find": "(\bgrayed-out(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dimmed| is preferred, and used only to describe the appearance of an unavailable item. |unavailable| is usually better. -->"},
    "926": {"find": "(\bGrayed-out(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Dimmed| is preferred, and used only to describe the appearance of an unavailable item. |Unavailable| is usually better. -->"},
    "927": {"find": "(\bgrayed[\s\n]+out\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dimmed| is preferred, and used only to describe the appearance of an unavailable item. |unavailable| is usually better. -->"},
    "928": {"find": "(\bGrayed[\s\n]+out\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Dimmed| is preferred, and used only to describe the appearance of an unavailable item. |Unavailable| is usually better. -->"},
    "929": {"find": "(\bGreenPlum\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Greenplum| is preferred. -->"},
    "930": {"find": "(\bgreyed-out(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dimmed| is preferred, and used only to describe the appearance of an unavailable item. |unavailable| is usually better. -->"},
    "931": {"find": "(\bGreyed-out(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Dimmed| is preferred, and used only to describe the appearance of an unavailable item. |Unavailable| is usually better. -->"},
    "932": {"find": "(\bgreyed[\s\n]+out(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dimmed| is preferred, and used only to describe the appearance of an unavailable item. |unavailable| is usually better. -->"},
    "933": {"find": "(\bGreyed[\s\n]+out(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Dimmed| is preferred, and used only to describe the appearance of an unavailable item. |Unavailable| is usually better. -->"},
    "934": {"find": "(\bgrow\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |extend| or |expand| is preferred when referring to disk size. -->"},
    "935": {"find": "(\bgrows\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |extends| or |expands| is preferred when referring to disk size. -->"},
    "936": {"find": "(\bgrype\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Grype| is preferred. -->"},
    "937": {"find": "(\bGSS\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware Tanzu Support| is preferred. -->"},
    "938": {"find": "(\bguarantee\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Maybe replace with |ensure| to avoid the sense of legalese. -->"},
    "939": {"find": "(\bGuarantee\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Maybe replace with |Ensure| to avoid the sense of legalese. -->"},
    "940": {"find": "(\bguests\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a noun. Use |guest| as a modifier to avoid confusion. |Guest OS| is acceptable where space or too much repetition are an issue. Always write out on first use in text. -->"},
    "941": {"find": "(\bGuests\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a noun. Use |guest| as a modifier to avoid confusion. |Guest OS| is acceptable where space or too much repetition are an issue. Always write out on first use in text. -->"},
    "942": {"find": "(\bguid\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |GUID| is preferred. -->"},
    "943": {"find": "(\bHAC\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |HA cluster| is preferred. -->"},
    "944": {"find": "(\bhad[\s\n]+been\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider replacing with |was| or shifting to present tense. -->"},
    "945": {"find": "(\bhand[\s\n]+held\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |handheld| is preferred. -->"},
    "946": {"find": "(\bHand[\s\n]+held\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Handheld| is preferred. -->"},
    "947": {"find": "(\bhandicap\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |obstacle|, |restrict|, or |impede| are preferred. -->"},
    "948": {"find": "(\bHandicap\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |obstacle|, |restrict|, or |impede| are preferred. -->"},
    "949": {"find": "(\bhandicapped\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |restricted| or |impeded| are preferred. -->"},
    "950": {"find": "(\bHandicapped\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |restricted| or |impeded| are preferred. -->"},
    "951": {"find": "(\bhang\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |fail|, |become unavailable|, or |stop responding| is preferred. However, may be used as an index term and in release notes and KB articles if |stop responding| and |fail| cannot be used instead. -->"},
    "952": {"find": "(\bhangs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |fails|, |becomes unavailable|, or |stops responding| is preferred. However, may be used as an index term and in release notes and KB articles if |stops responding| and |fails| cannot be used instead. -->"},
    "953": {"find": "(\bhankering\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |want| is preferred. -->"},
    "954": {"find": "(\bHAproxy\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |HAProxy| is preferred. -->"},
    "955": {"find": "(\bHaproxy\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |HAProxy| is preferred. -->"},
    "956": {"find": "(\bhas[\s\n]+been\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider changing to |is| or |has| or rewrite for active voice. -->"},
    "957": {"find": "(\bhas[\s\n]+finished[\s\n]+[a-z-]*ing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Possibly inelegant grammar. |has verbed| is better than |has finished verbing|. -->"},
    "958": {"find": "(\bhas[\s\n]+the[\s\n]+power[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |can| is shorter. -->"},
    "959": {"find": "(\bhave[\s\n]+a[\s\n]+look\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Just |look| is preferred. -->"},
    "960": {"find": "(\bHave[\s\n]+a[\s\n]+look\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Just |look| is preferred. -->"},
    "961": {"find": "(\bhave[\s\n]+been\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider replacing with |were| or shifting to present tense. -->"},
    "962": {"find": "(\bhave[\s\n]+the[\s\n]+power[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |can| is shorter. -->"},
    "963": {"find": "(\bhe'd\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. Also, |they| is preferred. -->"},
    "964": {"find": "(\bHe'd\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. Also, |They| is preferred. -->"},
    "965": {"find": "(\bhe'll\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. Also, |they| is preferred. -->"},
    "966": {"find": "(\bHe'll\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. Also, |They| is preferred. -->"},
    "967": {"find": "(\bhe's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |they| is preferred. -->"},
    "968": {"find": "(\bHe's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |They| is preferred. -->"},
    "969": {"find": "(\bhe\/she[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Change to plural and use |they|. -->"},
    "970": {"find": "(\bHe\/she[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Change to plural and use |They|. -->"},
    "971": {"find": "(\bhealth-check\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |health check| is preferred. -->"},
    "972": {"find": "(\bhealthcheck\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |health check| is preferred. -->"},
    "973": {"find": "(\bheat-map\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |heat map| is preferred. -->"},
    "974": {"find": "(\bHeat-map\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Heat map| is preferred. -->"},
    "975": {"find": "(\bheat-maps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |heat maps| is preferred. -->"},
    "976": {"find": "(\bHeat-maps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Heat maps| is preferred. -->"},
    "977": {"find": "(\bheatmap\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |heat map| is preferred. -->"},
    "978": {"find": "(\bHeatmap\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Heat map| is preferred. -->"},
    "979": {"find": "(\bheatmaps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |heat maps| is preferred. -->"},
    "980": {"find": "(\bHeatmaps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Heat maps| is preferred. -->"},
    "981": {"find": "(\bHelm-Chart\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Helm chart| is preferred. -->"},
    "982": {"find": "(\bhelm-chart\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Helm chart| is preferred. -->"},
    "983": {"find": "(\bHelm-chart\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Helm chart| is preferred. -->"},
    "984": {"find": "(\bhelm[\s\n]+(?!chart)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Helm| is preferred. -->"},
    "985": {"find": "(\bhelm[\s\n]+chart\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Helm chart| is preferred. -->"},
    "986": {"find": "(\bHelp-desk\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |help desk| is preferred. -->"},
    "987": {"find": "(\bhelp-desk\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |help desk| is preferred. -->"},
    "988": {"find": "(\bHelp[\s\n]+desk\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |help desk| is preferred. -->"},
    "989": {"find": "(\bhelp[\s\n]+system\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Help system| is preferred. -->"},
    "990": {"find": "(\bhelp[\s\n]+topic\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Help topic| is preferred. -->"},
    "991": {"find": "(\bhelp[\s\n]+window\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Help window| is preferred. -->"},
    "992": {"find": "(\bHelpdesk\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |help desk| is preferred. -->"},
    "993": {"find": "(\bhelpdesk\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |help desk| is preferred. -->"},
    "994": {"find": "(\bhence\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Remove or replace with less academic language, such as |so| or |as a result|. -->"},
    "995": {"find": "(\bHence\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Remove or replace with less academic language, such as |So| or |As a result|. -->"},
    "996": {"find": "(\bhigh-resolution\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |high resolution| is preferred. -->"},
    "997": {"find": "(\bHigh-resolution\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |High resolution| is preferred. -->"},
    "998": {"find": "(\bhigh[\s\n]+availability[\s\n]+cluster\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |HA cluster| is preferred. -->"},
    "999": {"find": "(\bHigh[\s\n]+availability[\s\n]+cluster\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |HA cluster| is preferred. -->"},
    "1000": {"find": "(\bHigh[\s\n]+Availability\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |high availability| is preferred. -->"},
    "1001": {"find": "(\bhighlevel\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |high-level| is preferred. -->"},
    "1002": {"find": "(\bHighlevel\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |High-level| is preferred. -->"},
    "1003": {"find": "(\bhighly[\s\n]+recommend\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Just |recommend| is preferred. -->"},
    "1004": {"find": "(\bhighly[\s\n]+recommends\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Just |recommends| is preferred. -->"},
    "1005": {"find": "(\bhis[\s\n]+or[\s\n]+her\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |they| is preferred. -->"},
    "1006": {"find": "(\bhis\/her\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |they| is preferred. -->"},
    "1007": {"find": "(\bhit\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |click| is preferred. -->"},
    "1008": {"find": "(\bHit\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Click| is preferred. -->"},
    "1009": {"find": "(\bhome-page\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |home page| is preferred. -->"},
    "1010": {"find": "(\bHome-page\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Home page| is preferred. -->"},
    "1011": {"find": "(\bhomepage\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |home page| is preferred. -->"},
    "1012": {"find": "(\bHomepage\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Home page| is preferred. -->"},
    "1013": {"find": "(\bhonor\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Be less anthropomorphic and more precise. -->"},
    "1014": {"find": "(\bhonored\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Be less anthropomorphic and more precise. -->"},
    "1015": {"find": "(\bhonors\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Be less anthropomorphic and more precise. -->"},
    "1016": {"find": "(\bhonour\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Be less anthropomorphic and more precise. -->"},
    "1017": {"find": "(\bhonoured\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Be less anthropomorphic and more precise. -->"},
    "1018": {"find": "(\bhonours\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Be less anthropomorphic and more precise. -->"},
    "1019": {"find": "(\bhost-name\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |host name| is preferred. -->"},
    "1020": {"find": "(\bHost-name\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Host name| is preferred. -->"},
    "1021": {"find": "(\bhost-names\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |host names| is preferred. -->"},
    "1022": {"find": "(\bHost-names\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Host names| is preferred. -->"},
    "1023": {"find": "(\bhostname\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |host name| is preferred. -->"},
    "1024": {"find": "(\bHostname\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Host name| is preferred. -->"},
    "1025": {"find": "(\bhostnames\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |host names| is preferred. -->"},
    "1026": {"find": "(\bHostnames\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Host names| is preferred. -->"},
    "1027": {"find": "(\bhotfix\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |hot fix| as a noun. |hot-fix| as an adjective. -->"},
    "1028": {"find": "(\bHotfix\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Hot fix| as a noun. |Hot-fix| as an adjective. -->"},
    "1029": {"find": "(\bhotfixes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |hot fixes| is preferred. -->"},
    "1030": {"find": "(\bHotfixes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Hot fixes| is preferred. -->"},
    "1031": {"find": "(\bhotkey\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |hot key| as a noun. |hot-key| as an adjective. -->"},
    "1032": {"find": "(\bHotkey\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Hot key| as a noun. |Hot-key| as an adjective. -->"},
    "1033": {"find": "(\bhotkeys\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |hot keys| is preferred. -->"},
    "1034": {"find": "(\bHotkeys\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Hot keys| is preferred. -->"},
    "1035": {"find": "(\bhover\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |point to| is preferred. -->"},
    "1036": {"find": "(\bHTTP[\s\n]+Router\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Gorouter| is preferred. -->"},
    "1037": {"find": "(\bHttp\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |HTTP| is preferred. -->"},
    "1038": {"find": "(\bhuman[\s\n]+readable[\s\n]+description\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The compound adjective is missing a hyphen. -->"},
    "1039": {"find": "(\bHuman[\s\n]+readable[\s\n]+description\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The compound adjective is missing a hyphen. -->"},
    "1040": {"find": "(\bhuman[\s\n]+readable[\s\n]+identifier\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The compound adjective is missing a hyphen. -->"},
    "1041": {"find": "(\bHuman[\s\n]+readable[\s\n]+identifier\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The compound adjective is missing a hyphen. -->"},
    "1042": {"find": "(\bhuman[\s\n]+readable[\s\n]+name\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The compound adjective is missing a hyphen. -->"},
    "1043": {"find": "(\bHuman[\s\n]+readable[\s\n]+name\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The compound adjective is missing a hyphen. -->"},
    "1044": {"find": "(\bhuman[\s\n]+readable[\s\n]+text\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The compound adjective is missing a hyphen. -->"},
    "1045": {"find": "(\bHuman[\s\n]+readable[\s\n]+text\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The compound adjective is missing a hyphen. -->"},
    "1046": {"find": "(\bHyper-threading\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |hyperthreading| is preferred. If you need the Intel-branded term, use |Intel Hyper-Threading Technology|. -->"},
    "1047": {"find": "(\bhyper-threading\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |hyperthreading| is preferred. If you need the Intel-branded term, use |Intel Hyper-Threading Technology|. -->"},
    "1048": {"find": "(\bHyperloglog\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |HyperLogLog| is preferred. -->"},
    "1049": {"find": "(\bhyperloglog\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |HyperLogLog| is preferred. -->"},
    "1050": {"find": "(\bHyperloglogs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |HyperLogLogs| is preferred. -->"},
    "1051": {"find": "(\bhyperloglogs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |HyperLogLogs| is preferred. -->"},
    "1052": {"find": "(\bHyperthreading\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |hyperthreading| is preferred. If you need the Intel-branded term, use |Intel Hyper-Threading Technology|. -->"},
    "1053": {"find": "(\bI'd\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1054": {"find": "(\bi\.e\.,[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Rewrite to avoid or use |that is,| instead. Note the comma. -->"},
    "1055": {"find": "(\bI\.e\.,[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Rewrite to avoid or use |That is,| instead. Note the comma. -->"},
    "1056": {"find": "(\bi\.e\.[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Rewrite to avoid or use |that is,| instead. Note the comma. -->"},
    "1057": {"find": "(\bI\.e\.[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Rewrite to avoid or use |That is,| instead. Note the comma. -->"},
    "1058": {"find": "(\bi\.e\s+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Rewrite to avoid or use |That is,| instead. Note the comma. -->"},
    "1059": {"find": "(\bIAAS\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |IaaS| is preferred. -->"},
    "1060": {"find": "(\bIaaSes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid the plural form of |IaaS| if possible. -->"},
    "1061": {"find": "(\bid[\s\n]+(?!=)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The abbreviation for |identity| is |ID|. -->"},
    "1062": {"find": "(\bId\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The abbreviation for |identity| is |ID|. -->"},
    "1063": {"find": "(\biD\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The abbreviation for |identity| is |ID|. -->"},
    "1064": {"find": "(\bIDP\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |IdP (identity provider)| is preferred. -->"},
    "1065": {"find": "(\bIDPs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |identity providers| is preferred. A single identity provider can be shortened to |IdP|. -->"},
    "1066": {"find": "(\bif[\s\n]+desired\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Remove. -->"},
    "1067": {"find": "(\bIf[\s\n]+desired\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Remove. -->"},
    "1068": {"find": "(\bIf[\s\n]+you[\s\n]+want[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Maybe replace with just |To|. -->"},
    "1069": {"find": "(\bif[\s\n]+you[\s\n]+want[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Maybe replace with just |to|. -->"},
    "1070": {"find": "(\billegal\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |invalid| is preferred. -->"},
    "1071": {"find": "(\bIllegal\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Invalid| is preferred. -->"},
    "1072": {"find": "(\bimport[\s\n]+into\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |import from| makes more sense if writing from the perspective of the importer. -->"},
    "1073": {"find": "(\bimport[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |import from| makes more sense if writing from the perspective of the importer. -->"},
    "1074": {"find": "(\bimported[\s\n]+into\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |import from| makes more sense if writing from the perspective of the importer. -->"},
    "1075": {"find": "(\bimported[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |import from| makes more sense if writing from the perspective of the importer. -->"},
    "1076": {"find": "(\bin[\s\n]+a[\s\n ]+\w+[\s\n]+way\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid the nounification of verbs: |conveniently| is better than |in a convenient way|. -->"},
    "1077": {"find": "(\bIn[\s\n]+a[\s\n ]+\w+[\s\n]+way\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid the nounification of verbs: |Conveniently| is better than |In a convenient way|. -->"},
    "1078": {"find": "(\bin[\s\n]+a[\s\n]+[a-z]*[\s\n]+manner\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider replacing with an adverb. -->"},
    "1079": {"find": "(\bin[\s\n]+CredHub\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- There are two CredHubs in PCF v2.0: BOSH CredHub and runtime CredHub. -->"},
    "1080": {"find": "(\bin[\s\n]+go\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |in Go| is preferred. -->"},
    "1081": {"find": "(\bin[\s\n]+order[\s\n]+for\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |for| is preferred. -->"},
    "1082": {"find": "(\bIn[\s\n]+order[\s\n]+for\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |For| is preferred. -->"},
    "1083": {"find": "(\bin[\s\n]+order[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |to| is preferred. -->"},
    "1084": {"find": "(\bin[\s\n]+preparation[\s\n]+for\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |to prepare for| might be better. Verbs are punchier than abstract nouns. -->"},
    "1085": {"find": "(\bin[\s\n]+real-time\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Stuff happens in |real time|. -->"},
    "1086": {"find": "(\bin[\s\n]+spite[\s\n]+of\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |regardless of| is preferred. -->"},
    "1087": {"find": "(\bIn[\s\n]+spite[\s\n]+of\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Regardless of| is preferred. -->"},
    "1088": {"find": "(\bin[\s\n]+the[\s\n]+case[\s\n]+that\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |when| or |where| might be better here. -->"},
    "1089": {"find": "(\bIn[\s\n]+the[\s\n]+case[\s\n]+that\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |When| or |Where| might be better here. -->"},
    "1090": {"find": "(\bin[\s\n]+the[\s\n]+terminal[\s\n]+window\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |on the command line| is preferred. -->"},
    "1091": {"find": "(\bin[\s\n]+unexpected[\s\n]+ways\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |unexpectedly| is more concise. -->"},
    "1092": {"find": "(\bincluded[\s\n]+in\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider deleting |included|. -->"},
    "1093": {"find": "(\bindependent[\s\n]+service[\s\n]+vendor[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |ISV| after the first use. -->"},
    "1094": {"find": "(\bIndependent[\s\n]+service[\s\n]+vendor[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |ISV| after the first use. -->"},
    "1095": {"find": "(\bIndependent[\s\n]+Service[\s\n]+Vendor[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |ISV| after the first use. -->"},
    "1096": {"find": "(\bindependent[\s\n]+service[\s\n]+vendors[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |ISV| after the first use. -->"},
    "1097": {"find": "(\bIndependent[\s\n]+service[\s\n]+vendors[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |ISV| after the first use. -->"},
    "1098": {"find": "(\bIndependent[\s\n]+Service[\s\n]+Vendors[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |ISV| after the first use. -->"},
    "1099": {"find": "(\bindices\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |indexes| is preferred. -->"},
    "1100": {"find": "(\bineligible\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Might the plainer |unable| be better? -->"},
    "1101": {"find": "(\binfo\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |information| is preferred. -->"},
    "1102": {"find": "(\bInfo\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Information| is preferred. -->"},
    "1103": {"find": "(\binformation[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |information about| is preferred. -->"},
    "1104": {"find": "(\binformation[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |information about| is preferred. -->"},
    "1105": {"find": "(\bInformation[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Information about| is preferred. -->"},
    "1106": {"find": "(\binline\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |in-line| is the Merriam-Webster spelling. -->"},
    "1107": {"find": "(\bInline\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |In-line| is the Merriam-Webster spelling. -->"},
    "1108": {"find": "(\binput[\s\n]+that\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The verb |enter| is preferred. -->"},
    "1109": {"find": "(\binput[\s\n]+the\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The verb |enter| is preferred. -->"},
    "1110": {"find": "(\bInput\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The verb |Enter| is preferred. -->"},
    "1111": {"find": "(\binsecure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |not secure| is preferred. -->"},
    "1112": {"find": "(\bInsecure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Not secure| is preferred. -->"},
    "1113": {"find": "(\binstallation[\s\n]+dashboard(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Installation Dashboard| is preferred if this is a VMware product feature. -->"},
    "1114": {"find": "(\bInstallation[\s\n]+dashboard(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Installation Dashboard| is preferred if this is a VMware product feature. -->"},
    "1115": {"find": "(\binstallation[\s\n]+Dashboard(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Installation Dashboard| is preferred if this is a VMware product feature. -->"},
    "1116": {"find": "(\binstructions[\s\n]+on[\s\n]+[a-z]*ing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |instructions for doing x| is more natural English than |instructions on doing x| -->"},
    "1117": {"find": "(\bInstructions[\s\n]+on[\s\n]+[a-z]*ing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Instructions for doing x| is more natural English than |Instructions on doing x| -->"},
    "1118": {"find": "(\bintended[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use. Tell the reader what the product or information does. -->"},
    "1119": {"find": "(\binteractivity\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- There is probably a better alternative, such as |input|. -->"},
    "1120": {"find": "(\bInternet[\s\n]+Protocol\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |IP address| is preferred. -->"},
    "1121": {"find": "(\binternet\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Internet| is preferred. Do not use |Net| or |net|. -->"},
    "1122": {"find": "(\bIntranet\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |intranet| is preferred. -->"},
    "1123": {"find": "(\binvoke\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |start|, |load|, |run|, or |call| is preferred. Acceptable in API docs, if no other word accurately describes the action. -->"},
    "1124": {"find": "(\bInvoke\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Start|, |Load|, |Run|, or |Call| is preferred. Acceptable in API docs, if no other word accurately describes the action. -->"},
    "1125": {"find": "(\binvokes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |starts|, |loads|, |runs|, or |calls| is preferred. Acceptable in API docs, if no other word accurately describes the action. -->"},
    "1126": {"find": "(\bInvokes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Starts|, |Loads|, |Runs|, or |Calls| is preferred. Acceptable in API docs, if no other word accurately describes the action. -->"},
    "1127": {"find": "(\bIP\b(?!([\s\n]+[Aa]ddress|[\s\n]+or[\s\n]+[A-Z]*[\s\n]+[Aa]ddress))(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not omit |address| from |IP address|. -->"},
    "1128": {"find": "(\bis[\s\n]+[a-z-]*ed[\s\n]+by\b(?![\s\n]+default)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Active voice is preferred. -->"},
    "1129": {"find": "(\bis[\s\n]+\w+[\s\n]+based(?!([\s\n]+\wn|[\s\n]+off|[\s\n]+out))(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Compound adjectives require hyphens, as in |time-based|. -->"},
    "1130": {"find": "(\bis[\s\n]+a[\s\n]+sign[\s\n]+that\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |suggests| is shorter and simplifies the syntax. -->"},
    "1131": {"find": "(\bis[\s\n]+finished[\s\n]+[a-z-]*ing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Possibly inelegant grammar. |has verbed| is better than |has finished verbing|. -->"},
    "1132": {"find": "(\bis[\s\n]+necessary[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider deleting this or replacing it with the shorter |you must|. -->"},
    "1133": {"find": "(\bis[\s\n]+possible[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Active voice |you can| might be better. -->"},
    "1134": {"find": "(\bis[\s\n]+used[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "1135": {"find": "(\bIsolation[\s\n]+Segments\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Isolation Segment| is the official title so do not make it plural. It is fine to talk of |isolation segments| though. -->"},
    "1136": {"find": "(\bissue[\s\n]+the\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |run| or |start| is preferred. Acceptable in API docs if no other word accurately describes the action. -->"},
    "1137": {"find": "(\bIssue[\s\n]+the\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Run| or |Start| is preferred. Acceptable in API docs if no other word accurately describes the action. -->"},
    "1138": {"find": "(\bissues[\s\n]+the\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |runs| or |starts| is preferred. Acceptable in API docs if no other word accurately describes the action. -->"},
    "1139": {"find": "(\bIssues[\s\n]+the\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Runs| or |Starts| is preferred. Acceptable in API docs if no other word accurately describes the action. -->"},
    "1140": {"find": "(\bit'll\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1141": {"find": "(\bit[\s\n]+.+[\s\n]+know\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing by writing that software |knows| anything. -->"},
    "1142": {"find": "(\bit[\s\n]+.+[\s\n]+need\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |require| might be better here. -->"},
    "1143": {"find": "(\bit[\s\n]+.+[\s\n]+realize\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |detect| might be better here. -->"},
    "1144": {"find": "(\bit[\s\n]+.+[\s\n]+recognize\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |detect| might be better here. -->"},
    "1145": {"find": "(\bit[\s\n]+.+[\s\n]+remember\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphising: |store|, |maintain|, |save|, or |retain| might be better here. -->"},
    "1146": {"find": "(\bit[\s\n]+.+[\s\n]+see\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |detect| might be better here. -->"},
    "1147": {"find": "(\bit[\s\n]+.+[\s\n]+understand\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |interpret|, |process|, or |handle| might be better here. -->"},
    "1148": {"find": "(\bit[\s\n]+.+[\s\n]+want\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing by writing that software |wants| anything. -->"},
    "1149": {"find": "(\bit[\s\n]+is[\s\n]+possible\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |might| might be better. -->"},
    "1150": {"find": "(\bIt[\s\n]+is[\s\n]+possible\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |might| might be better. -->"},
    "1151": {"find": "(\bit[\s\n]+is[\s\n]+recommended\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Specify the party that recommends (VMware, Cloud Foundry, etc). -->"},
    "1152": {"find": "(\bIt[\s\n]+is[\s\n]+recommended\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Specify the party that recommends (VMware, Cloud Foundry, etc). -->"},
    "1153": {"find": "(\bit[\s\n]+know\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |can| or |detects| might be better here. -->"},
    "1154": {"find": "(\bit[\s\n]+knows\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |can| or |detects| might be better here. -->"},
    "1155": {"find": "(\bit[\s\n]+needs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |requires| might be better here. -->"},
    "1156": {"find": "(\bit[\s\n]+realizes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |detects| might be better here. -->"},
    "1157": {"find": "(\bit[\s\n]+recognizes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |detects| might be better here. -->"},
    "1158": {"find": "(\bit[\s\n]+remembers\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphising: |store|, |maintain|, |save|, or |retain| might be better here. -->"},
    "1159": {"find": "(\bit[\s\n]+sees\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |detect| might be better here. -->"},
    "1160": {"find": "(\bit[\s\n]+understands\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |interpret|, |process|, or |handle| might be better here. -->"},
    "1161": {"find": "(\bit[\s\n]+wants\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing by writing that software |wants| anything. -->"},
    "1162": {"find": "(\bJan\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |January| is preferred. -->"},
    "1163": {"find": "(\bjar\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |JAR| is preferred. -->"},
    "1164": {"find": "(\bjava\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Java| is preferred. -->"},
    "1165": {"find": "(\bjavascript\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |JavaScript| is preferred. -->"},
    "1166": {"find": "(\bJavascript\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |JavaScript| is preferred. -->"},
    "1167": {"find": "(\bjaz(?=[\s\n]+drive\b)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Jaz drive| is preferred. -->"},
    "1168": {"find": "(\bjson\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |JSON| is preferred. -->"},
    "1169": {"find": "(\bjsonpath\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |JSONPath| is the preferred casing. -->"},
    "1170": {"find": "(\bJSONpath\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |JSONPath| is the preferred casing. -->"},
    "1171": {"find": "(\bjust[\s\n]+so[\s\n]+happened\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "1172": {"find": "(\bjust[\s\n]+so[\s\n]+happens\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "1173": {"find": "(\bjust\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid uses that suggest a task is simple. -->"},
    "1174": {"find": "(\bJust\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid uses that suggest a task is simple. -->"},
    "1175": {"find": "(\bK8s\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Kubernetes| is preferred. -->"},
    "1176": {"find": "(\bk8s\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Kubernetes| is preferred. -->"},
    "1177": {"find": "(\bK8S\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Kubernetes| is preferred. -->"},
    "1178": {"find": "(\bkeep-alive\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |keepalive| is preferred. -->"},
    "1179": {"find": "(\bkeep[\s\n]+in[\s\n]+mind\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant -->"},
    "1180": {"find": "(\bKeep[\s\n]+in[\s\n]+mind\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant -->"},
    "1181": {"find": "(\bkey[\s\n]+pair\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |keypair| is preferred. -->"},
    "1182": {"find": "(\bkey\/value[\s\n]+pair\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |key-value pair| is preferred. -->"},
    "1183": {"find": "(\bKey\/value[\s\n]+pair\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Key-value pair| is preferred. -->"},
    "1184": {"find": "(\bkey\/value[\s\n]+pairs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |key-value pairs| is preferred. -->"},
    "1185": {"find": "(\bKey\/value[\s\n]+pairs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Key-value pairs| is preferred. -->"},
    "1186": {"find": "(\bkill\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Where practical, |stop| or |halt| is preferred. -->"},
    "1187": {"find": "(\bKill\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Where practical, |stop| or |halt| is preferred. -->"},
    "1188": {"find": "(\bKnowledge[\s\n]+base\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |knowledge base| is preferred. -->"},
    "1189": {"find": "(\bKnown\b[\s\n]+\bIssue\b(?=\n+[^:]+\.\n+\*)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Add a stem to introduce the known issue. -->"},
    "1190": {"find": "(\bKnown\b[\s\n]+\bIssues\b(?=\n+[^:]+\.\n+\*)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Add a stem to introduce the known issues. -->"},
    "1191": {"find": "(\bkubectl[\s\n]+CLI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- First use: |Kubernetes command line tool (kubectl)|. Subsequent uses: |kubectl|. -->"},
    "1192": {"find": "(\bkubectl[\s\n]+command[\s\n]+line[\s\n]+tool\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- First use: |Kubernetes command line tool (kubectl)|. Subsequent uses: |kubectl|. -->"},
    "1193": {"find": "(\bkubectl[\s\n]+tool\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- First use: |Kubernetes command line tool (kubectl)|. Subsequent uses: |kubectl|. -->"},
    "1194": {"find": "(\bKubectl\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- First use: |Kubernetes command line tool (kubectl)|. Subsequent uses: |kubectl|. -->"},
    "1195": {"find": "(\bKubernetes[\s\n]+compatible\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Kubernetes-compatible| is preferred. -->"},
    "1196": {"find": "(\bKubernetes[\s\n]+Operator\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Kubernetes operator| is preferred now. -->"},
    "1197": {"find": "(\bkubernetes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Kubernetes| is preferred. -->"},
    "1198": {"find": "(\bkubo\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Container Runtime| is preferred. -->"},
    "1199": {"find": "(\bKubo\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Container Runtime| is preferred. -->"},
    "1200": {"find": "(\bKuBo\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Container Runtime| is preferred. -->"},
    "1201": {"find": "(\blabelled\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |labeled| is the American English spelling. -->"},
    "1202": {"find": "(\bLabelled\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |labeled| is the American English spelling. -->"},
    "1203": {"find": "(\blap[\s\n]+top\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |laptop| is preferred. -->"},
    "1204": {"find": "(\bLap[\s\n]+top\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Laptop| is preferred. -->"},
    "1205": {"find": "(\blap[\s\n]+tops\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |laptops| is preferred. -->"},
    "1206": {"find": "(\blap[\s\n]+tops\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |laptops| is preferred. -->"},
    "1207": {"find": "(\blater[\s\n]+release\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Never state something is coming in a future release. It could create a legal problem. -->"},
    "1208": {"find": "(\blaunch\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |start| or |run| is preferred. -->"},
    "1209": {"find": "(\bLaunch\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Start| or |Run| is preferred. -->"},
    "1210": {"find": "(\blaunches\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |starts| or |runs| is preferred. -->"},
    "1211": {"find": "(\bLaunches\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Starts| or |Runs| is preferred. -->"},
    "1212": {"find": "(\bleft[\s\n]+hand\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |left| is preferred. -->"},
    "1213": {"find": "(\blegal\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a synonym for |valid|. -->"},
    "1214": {"find": "(\bLegal\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a synonym for |Valid|. -->"},
    "1215": {"find": "(\blet's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Re-word: too colloquial. -->"},
    "1216": {"find": "(\bLet's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Re-word: too colloquial. -->"},
    "1217": {"find": "(\blet\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use to describe features that a product makes possible. Use |you can| instead. -->"},
    "1218": {"find": "(\bLet\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use to describe features that a product makes possible. Use |You can| instead. -->"},
    "1219": {"find": "(\blife-cycle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |life cycle| is preferred, but use |lifecycle| when it is used in the UI or is part of an approved product name. -->"},
    "1220": {"find": "(\bLife-cycle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Life cycle| is preferred, but use |Lifecycle| when it is used in the UI or is part of an approved product name. -->"},
    "1221": {"find": "(\blife-cycles\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |life cycles| is preferred, but use |lifecycles| when it is used in the UI or is part of an approved product name. -->"},
    "1222": {"find": "(\bLife-cycles\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Life cycles| is preferred, but use |Lifecycles| when it is used in the UI or is part of an approved product name. -->"},
    "1223": {"find": "(\bLifecycle(?![\s\n]+APIs)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Life cycle| is preferred, but use |Lifecycle| when it is used in the UI or is part of an approved product name. -->"},
    "1224": {"find": "(\blifecycle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |life cycle| is preferred, but use |lifecycle| when it is used in the UI or is part of an approved product name. -->"},
    "1225": {"find": "(\blifecycles\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |life cycles| is preferred, but use |lifecycles| when it is used in the UI or is part of an approved product name. -->"},
    "1226": {"find": "(\bLifecycles\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Life cycles| is preferred, but use |Lifecycles| when it is used in the UI or is part of an approved product name. -->"},
    "1227": {"find": "(\bLightweight[\s\n]+Directory[\s\n]+Access[\s\n]+Protocol(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |LDAP| is preferred. -->"},
    "1228": {"find": "(\blike\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use when citing examples. Use |such as| instead. -->"},
    "1229": {"find": "(\bline-break\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |line break| is preferred. -->"},
    "1230": {"find": "(\bLine-break\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Line break| is preferred. -->"},
    "1231": {"find": "(\bline-breaks\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |line breaks| is preferred. -->"},
    "1232": {"find": "(\bLine-breaks\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Line breaks| is preferred. -->"},
    "1233": {"find": "(\blinebreak\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |line breaks| is preferred. -->"},
    "1234": {"find": "(\bLinebreak\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Line breaks| is preferred. -->"},
    "1235": {"find": "(\blinebreaks\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |line breaks| is preferred. -->"},
    "1236": {"find": "(\bLinebreaks\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Line breaks| is preferred. -->"},
    "1237": {"find": "(\blives\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not anthropomorphize: code does not live anywhere. -->"},
    "1238": {"find": "(\bliving\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not anthropomorphize: code does not live anywhere. -->"},
    "1239": {"find": "(\bload(?=[\s\n]+the)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |load| as a synonym for |run| or |set up|. Acceptable for calling installed programs or data. -->"},
    "1240": {"find": "(\bLoad(?=[\s\n]+the)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |Load| as a synonym for |Run| or |Set up|. Acceptable for calling installed programs or data. -->"},
    "1241": {"find": "(\bloadbalancer\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |LoadBalancer| is preferred. -->"},
    "1242": {"find": "(\bloadBalancer\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |LoadBalancer| is preferred. -->"},
    "1243": {"find": "(\bLoadbalancer\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |LoadBalancer| is preferred. -->"},
    "1244": {"find": "(\bloads(?=[\s\n]+the)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |loads| as a synonym for |runs| or |set up|. Acceptable for calling installed programs or data. -->"},
    "1245": {"find": "(\bLoads(?=[\s\n]+the)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |Loads| as a synonym for |Runs| or |Set up|. Acceptable for calling installed programs or data. -->"},
    "1246": {"find": "(\blog-in\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |login| (n) or |log in| (v) -->"},
    "1247": {"find": "(\blog[\s\n]+into\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |log in to| is preferred. -->"},
    "1248": {"find": "(\blog[\s\n]+line\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |log entry| is preferred. -->"},
    "1249": {"find": "(\bLog[\s\n]+line\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Log entry| is preferred. -->"},
    "1250": {"find": "(\blog[\s\n]+lines\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |log entries| is preferred. -->"},
    "1251": {"find": "(\bLog[\s\n]+lines\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Log entries| is preferred. -->"},
    "1252": {"find": "(\blog[\s\n]+message\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |log entry| is preferred. -->"},
    "1253": {"find": "(\bLog[\s\n]+message\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Log entry| is preferred. -->"},
    "1254": {"find": "(\blog[\s\n]+messages\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |log entries| is preferred. -->"},
    "1255": {"find": "(\bLog[\s\n]+messages\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Log entries| is preferred. -->"},
    "1256": {"find": "(\blog[\s\n]+off\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |log out| is preferred. -->"},
    "1257": {"find": "(\bLog[\s\n]+off\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Log out| is preferred. -->"},
    "1258": {"find": "(\blog[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |log in| is preferred. -->"},
    "1259": {"find": "(\bLog[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Log in| is preferred. -->"},
    "1260": {"find": "(\bloggregator(?!\-)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Call it |Loggregator| -- capitalized and without a preceding |the|. -->"},
    "1261": {"find": "(\blogin[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |log in to| is preferred. -->"},
    "1262": {"find": "(\bLogin[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Log in to| is preferred. -->"},
    "1263": {"find": "(\bLong[\s\n]+term\b[^\.:;,](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Long term| is missing a hyphen here if it is a compound adjective. -->"},
    "1264": {"find": "(\blong[\s\n]+term\b[^\.:;,](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |long term| is missing a hyphen here if it is a compound adjective. -->"},
    "1265": {"find": "(\blook-up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |look up| as a verb. |lookup| as a noun. -->"},
    "1266": {"find": "(\bLook-up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Look up| as a verb. |Lookup| as a noun. -->"},
    "1267": {"find": "(\blower[\s\n]+case\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |lowercase| is preferred. -->"},
    "1268": {"find": "(\bMac[\s\n]+OS\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |macOS| is the current brand name for the Apple operating system. -->"},
    "1269": {"find": "(\bMacOS\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |macOS| is the current brand name for the Apple operating system. -->"},
    "1270": {"find": "(\bmake[\s\n]+sure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? |Make sure you do X.| is weaker than |Do x.| -->"},
    "1271": {"find": "(\bMake[\s\n]+sure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? |Make sure you do X.| is weaker than |Do x.| -->"},
    "1272": {"find": "(\bmale\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |plug| is preferred. -->"},
    "1273": {"find": "(\bMale\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Plug| is preferred. -->"},
    "1274": {"find": "(\bmanuals\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- In preface information, if the document is delivered as a PDF file, replace with |books| or |guides|. -->"},
    "1275": {"find": "(\bMar\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |March| is preferred. -->"},
    "1276": {"find": "(\bmaster\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred alternatives: |primary|, |controller|. Other alternatives: |main|, |original|, |reference|, |control plane|, |control plane node|. -->"},
    "1277": {"find": "(\bMaster\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred alternatives: |Primary|, |Controller|. Other alternatives: |Main|, |Original|, |Reference|, |Control plane|, |Control plane node|. -->"},
    "1278": {"find": "(\bMaterial[\s\n]+data\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |consumption data| is preferred. -->"},
    "1279": {"find": "(\bmax\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |maximum| is preferred. -->"},
    "1280": {"find": "(\bMax\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Maximum| is preferred. -->"},
    "1281": {"find": "(\bmay\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |can| usually works better. Use |might| to convey possibility. -->"},
    "1282": {"find": "(\bMedium[\s\n]+term\b[^\.:;,](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Medium term| is missing a hyphen here if it is a compound adjective. -->"},
    "1283": {"find": "(\bmedium[\s\n]+term\b[^\.:;,](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |medium term| is missing a hyphen here if it is a compound adjective. -->"},
    "1284": {"find": "(\bmembers[\s\n]+of[\s\n]+a[\s\n]+[a-z]*(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |x members| is more succinct than |members of x|. -->"},
    "1285": {"find": "(\bmenu[\s\n]+list\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |drop-down menu| is preferred. -->"},
    "1286": {"find": "(\bMenu[\s\n]+list\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Drop-down menu| is preferred. -->"},
    "1287": {"find": "(\bmenu[\s\n]+lists\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |drop-down menus| is preferred. -->"},
    "1288": {"find": "(\bMenu[\s\n]+lists\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Drop-down menus| is preferred. -->"},
    "1289": {"find": "(\bmerge[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |merge with| might be better here. -->"},
    "1290": {"find": "(\bmerged[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |merged with| might be better here. -->"},
    "1291": {"find": "(\bmicro-services\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |microservices| is preferred. -->"},
    "1292": {"find": "(\bmicro[\s\n]+kernel\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |microkernel| is preferred. -->"},
    "1293": {"find": "(\bMicrosoft[\s\n]+Corporation[\s\n]+&trade;(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- No need for a trademark symbol. -->"},
    "1294": {"find": "(\bmight've\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1295": {"find": "(\bmin\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |minimum| is preferred. -->"},
    "1296": {"find": "(\bMin\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Minimum| is preferred. -->"},
    "1297": {"find": "(\bMinIO\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Minio| is preferred. -->"},
    "1298": {"find": "(\bminio\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Minio| is preferred. -->"},
    "1299": {"find": "(\bmodal\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dialog box| is preferred. -->"},
    "1300": {"find": "(\bmodifies\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |edits| is preferred. -->"},
    "1301": {"find": "(\bModifies\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Edits| is preferred. -->"},
    "1302": {"find": "(\bmodify\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |edit| is preferred. -->"},
    "1303": {"find": "(\bModify\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Edit| is preferred. -->"},
    "1304": {"find": "(\bMore[\s\n]+information[\s\n]+(can|is)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The xref style is |For more information, see...|. -->"},
    "1305": {"find": "(\bmore[\s\n]+information[\s\n]+(can|is)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The xref style is |For more information, see...|. -->"},
    "1306": {"find": "(\bmouse[\s\n]+over\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |point to| is preferred. -->"},
    "1307": {"find": "(\bMouse[\s\n]+over\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Point to| is preferred. -->"},
    "1308": {"find": "(\bmouse[\s\n]+pointer\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Just |pointer| is preferred. Refers to the small graphic (usually an arrow) that a mouse device moves around the screen. Always distinguish from the |insertion point|. -->"},
    "1309": {"find": "(\bmouse[\s\n]+pointer\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Just |pointer| is preferred. Refers to the small graphic (usually an arrow) that a mouse device moves around the screen. Always distinguish from the |insertion point|. -->"},
    "1310": {"find": "(\bmovable\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |moveable| is preferred. -->"},
    "1311": {"find": "(\bMovable\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Moveable| is preferred. -->"},
    "1312": {"find": "(\bmulti az\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Multi-AZ| is Amazon style. -->"},
    "1313": {"find": "(\bmulti AZ\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Multi-AZ| is Amazon style. -->"},
    "1314": {"find": "(\bMulti az\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Multi-AZ| is Amazon style. -->"},
    "1315": {"find": "(\bMulti AZ\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Multi-AZ| is Amazon style. -->"},
    "1316": {"find": "(\bmulti-az\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Multi-AZ| is Amazon style. -->"},
    "1317": {"find": "(\bmulti-AZ\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Multi-AZ| is Amazon style. -->"},
    "1318": {"find": "(\bMulti-az\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Multi-AZ| is Amazon style. -->"},
    "1319": {"find": "(\bmulti-cluster\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |multicluster| is preferred. -->"},
    "1320": {"find": "(\bMulti-cluster\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Multicluster| is preferred. -->"},
    "1321": {"find": "(\bmulti-plex\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |multiplex| is preferred. -->"},
    "1322": {"find": "(\bMulti-plex\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Multiplex| is preferred. -->"},
    "1323": {"find": "(\bmulti-plexing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |multiplexing| is preferred. -->"},
    "1324": {"find": "(\bMulti-plexing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Multiplexing| is preferred. -->"},
    "1325": {"find": "(\bmulti[\s\n]+boot\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |multiboot| is preferred. -->"},
    "1326": {"find": "(\bMulti[\s\n]+boot\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Multiboot| is preferred. -->"},
    "1327": {"find": "(\bmulti[\s\n]+cluster\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |multicluster| is preferred. -->"},
    "1328": {"find": "(\bMulti[\s\n]+cluster\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Multicluster| is preferred. -->"},
    "1329": {"find": "(\bmulti[\s\n]+platform\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |multiplatform| is preferred. -->"},
    "1330": {"find": "(\bMulti[\s\n]+platform\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Multiplatform| is preferred. -->"},
    "1331": {"find": "(\bmulti[\s\n]+processor\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |multiprocessor| is preferred. -->"},
    "1332": {"find": "(\bMulti[\s\n]+processor\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Multiprocessor| is preferred. -->"},
    "1333": {"find": "(\bMultipleWorlds\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Not in active use. -->"},
    "1334": {"find": "(\bmustn't\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1335": {"find": "(\bnameserver\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |name server| is preferred. -->"},
    "1336": {"find": "(\bnavigate[\s\n]+to[\s\n]+the[\s\n]+[A-Z](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Embolden the names of UI elements. -->"},
    "1337": {"find": "(\bNavigate[\s\n]+to[\s\n]+the[\s\n]+[A-Z](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Embolden the names of UI elements. -->"},
    "1338": {"find": "(\bneedn't\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1339": {"find": "(\bneeds[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |must| is preferred. -->"},
    "1340": {"find": "(\bnext[\s\n]+release\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Never state something is coming in a future release. It could create a legal problem. -->"},
    "1341": {"find": "(\bNGINX\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |NGINX| for the brand. |nginx| for files and code. -->"},
    "1342": {"find": "(\bNginx\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |NGINX| for the brand. |nginx| for files and code. -->"},
    "1343": {"find": "(\bninety\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use numerals for numbers greater than nine. -->"},
    "1344": {"find": "(\bnon-persistent\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |nonpersistent| is preferred. -->"},
    "1345": {"find": "(\bNon-persistent\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Nonpersistent| is preferred. -->"},
    "1346": {"find": "(\bnon-zero\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |nonzero| is preferred. -->"},
    "1347": {"find": "(\bNon-zero\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Nonzero| is preferred. -->"},
    "1348": {"find": "(\bnon[\s\n]+persistent\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |nonpersistent| is preferred. -->"},
    "1349": {"find": "(\bNon[\s\n]+persistent\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Nonpersistent| is preferred. -->"},
    "1350": {"find": "(\bnon[\s\n]+zero\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |nonzero| is preferred. -->"},
    "1351": {"find": "(\bNon[\s\n]+zero\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Nonzero| is preferred. -->"},
    "1352": {"find": "(\bnot[\s\n]+already[\s\n]+done[\s\n]+so\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider if this should be listed as a prerequisite. -->"},
    "1353": {"find": "(\bnot[\s\n]+recommend\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware discourages| is preferred for closed source. |Cloud Foundry discourages| for open source. -->"},
    "1354": {"find": "(\bnot[\s\n]+recommended\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware discourages| is preferred for closed source. |Cloud Foundry discourages| for open source. -->"},
    "1355": {"find": "(\bnot[\s\n]+yet\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- 1st preference: delete. 2nd preference: replace these words with |currently|. -->"},
    "1356": {"find": "(\bnote[\s\n]+down\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |record| is preferred. -->"},
    "1357": {"find": "(\bNote[\s\n]+that\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Notes must be in Note boxes and start with |Note: |. -->"},
    "1358": {"find": "(\bnote[\s\n]+that\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Notes must be in Note boxes and start with |Note: |. -->"},
    "1359": {"find": "(\bNotice[\s\n]+that\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Notes must be in Note boxes and start with |Note: |. -->"},
    "1360": {"find": "(\bnotice[\s\n]+that\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Notes must be in Note boxes and start with |Note: |. -->"},
    "1361": {"find": "(\bnoting[\s\n]+that\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Notes must be in Note boxes and start with |Note: |. -->"},
    "1362": {"find": "(\bNov\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |November| is preferred. -->"},
    "1363": {"find": "(\bNovell[\s\n]+Netware\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Novell NetWare| is preferred. -->"},
    "1364": {"find": "(\bnow[\s\n]+[a-z-]*ed[\s\n]+by\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Active voice is preferred. -->"},
    "1365": {"find": "(\bNozzle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Only capitalize |nozzle| when it is part of a title -->"},
    "1366": {"find": "(\bNSX[\s\n]+Edge\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |NSX Edge Services Gateway (ESG)| is preferred. -->"},
    "1367": {"find": "(\boAuth\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |OAuth| is preferred. -->"},
    "1368": {"find": "(\bOauth\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |OAuth| is preferred. -->"},
    "1369": {"find": "(\bOct\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |October| is preferred. -->"},
    "1370": {"find": "(\bof[\s\n]+your[\s\n]+choosing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |you choose| is snappier and easier for machine translation. -->"},
    "1371": {"find": "(\boidc\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |OIDC| is the preferred styling for the OpenID Connect abbreviation. -->"},
    "1372": {"find": "(\bOidc\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |OIDC| is the preferred styling for the OpenID Connect abbreviation. -->"},
    "1373": {"find": "(\bokay\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |OK| is preferred. Avoid using other than to refer to an interface term. -->"},
    "1374": {"find": "(\bOkay\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |OK| is preferred. Avoid using other than to refer to an interface term. -->"},
    "1375": {"find": "(\bon-board\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |onboard| (v) is preferred. -->"},
    "1376": {"find": "(\bOn-board\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Onboard| (v) is preferred. -->"},
    "1377": {"find": "(\bOn-Demand[\s\n]+Broker(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Full product title: |on-demand service broker|, short version: |on-demand broker|, initialism: |ODB| -->"},
    "1378": {"find": "(\bOn-demand[\s\n]+Broker(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Full product title: |on-demand service broker|, short version: |on-demand broker|, initialism: |ODB| -->"},
    "1379": {"find": "(\bon-line\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |online| is preferred. -->"},
    "1380": {"find": "(\bOn-line\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Online| is preferred. -->"},
    "1381": {"find": "(\bon-premise[\s\n]+software\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |on-premises software| is preferred. -->"},
    "1382": {"find": "(\bOn-premise[\s\n]+software\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |On-premises software| is preferred. -->"},
    "1383": {"find": "(\bon-screen\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |onscreen| is preferred. -->"},
    "1384": {"find": "(\bOn-screen\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Onscreen| is preferred. -->"},
    "1385": {"find": "(\bon-site\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |onsite| is preferred. -->"},
    "1386": {"find": "(\bOn-site\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Onsite| is preferred. -->"},
    "1387": {"find": "(\bon[\s\n]+demand[\s\n]+broker(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Full product title: |on-demand service broker|, short version: |on-demand broker|, initialism: |ODB| -->"},
    "1388": {"find": "(\bOn[\s\n]+demand[\s\n]+broker(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Full product title: |on-demand service broker|, short version: |on-demand broker|, initialism: |ODB| -->"},
    "1389": {"find": "(\bOn[\s\n]+Demand[\s\n]+Broker(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Full product title: |on-demand service broker|, short version: |on-demand broker|, initialism: |ODB| -->"},
    "1390": {"find": "(\bOn[\s\n]+Demand[\s\n]+broker(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Full product title: |on-demand service broker|, short version: |on-demand broker|, initialism: |ODB| -->"},
    "1391": {"find": "(\bon[\s\n]+demand[\s\n]+plan\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |on-demand plan| is preferred. -->"},
    "1392": {"find": "(\bOn[\s\n]+demand[\s\n]+plan\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |on-demand plan| is preferred. -->"},
    "1393": {"find": "(\bOn[\s\n]+Demand[\s\n]+Plan\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |on-demand plan| is preferred. -->"},
    "1394": {"find": "(\bOn[\s\n]+Demand[\s\n]+plan\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |on-demand plan| is preferred. -->"},
    "1395": {"find": "(\bon[\s\n]+line\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |online| is preferred. -->"},
    "1396": {"find": "(\bOn[\s\n]+line\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Online| is preferred. -->"},
    "1397": {"find": "(\bon[\s\n]+screen\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |onscreen| is preferred. -->"},
    "1398": {"find": "(\bOn[\s\n]+screen\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Onscreen| is preferred. -->"},
    "1399": {"find": "(\bon[\s\n]+site\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |onsite| is preferred. -->"},
    "1400": {"find": "(\bOn[\s\n]+site\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Onsite| is preferred. -->"},
    "1401": {"find": "(\bon[\s\n]+the[\s\n]+fly\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |quickly|, |dynamically|, or some other phrase is preferred. -->"},
    "1402": {"find": "(\bOn[\s\n]+the[\s\n]+fly\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Quickly|, |Dynamically|, or some other phrase is preferred. -->"},
    "1403": {"find": "(\bon[\s\n]+the[\s\n]+other[\s\n]+hand\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |however| or |by contrast| are preferred. -->"},
    "1404": {"find": "(\bOn[\s\n]+the[\s\n]+other[\s\n]+hand\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |However| or |By contrast| are preferred. -->"},
    "1405": {"find": "(\bonce[\s\n]+it\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Only use |once| when you mean |one time|, not when you mean |after|. -->"},
    "1406": {"find": "(\bonce[\s\n]+the\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Only use |once| when you mean |one time|, not when you mean |after|. -->"},
    "1407": {"find": "(\bonce[\s\n]+they\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Only use |once| when you mean |one time|, not when you mean |after|. -->"},
    "1408": {"find": "(\bonce[\s\n]+you\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Only use |once| when you mean |one time|, not when you mean |after|. -->"},
    "1409": {"find": "(\bonce[\s\n]+your\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Only use |once| when you mean |one time|, not when you mean |after|. -->"},
    "1410": {"find": "(\bOnce\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Only use |once| when you mean |one time|, not when you mean |after|. -->"},
    "1411": {"find": "(\bone-off[\s\n]+boot\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |one-time boot| is preferred. -->"},
    "1412": {"find": "(\bOne-off[\s\n]+boot\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |One-time boot| is preferred. -->"},
    "1413": {"find": "(\bonsite\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Needs a space or a hyphen. The on-site interview is the last of the three interviews. The training was held on site. -->"},
    "1414": {"find": "(\bOperations[\s\n]+Manager(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Ops Manager| is preferred. -->"},
    "1415": {"find": "(\bOps[\s\n]+Man\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Ops Manager| is preferred. -->"},
    "1416": {"find": "(\bops[\s\n]+manager(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Ops Manager| is preferred. -->"},
    "1417": {"find": "(\bOps[\s\n]+Manager[\s\n]+Director\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |BOSH Director| is preferred. -->"},
    "1418": {"find": "(\bOpsMan\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Ops Manager| is preferred. -->"},
    "1419": {"find": "(\bOpsManager\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Ops Manager| is preferred. -->"},
    "1420": {"find": "(\bopsmanager\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Ops Manager| is preferred. -->"},
    "1421": {"find": "(\bOptional[\s\n]+[^\)\*\<](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Our style is (Optional) INSTRUCTION -- as a procedure header or a step. -->"},
    "1422": {"find": "(\boptionally\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Our style is (Optional) INSTRUCTION -- as a procedure header or a step. -->"},
    "1423": {"find": "(\bOptionally\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Our style is (Optional) INSTRUCTION -- as a procedure header or a step. -->"},
    "1424": {"find": "(\borg[\s\n]+manager\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Org Manager| is preferred. -->"},
    "1425": {"find": "(\bOS[\s\n]+X\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |macOS| is the current brand name for the Apple operating system. -->"},
    "1426": {"find": "(\bOS[\s\n]+x\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |macOS| is the current brand name for the Apple operating system. -->"},
    "1427": {"find": "(\bOs[\s\n]+X\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |macOS| is the current brand name for the Apple operating system. -->"},
    "1428": {"find": "(\bOSBAPI[\s\n]+compliant\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |OSBAPI-compliant| is preferred. -->"},
    "1429": {"find": "(\bOSes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Acceptable, but |operating systems| is usually better. -->"},
    "1430": {"find": "(\bout-of-the-box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |out-of-the-box| figuratively. -->"},
    "1431": {"find": "(\bOut-of-the-box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |out-of-the-box| figuratively. -->"},
    "1432": {"find": "(\bout-put\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |output| is preferred. -->"},
    "1433": {"find": "(\bOut-put\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Output| is preferred. -->"},
    "1434": {"find": "(\bout-puts\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |outputs| is preferred. -->"},
    "1435": {"find": "(\bOut-puts\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Outputs| is preferred. -->"},
    "1436": {"find": "(\bout[\s\n]+of[\s\n]+memory[\s\n]+error\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |out-of-memory error| is preferred. -->"},
    "1437": {"find": "(\bOut[\s\n]+Of[\s\n]+Memory[\s\n]+error\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |out-of-memory error| is preferred. -->"},
    "1438": {"find": "(\bout[\s\n]+of[\s\n]+the[\s\n]+box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |out of the box| figuratively. -->"},
    "1439": {"find": "(\bOut[\s\n]+of[\s\n]+the[\s\n]+box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |out of the box| figuratively. -->"},
    "1440": {"find": "(\bPAAS\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PaaS| is preferred. -->"},
    "1441": {"find": "(\bPackage[\s\n]+repository\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |packageRepository| is the standard styling in TAP docs. -->"},
    "1442": {"find": "(\bpackageRepository[\s\n]+custom[\s\n]+resource\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |packageRepository custom resource| is preferred. -->"},
    "1443": {"find": "(\bPackageRepository\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |packageRepository| is the standard styling in TAP docs. -->"},
    "1444": {"find": "(\bpackagerepository\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |packageRepository| is the standard styling in TAP docs. -->"},
    "1445": {"find": "(\bpanic\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a verb. If possible, describe the symptoms visible to the user. -->"},
    "1446": {"find": "(\bparam\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |parameter| is preferred. -->"},
    "1447": {"find": "(\bparams\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |parameters| is preferred. -->"},
    "1448": {"find": "(\bParams\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Parameters| is preferred. -->"},
    "1449": {"find": "(\bpasses[\s\n]+back\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |returns| is preferred. -->"},
    "1450": {"find": "(\bpay[\s\n]+attention\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid: it is condescending. -->"},
    "1451": {"find": "(\bPay[\s\n]+attention\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid: it is condescending. -->"},
    "1452": {"find": "(\bPCF[\s\n]+dev\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PCF Dev| is preferred. -->"},
    "1453": {"find": "(\bPCF[\s\n]+DEV\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PCF Dev| is preferred. -->"},
    "1454": {"find": "(\bPCF[\s\n]+Solutions\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The brand name is |Platform Ops|. -->"},
    "1455": {"find": "(\bPCFdev\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PCF Dev| is preferred. -->"},
    "1456": {"find": "(\bPCFS\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The brand name is |Platform Ops|. -->"},
    "1457": {"find": "(\bPCPU\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |physical CPU| is preferred. -->"},
    "1458": {"find": "(\bperform[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)procedure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |follow| is preferred over |perform|. -->"},
    "1459": {"find": "(\bPerform[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)procedure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Follow| is preferred over |Perform|. -->"},
    "1460": {"find": "(\bperform[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)procedures\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |follow| is preferred over |perform|. -->"},
    "1461": {"find": "(\bPerform[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)procedures\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Follow| is preferred over |Perform|. -->"},
    "1462": {"find": "(\bperform[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)steps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |follow| is preferred over |perform|. -->"},
    "1463": {"find": "(\bPerform[\s\n]+(\w+[\s\n]+|\w+[\s\n]+\w+[\s\n]+)steps\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Follow| is preferred over |Perform|. -->"},
    "1464": {"find": "(\bperform[\s\n]+one[\s\n]+of\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |perform one of the following actions| is better moved to the start of the step so that the reader is less likely to miss it. -->"},
    "1465": {"find": "(\bPersistent[\s\n]+Volume[\s\n]+Claim\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PersistentVolumeClaim| is preferred. -->"},
    "1466": {"find": "(\bPersistent[\s\n]+Volume\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PersistentVolume| is preferred. -->"},
    "1467": {"find": "(\bpick[\s\n]+and[\s\n]+choose\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |choose| alone is fine. -->"},
    "1468": {"find": "(\bpick\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |select| is preferred. -->"},
    "1469": {"find": "(\bPick\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Select| is preferred. -->"},
    "1470": {"find": "(\bpicking[\s\n]+and[\s\n]+choosing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |choose| alone is fine. -->"},
    "1471": {"find": "(\bPID[\s\n]+file\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Just |PID| is preferred. -->"},
    "1472": {"find": "(\bpid[\s\n]+file\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Just |PID| is preferred. -->"},
    "1473": {"find": "(\bpidfile\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Just |PID| is preferred. -->"},
    "1474": {"find": "(\bPIDfile\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Just |PID| is preferred. -->"},
    "1475": {"find": "(\bpinniped\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Pinniped| is preferred. -->"},
    "1476": {"find": "(\bPivotal,[\s\n]+Inc\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with |VMware|. -->"},
    "1477": {"find": "(\bPivotal[\s\n]+Cloud[\s\n]+Foundry[\s\n]+Dev\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PCF Dev| is preferred. -->"},
    "1478": {"find": "(\bPivotal[\s\n]+Cloud[\s\n]+Foundry[\s\n]+Solutions\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The brand name is |Platform Ops|. -->"},
    "1479": {"find": "(\bPivotal[\s\n]+Labs[\s\n]+and[\s\n]+Services\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The brand name is |VMware Pivotal Labs|. -->"},
    "1480": {"find": "(\bPivotal[\s\n]+Labs[\s\n]+and[\s\n]+Strategic[\s\n]+Services\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The brand name is |VMware Pivotal Labs|. -->"},
    "1481": {"find": "(\bPivotal[\s\n]+Services[\s\n]+(?!Marketplace)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The brand name is |VMware Pivotal Labs|. -->"},
    "1482": {"find": "(\bPivotal[\s\n]+Software\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with |VMware|. -->"},
    "1483": {"find": "(\bPivotalTracker\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Write |Pivotal Tracker| (first use on page in body text) and then |Tracker| (subsequent uses). -->"},
    "1484": {"find": "(\bplain-text\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace the hyphen with a space if referring to unformatted text. Delete the hyphen if referring to non-encrypted text. -->"},
    "1485": {"find": "(\bplatform[\s\n]+control[\s\n]+plane\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |CI/CD plane| is preferred. -->"},
    "1486": {"find": "(\bplease(?![\s\n]+email|[\s\n]+contact|[\s\n]+send|[\s\n]+speak|[\s\n]+\w*[\s\n]+\w*[\s\n]+issue|[\s\n]+\w*[\s\n]+\w*[\s\n]+ticket)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use unless asking the reader to do you a favor, such as giving feedback. -->"},
    "1487": {"find": "(\bPlease(?![\s\n]+email|[\s\n]+contact|[\s\n]+send|[\s\n]+speak|[\s\n]+\w*[\s\n]+\w*[\s\n]+issue|[\s\n]+\w*[\s\n]+\w*[\s\n]+ticket)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use unless asking the reader to do you a favor, such as giving feedback. -->"},
    "1488": {"find": "(\bplugin\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |plug-in| is the noun or adjective. |plug in| is the verb. -->"},
    "1489": {"find": "(\bPlugin\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Plug-in| is the noun or adjective. |Plug in| is the verb. -->"},
    "1490": {"find": "(\bplugins\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |plug-ins| is the noun or adjective. |plug in| is the verb. -->"},
    "1491": {"find": "(\bPlugins\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Plug-ins| is the noun or adjective. |Plug in| is the verb. -->"},
    "1492": {"find": "(\bplus\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a syonym for |and|. -->"},
    "1493": {"find": "(\bpoint[\s\n]+in[\s\n]+time[\s\n]+snapshot\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |point-in-time snapshot| is preferred. -->"},
    "1494": {"find": "(\bpoint[\s\n]+release\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use. v#.## is a |minor release|. v#.#.# is a |patch release|. -->"},
    "1495": {"find": "(\bpop-up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If referring to a menu that pops up, just write |pop-up| without |menu|. If referring to a dialog box, write |dialog box|. -->"},
    "1496": {"find": "(\bpopup\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If referring to a menu that pops up, just write |pop-up| without |menu|. If referring to a dialog box, write |dialog box|. -->"},
    "1497": {"find": "(\bPosgreSQL\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PostgreSQL| is preferred. -->"},
    "1498": {"find": "(\bposgreSQL\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PostgreSQL| is preferred. -->"},
    "1499": {"find": "(\bpost[^-](?!res|d\s)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Check if a hyphen is missing. -->"},
    "1500": {"find": "(\bpostgres\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PostgreSQL| is preferred. -->"},
    "1501": {"find": "(\bPostgres\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PostgreSQL| is preferred. -->"},
    "1502": {"find": "(\bPostgreSql\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PostgreSQL| is preferred. -->"},
    "1503": {"find": "(\bPostgresql\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PostgreSQL| is preferred. -->"},
    "1504": {"find": "(\bpostgresSQL\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PostgreSQL| is preferred. -->"},
    "1505": {"find": "(\bpostres\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PostgreSQL| is preferred. -->"},
    "1506": {"find": "(\bPostres\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PostgreSQL| is preferred. -->"},
    "1507": {"find": "(\bPostresql\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PostgreSQL| is preferred. -->"},
    "1508": {"find": "(\bPostreSql\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PostgreSQL| is preferred. -->"},
    "1509": {"find": "(\bPostresql\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PostgreSQL| is preferred. -->"},
    "1510": {"find": "(\bpostresSQL\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |PostgreSQL| is preferred. -->"},
    "1511": {"find": "(\bpower[\s\n]+down\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |power on| and |power off| for procedures such as powering a server on or off, but use |turn on| or |turn off| if a button press is all that is required. Do not use as nouns. -->"},
    "1512": {"find": "(\bPower[\s\n]+down\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |Power on| and |Power off| for procedures such as powering a server on or off, but use |Turn on| or |Turn off| if a button press is all that is required. Do not use as nouns. -->"},
    "1513": {"find": "(\bpower[\s\n]+off\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- OK for procedures such as powering a server on or off, but use |turn on| or |turn off| if a button press is all that is required. Do not use as nouns. -->"},
    "1514": {"find": "(\bPower[\s\n]+off\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- OK for procedures such as powering a server on or off, but use |Turn on| or |Turn off| if a button press is all that is required. Do not use as nouns. -->"},
    "1515": {"find": "(\bpower[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- OK for procedures such as powering a server on or off, but use |turn on| or |turn off| if a button press is all that is required. Do not use as nouns. -->"},
    "1516": {"find": "(\bPower[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- OK for procedures such as powering a server on or off, but use |Turn on| or |Turn off| if a button press is all that is required. Do not use as nouns. -->"},
    "1517": {"find": "(\bpower[\s\n]+up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |power on| and |power off| for procedures such as powering a server on or off, but use |turn on| or |turn off| if a button press is all that is required. Do not use as nouns. -->"},
    "1518": {"find": "(\bPower[\s\n]+up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |Power on| and |Power off| for procedures such as powering a server on or off, but use |Turn on| or |Turn off| if a button press is all that is required. Do not use as nouns. -->"},
    "1519": {"find": "(\bpowered-off\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |powered off| is preferred. -->"},
    "1520": {"find": "(\bPowered-off\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Powered off| is preferred. -->"},
    "1521": {"find": "(\bpowered-on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |powered on| is preferred. -->"},
    "1522": {"find": "(\bPowered-on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Powered on| is preferred. -->"},
    "1523": {"find": "(\bpowers[\s\n]+down\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |powers on| and |powers off| for procedures such as powersing a server on or off, but use |turn on| or |turn off| if a button press is all that is required. Do not use as nouns. -->"},
    "1524": {"find": "(\bPowers[\s\n]+down\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |Powers on| and |Powers off| for procedures such as powersing a server on or off, but use |Turn on| or |Turn off| if a button press is all that is required. Do not use as nouns. -->"},
    "1525": {"find": "(\bpowers[\s\n]+off\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- OK for procedures such as powersing a server on or off, but use |turn on| or |turn off| if a button press is all that is required. Do not use as nouns. -->"},
    "1526": {"find": "(\bPowers[\s\n]+off\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- OK for procedures such as powersing a server on or off, but use |Turn on| or |Turn off| if a button press is all that is required. Do not use as nouns. -->"},
    "1527": {"find": "(\bpowers[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- OK for procedures such as powersing a server on or off, but use |turn on| or |turn off| if a button press is all that is required. Do not use as nouns. -->"},
    "1528": {"find": "(\bPowers[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- OK for procedures such as powersing a server on or off, but use |Turn on| or |Turn off| if a button press is all that is required. Do not use as nouns. -->"},
    "1529": {"find": "(\bpowers[\s\n]+up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |powers on| and |powers off| for procedures such as powersing a server on or off, but use |turn on| or |turn off| if a button press is all that is required. Do not use as nouns. -->"},
    "1530": {"find": "(\bPowers[\s\n]+up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |Powers on| and |Powers off| for procedures such as powersing a server on or off, but use |Turn on| or |Turn off| if a button press is all that is required. Do not use as nouns. -->"},
    "1531": {"find": "(\bPP\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use this acronym for the brand name. -->"},
    "1532": {"find": "(\bpp\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use this acronym for the brand name. -->"},
    "1533": {"find": "(\bpre-defined\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |predefined| is preferred. -->"},
    "1534": {"find": "(\bPre-defined\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Predefined| is preferred. -->"},
    "1535": {"find": "(\bpre-existing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |existing| is preferred whenever possible. -->"},
    "1536": {"find": "(\bPre-existing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Existing| is preferred whenever possible. -->"},
    "1537": {"find": "(\bpre-install\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |preinstall| is preferred. -->"},
    "1538": {"find": "(\bPre-install\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Preinstall| is preferred. -->"},
    "1539": {"find": "(\bpre-requisite\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |prerequisite| is preferred. -->"},
    "1540": {"find": "(\bPre-requisite\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Prerequisite| is preferred. -->"},
    "1541": {"find": "(\bpre-requisites\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |prerequisites| is preferred. -->"},
    "1542": {"find": "(\bPre-requisites\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Prerequisites| is preferred. -->"},
    "1543": {"find": "(\bpre[\s\n]+\w(?!lass)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Check if a hyphen is missing. -->"},
    "1544": {"find": "(\bpreexisting\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |existing| is preferred whenever possible. -->"},
    "1545": {"find": "(\bPreexisting\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Existing| is preferred whenever possible. -->"},
    "1546": {"find": "(\bpreprovision\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |pre-provision| is preferred. -->"},
    "1547": {"find": "(\bPreprovision\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Pre-provision| is preferred. -->"},
    "1548": {"find": "(\bPreprovisioned\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Pre-provisioned| is preferred. -->"},
    "1549": {"find": "(\bpreprovisioned\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |pre-provisioned| is preferred. -->"},
    "1550": {"find": "(\bprerelease[\s\n]+beta\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |public beta| ius preferred. -->"},
    "1551": {"find": "(\bPrerelease[\s\n]+beta\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Public beta| is preferred. -->"},
    "1552": {"find": "(\bprerequisite\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Requirements are things needed to install and run the product. We list them on the product index page. Prerequisites are things needed for a given procedure beyond the product requirements. We list those on the procedure page. -->"},
    "1553": {"find": "(\bpresent[\s\n]+itself\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |appear| might be better. -->"},
    "1554": {"find": "(\bpresented[\s\n]+itself\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |appeared| might be better. -->"},
    "1555": {"find": "(\bpresents[\s\n]+itself\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |appears| might be better. -->"},
    "1556": {"find": "(\bprevious[\s\n]+step\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Write |earlier in this procedure| or, if referring to a separate procedure, link to it. -->"},
    "1557": {"find": "(\bprior[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |before| is preferred. -->"},
    "1558": {"find": "(\bPrior[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Before| is preferred. -->"},
    "1559": {"find": "(\bprocfile\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Procfile| is preferred. -->"},
    "1560": {"find": "(\bprod\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |production| is preferred. -->"},
    "1561": {"find": "(\bProduct[\s\n]+Version[\s\n]+Matrix\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Product Compatibility Matrix| is preferred. -->"},
    "1562": {"find": "(\bprompt\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dialog box| is preferred. -->"},
    "1563": {"find": "(\bpros\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |advantages| is preferred. -->"},
    "1564": {"find": "(\bPros\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Advantages| is preferred. -->"},
    "1565": {"find": "(\bPSOD\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with a description of what the user sees and recommend a course of action. -->"},
    "1566": {"find": "(\bPSOD\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with a description of what the user sees and recommend a course of action. -->"},
    "1567": {"find": "(\bpull-down[\s\n]+list\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |drop-down menu| is preferred. -->"},
    "1568": {"find": "(\bPull-down[\s\n]+list\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Drop-down menu| is preferred. -->"},
    "1569": {"find": "(\bpurple[\s\n]+screen[\s\n]+of[\s\n]+death\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with a description of what the user sees and recommend a course of action. -->"},
    "1570": {"find": "(\bPurple[\s\n]+screen[\s\n]+of[\s\n]+death\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with a description of what the user sees and recommend a course of action. -->"},
    "1571": {"find": "(\bquit\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |exit a program|, |end a session|, or |close a window|. -->"},
    "1572": {"find": "(\bQuit\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |Exit a program|, |End a session|, or |Close a window|. -->"},
    "1573": {"find": "(\bQuorum[\s\n]+Queue\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |quorum queue| is preferred. -->"},
    "1574": {"find": "(\bQuorum[\s\n]+Queues\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |quorum queues| is preferred. -->"},
    "1575": {"find": "(\bRabbit[\s\n]+MQ\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |RabbitMQ| is preferred. -->"},
    "1576": {"find": "(\bRabbitMQ[\s\n]+Cluster[\s\n]+Operator\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |RabbitMQ Cluster Kubernetes operator| or, after first use and where not ambiguous, |cluster operator|. -->"},
    "1577": {"find": "(\bRabbitMQ[\s\n]+dashboard\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |RabbitMQ Management UI| is preferred. -->"},
    "1578": {"find": "(\bRabbitMQ[\s\n]+Dashboard\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |RabbitMQ Management UI| is preferred. -->"},
    "1579": {"find": "(\bRabbitMQ[\s\n]+Management[\s\n]+Interface\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |RabbitMQ Management UI| is preferred. -->"},
    "1580": {"find": "(\bRabbitMQ[\s\n]+Messaging[\s\n]+Topology[\s\n]+Operator\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |RabbitMQ Messaging Topology Kubernetes operator| or, after first use and where not ambiguous, |topology operator|. -->"},
    "1581": {"find": "(\bRabbitMq\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |RabbitMQ| is preferred. -->"},
    "1582": {"find": "(\bRabbitMQCluster\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |RabbitmqCluster| is preferred. -->"},
    "1583": {"find": "(\bRabbitMQcluster\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |RabbitmqCluster| is preferred. -->"},
    "1584": {"find": "(\bRabbitmqcluster\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |RabbitmqCluster| is preferred. -->"},
    "1585": {"find": "(\bRabbitmqClusters\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The plural form is |`RabbitmqCluster` resources|. -->"},
    "1586": {"find": "(\bRam\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |RAM| is preferred. -->"},
    "1587": {"find": "(\bram\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |RAM| is preferred. -->"},
    "1588": {"find": "(\bre-appear\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |reappear| is preferred. -->"},
    "1589": {"find": "(\bRe-appear\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Reappear| is preferred. -->"},
    "1590": {"find": "(\bre-boot\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*</code>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*>))", "replace": "$1<!-- |reboot| is preferred. -->"},
    "1591": {"find": "(\bRe-boot\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Reboot| is preferred. -->"},
    "1592": {"find": "(\bre-compile\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |recompile| is preferred. -->"},
    "1593": {"find": "(\bRe-compile\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Recompile| is preferred. -->"},
    "1594": {"find": "(\bre-create\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |recreate| is preferred. -->"},
    "1595": {"find": "(\bRe-create\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Recreate| is preferred. -->"},
    "1596": {"find": "(\bre-do\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |redo| is preferred. -->"},
    "1597": {"find": "(\bRe-do\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Redo| is preferred. -->"},
    "1598": {"find": "(\bre-generate\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |regenerate| is preferred. -->"},
    "1599": {"find": "(\bRe-generate\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Re-generate| is preferred. -->"},
    "1600": {"find": "(\bre-stage\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |restage| is preferred. -->"},
    "1601": {"find": "(\bRe-stage\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Restage| is preferred. -->"},
    "1602": {"find": "(\bre-subscribe\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |resubscribe| is preferred. -->"},
    "1603": {"find": "(\bRe-subscribe\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Re-subscribe| is preferred. -->"},
    "1604": {"find": "(\bread[\s\n]+more[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |read more about| is preferred. -->"},
    "1605": {"find": "(\breadme\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |README| is preferred. -->"},
    "1606": {"find": "(\bReadme\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |README| is preferred. -->"},
    "1607": {"find": "(\breal[\s\n]+machine\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |physical machine| is preferred. -->"},
    "1608": {"find": "(\bReal[\s\n]+machine\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Physical machine| is preferred. -->"},
    "1609": {"find": "(\breal[\s\n]+machines\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |physical machines| is preferred. -->"},
    "1610": {"find": "(\bReal[\s\n]+machines\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Physical machines| is preferred. -->"},
    "1611": {"find": "(\breasons[\s\n]+as[\s\n]+to[\s\n]+why\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |reasons why| is shorter. -->"},
    "1612": {"find": "(\bReasons[\s\n]+as[\s\n]+to[\s\n]+why\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Reasons why| is shorter. -->"},
    "1613": {"find": "(\brecommend[\s\n]+against\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware discourages| is preferred for closed source. |Cloud Foundry discourages| for open source. -->"},
    "1614": {"find": "(\brecommendation[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- recommendation for -->"},
    "1615": {"find": "(\brecommendations[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- recommendations for -->"},
    "1616": {"find": "(\brecommends[\s\n]+against\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware discourages| is preferred for closed source. |Cloud Foundry discourages| for open source. -->"},
    "1617": {"find": "(\brefarch\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The directory name |plan| is preferred over |refarch|. -->"},
    "1618": {"find": "(\brefer[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If telling the reader to read something else, use |see|. -->"},
    "1619": {"find": "(\bRefer[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If telling the reader to read somewhere else, use |See|. -->"},
    "1620": {"find": "(\breferred[\s\n]+to[\s\n]+as\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |called| is preferred. -->"},
    "1621": {"find": "(\bremember[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant -->"},
    "1622": {"find": "(\bRemember[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant -->"},
    "1623": {"find": "(\bremove[\s\n]+and[\s\n]+replace\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use just |replace|. -->"},
    "1624": {"find": "(\bRemove[\s\n]+and[\s\n]+replace\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use just |replace|. -->"},
    "1625": {"find": "(\bremoved[\s\n]+and[\s\n]+replaced\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use just |replaced|. -->"},
    "1626": {"find": "(\bRemoved[\s\n]+and[\s\n]+replaced\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use just |replaced|. -->"},
    "1627": {"find": "(\brepo\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |repository| is preferred. -->"},
    "1628": {"find": "(\brequirement\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Requirements are things needed to install and run the product. We list them on the product index page. Prerequisites are things needed for a given procedure beyond the product requirements. We list those on the procedure page. -->"},
    "1629": {"find": "(\bresizeable\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |resizable| is preferred. -->"},
    "1630": {"find": "(\bResizeable\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Resizable| is preferred. -->"},
    "1631": {"find": "(\bResolved\b[\s\n]+\bIssue\b(?=\n+[^:]+\.)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Add a stem to introduce the resolved issue. -->"},
    "1632": {"find": "(\bResolved\b[\s\n]+\bIssues\b(?=\n+[^:]+\.)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Add a stem to introduce the resolved issues. -->"},
    "1633": {"find": "(\brestoration\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |restore| as both a verb and a noun. -->"},
    "1634": {"find": "(\bresults[\s\n]+in\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider replacing with |causes|. -->"},
    "1635": {"find": "(\bresurrector\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Resurrector| is preferred. -->"},
    "1636": {"find": "(\bright[\s\n]+hand\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |right| is preferred. -->"},
    "1637": {"find": "(\bRMQ[\s\n]+dashboard\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |RabbitMQ Management UI| is preferred. -->"},
    "1638": {"find": "(\bRMQ[\s\n]+Dashboard\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |RabbitMQ Management UI| is preferred. -->"},
    "1639": {"find": "(\bRMQ[\s\n]+for[\s\n]+VMs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |RabbitMQ for VMs| is preferred. -->"},
    "1640": {"find": "(\bRMQ[\s\n]+Management[\s\n]+Interface\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |RabbitMQ Management UI| is preferred. -->"},
    "1641": {"find": "(\bRole-binding\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |role binding| is preferred. -->"},
    "1642": {"find": "(\bRole-Binding\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |role binding| is preferred. -->"},
    "1643": {"find": "(\bRole[\s\n]+Binding\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |role binding| is preferred. -->"},
    "1644": {"find": "(\bRolebinding\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |role binding| is preferred. -->"},
    "1645": {"find": "(\broll-out\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |rollout| is preferred. -->"},
    "1646": {"find": "(\bRoll-out\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Rollout| is preferred. -->"},
    "1647": {"find": "(\brule-set\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |rule set| is preferred. -->"},
    "1648": {"find": "(\bRule-set\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Rule set| is preferred. -->"},
    "1649": {"find": "(\brule[\s\n]+of[\s\n]+thumb\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |rule| or |guideline| is preferred. -->"},
    "1650": {"find": "(\bRule[\s\n]+of[\s\n]+thumb\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Rule| or |Guideline| is preferred. -->"},
    "1651": {"find": "(\bRule[\s\n]+of[\s\n]+Thumb\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Rule| or |Guideline| is preferred. -->"},
    "1652": {"find": "(\bruleset\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |rule set| is preferred. -->"},
    "1653": {"find": "(\bRuleset\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Rule set| is preferred. -->"},
    "1654": {"find": "(\brun-time\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |runtime| is preferred as a noun and as an adjective. -->"},
    "1655": {"find": "(\bRun-time\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Runtime| is preferred as a noun and as an adjective. -->"},
    "1656": {"find": "(\brun[\s\n]+time\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |runtime| is preferred as a noun and as an adjective. -->"},
    "1657": {"find": "(\brun[\s\n]+time\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |runtime| is preferred as a noun and as an adjective. -->"},
    "1658": {"find": "(\bRun[\s\n]+time\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Runtime| is preferred as a noun and as an adjective. -->"},
    "1659": {"find": "(\bRunner[\s\n]+VM\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |host VM| is preferred. -->"},
    "1660": {"find": "(\bRuntime[\s\n]+CredHub\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |runtime CredHub| is preferred. -->"},
    "1661": {"find": "(\bruntimes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |runtime durations| or |runtime environments| is preferred, depending on meaning. -->"},
    "1662": {"find": "(\bsanity\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |confidence test| or |confidence check| is preferred. -->"},
    "1663": {"find": "(\bSanity\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Confidence test| or |Confidence check| is preferred. -->"},
    "1664": {"find": "(\bscaleable\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |scalable| is preferred. -->"},
    "1665": {"find": "(\bScaleable\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Scalable| is preferred. -->"},
    "1666": {"find": "(\bSCP[\s\n]+Toolkit\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Services Toolkit for VMware| on first use in topic. |Services Toolkit| thereafter.  -->"},
    "1667": {"find": "(\bSCP[\s\n]+toolkit\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Services Toolkit for VMware| on first use in topic. |Services Toolkit| thereafter.  -->"},
    "1668": {"find": "(\bscp[\s\n]+toolkit\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Services Toolkit for VMware| on first use in topic. |Services Toolkit| thereafter.  -->"},
    "1669": {"find": "(\bscp[\s\n]+Toolkit\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Services Toolkit for VMware| on first use in topic. |Services Toolkit| thereafter.  -->"},
    "1670": {"find": "(\bscreen-shot\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |screenshot| is preferred. If introducing a screenshot, consider if you really need to: good screenshots are self-explanatory by nature and by placement within the topic. -->"},
    "1671": {"find": "(\bScreen-shot\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Screenshot| is preferred. If introducing a screenshot, consider if you really need to: good screenshots are self-explanatory by nature and by placement within the topic. -->"},
    "1672": {"find": "(\bscreen-shots\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |screenshots| is preferred. If introducing a screenshot, consider if you really need to: good screenshots are self-explanatory by nature and by placement within the topic. -->"},
    "1673": {"find": "(\bScreen-shots\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Screenshots| is preferred. If introducing a screenshot, consider if you really need to: good screenshots are self-explanatory by nature and by placement within the topic. -->"},
    "1674": {"find": "(\bScreen[\n\s]+shot\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Screenshot| is preferred. If introducing a screenshot, consider if you really need to: good screenshots are self-explanatory by nature and by placement within the topic. -->"},
    "1675": {"find": "(\bscreen[\s\n]+shot\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |screenshot| is preferred. If introducing a screenshot, consider if you really need to: good screenshots are self-explanatory by nature and by placement within the topic. -->"},
    "1676": {"find": "(\bscreenshot\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If introducing a screenshot, consider if you really need to: good screenshots are self-explanatory by nature and by placement within the topic. -->"},
    "1677": {"find": "(\bScreenshot\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If introducing a screenshot, consider if you really need to: good screenshots are self-explanatory by nature and by placement within the topic. -->"},
    "1678": {"find": "(\bscreenshots\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If introducing a screenshot, consider if you really need to: good screenshots are self-explanatory by nature and by placement within the topic. -->"},
    "1679": {"find": "(\bScreenshots\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If introducing a screenshot, consider if you really need to: good screenshots are self-explanatory by nature and by placement within the topic. -->"},
    "1680": {"find": "(\bsection[\s\n]+of[\s\n]+the[\s\n]+documentation\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider deleting |of the documentation|. -->"},
    "1681": {"find": "(\bSecure[\s\n]+Shell\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |SSH| is preferred. -->"},
    "1682": {"find": "(\bSecurity[\s\n]+Assertion[\s\n]+Markup[\s\n]+Language\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Never spell out SAML. -->"},
    "1683": {"find": "(\bsecurity[\s\n]+assertion[\s\n]+markup[\s\n]+language\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Never spell out SAML. -->"},
    "1684": {"find": "(\bsegregate\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |separate| is preferred. -->"},
    "1685": {"find": "(\bSegregate\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Separate| is preferred. -->"},
    "1686": {"find": "(\bsegregation\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |separation| is preferred. -->"},
    "1687": {"find": "(\bSegregation\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Separation| is preferred. -->"},
    "1688": {"find": "(\bselect[\s\n]+[A-Z](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Embolden the names of UI elements that you instruct the reader to interact with. -->"},
    "1689": {"find": "(\bSelect[\s\n]+[A-Z](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Embolden the names of UI elements that you instruct the reader to interact with. -->"},
    "1690": {"find": "(\bSelect[\s\n]+th[a-z]+[\s\n]+box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Select the check box| is preferred. -->"},
    "1691": {"find": "(\bselect[\s\n]+th[a-z]+[\s\n]+box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |select the check box| is preferred. -->"},
    "1692": {"find": "(\bselector\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |drop-down menu| is preferred. -->"},
    "1693": {"find": "(\bSelector\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Drop-down menu| is preferred. -->"},
    "1694": {"find": "(\bself[\s\n]+\w+ed\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Check if a hyphen is missing. -->"},
    "1695": {"find": "(\bSelf[\s\n]+\w+ed\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Check if a hyphen is missing. -->"},
    "1696": {"find": "(\bService-Gateway[\s\n]+access\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The RabbitMQ feature is |Service-gateway access|. -->"},
    "1697": {"find": "(\bService-gateway[\s\n]+Access\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The RabbitMQ feature is |Service-gateway access|. -->"},
    "1698": {"find": "(\bService-Gateway[\s\n]+Access\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The RabbitMQ feature is |Service-gateway access|. -->"},
    "1699": {"find": "(\bservice[\s\n]+broker[\s\n]+API\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Service Broker API| is preferred. -->"},
    "1700": {"find": "(\bService[\s\n]+Gateway[\s\n]+Access\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The RabbitMQ feature is |Service-gateway access|. -->"},
    "1701": {"find": "(\bservice[\s\n]+instance[\s\n]+credentials\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |binding credentials| is preferred. -->"},
    "1702": {"find": "(\bService[\s\n]+Key\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Only capitalize |service key| when it is part of a title -->"},
    "1703": {"find": "(\bservice[\s\n]+principle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- This is likely a misspelling of |service principal|. -->"},
    "1704": {"find": "(\bService[\s\n]+principle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- This is likely a misspelling of |Service principal|. -->"},
    "1705": {"find": "(\bService[\s\n]+Principle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- This is likely a misspelling of |Service Principal|. -->"},
    "1706": {"find": "(\bServices[\s\n]+Marketplace\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Marketplace| is preferred. -->"},
    "1707": {"find": "(\bServices[\s\n]+toolkit\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Services Toolkit| is the styling for the TAP component. -->"},
    "1708": {"find": "(\bServing[\s\n]+component\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- In Knative docs, |Knative Serving| is preferred, sans |component|. -->"},
    "1709": {"find": "(\bserving\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- In Knative docs, |Knative Serving| is preferred. -->"},
    "1710": {"find": "(\bset-up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |set up| as a verb. |setup| as a noun. -->"},
    "1711": {"find": "(\bSet-up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Set up| as a verb. |Setup| as a noun. -->"},
    "1712": {"find": "(\bset-ups\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |set up| as a verb. |setups| as a noun. -->"},
    "1713": {"find": "(\bSet-ups\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Set up| as a verb. |Setups| as a noun. -->"},
    "1714": {"find": "(\bset[\s\n]+to[\s\n]+off\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |deactivated| might be better. -->"},
    "1715": {"find": "(\bset[\s\n]+to[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |enabled| might be better. -->"},
    "1716": {"find": "(\bsettings[\s\n]+data\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |configuration data| is preferred. -->"},
    "1717": {"find": "(\bsetup[\s\n]+th(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |set up| as a verb. |setup| as a noun. -->"},
    "1718": {"find": "(\bSetup[\s\n]+th(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Set up| as a verb. |Setup| as a noun. -->"},
    "1719": {"find": "(\bseventy\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use numerals for numbers greater than nine. -->"},
    "1720": {"find": "(\bseveral[\s\n]+different\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |several| or |different|, but not both. -->"},
    "1721": {"find": "(\bSeveral[\s\n]+different\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |Several| or |Different|, but not both. -->"},
    "1722": {"find": "(\bsha\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |SHA| is preferred. -->"},
    "1723": {"find": "(\bshan't\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1724": {"find": "(\bsharable\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |shareable| is preferred. -->"},
    "1725": {"find": "(\bSharable\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Shareable| is preferred. -->"},
    "1726": {"find": "(\bshared[\s\n]+VM[\s\n]+plan\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |shared-VM plan| is preferred. -->"},
    "1727": {"find": "(\bShared[\s\n]+VM[\s\n]+plan\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |shared-VM plan| is preferred. -->"},
    "1728": {"find": "(\bShared[\s\n]+VM[\s\n]+Plan\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |shared-VM plan| is preferred. -->"},
    "1729": {"find": "(\bshared[\s\n]+VM[\s\n]+Plan\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |shared-VM plan| is preferred. -->"},
    "1730": {"find": "(\bshe'd\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. Also, |they| is preferred. -->"},
    "1731": {"find": "(\bShe'd\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. Also, |They| is preferred. -->"},
    "1732": {"find": "(\bshe'll\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. Also, |they| is preferred. -->"},
    "1733": {"find": "(\bShe'll\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. Also, |They| is preferred. -->"},
    "1734": {"find": "(\bshe's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |they| is preferred. -->"},
    "1735": {"find": "(\bShe's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |They| is preferred. -->"},
    "1736": {"find": "(\bshe\/he[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Change to plural and use |they|. -->"},
    "1737": {"find": "(\bShe\/he[\s\n]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Change to plural and use |They|. -->"},
    "1738": {"find": "(\bshift\+click\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Shift+click| is preferred. -->"},
    "1739": {"find": "(\bShift\+Click\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Shift+click| is preferred. -->"},
    "1740": {"find": "(\bships[\s\n]+with\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |includes| is preferred. -->"},
    "1741": {"find": "(\bShort[\s\n]+term\b[^\.:;,](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Short term| is missing a hyphen here if it is a compound adjective. -->"},
    "1742": {"find": "(\bshort[\s\n]+term\b[^\.:;,](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |short term| is missing a hyphen here if it is a compound adjective. -->"},
    "1743": {"find": "(\bshould've\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1744": {"find": "(\bshould\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Favour certainty, agency, and imperatives: |the app now works| over |the app should now work|. |VMware recommends| over |you should|. If an imperative, |do this| over |you should do this|.   -->"},
    "1745": {"find": "(\bShould\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Favour certainty, agency, and imperatives: |the app now works| over |the app should now work|. |VMware recommends| over |you should|. If an imperative, |do this| over |you should do this|.   -->"},
    "1746": {"find": "(\bshouldn't\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Favour certainty, agency, and imperatives: |the app now works| over |the app should now work|. |VMware recommends| over |you should|. If an imperative, |do this| over |you should do this|.   -->"},
    "1747": {"find": "(\bsimple\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid suggesting an instruction is |simple| or |easy|. -->"},
    "1748": {"find": "(\bsimply\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid suggesting an instruction is |simple| or |easy|. -->"},
    "1749": {"find": "(\bSimply\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant -->"},
    "1750": {"find": "(\bsince\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |since| where you can use |because|. -->"},
    "1751": {"find": "(\bSince\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |Since| where you can use |Because|. -->"},
    "1752": {"find": "(\bsixty\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use numerals for numbers greater than nine. -->"},
    "1753": {"find": "(\bslave\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred alternatives: |secondary|, |worker|. Other alternative: |replica|. -->"},
    "1754": {"find": "(\bSlave\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred alternatives: |Secondary|, |Worker|. Other alternative: |Replica|. -->"},
    "1755": {"find": "(\bslice[\s\n]+and[\s\n]+dice\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with an alternative phrase unless specifically discussing OLAP database operations. -->"},
    "1756": {"find": "(\bSlice[\s\n]+and[\s\n]+dice\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Replace with an alternative phrase unless specifically discussing OLAP database operations. -->"},
    "1757": {"find": "(\bsmoketest\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |smoke test| (n.) or |smoke-test| (adj.) is preferred. -->"},
    "1758": {"find": "(\bSmoketest\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |smoke tests| (n.) or |smoke-tests| (adj.) is preferred. -->"},
    "1759": {"find": "(\bsmoketests\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |smoke tests| (n.) or |smoke-tests| (adj.) is preferred. -->"},
    "1760": {"find": "(\bSmoketests\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |smoke tests| (n.) or |smoke-tests| (adj.) is preferred. -->"},
    "1761": {"find": "(\bsocks\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |SOCKS| is preferred. Do not spell it out, even on first use. -->"},
    "1762": {"find": "(\bSocks\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |SOCKS| is preferred. Do not spell it out, even on first use. -->"},
    "1763": {"find": "(\bSoftware[\s\n]+Catalog\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |software catalog| is the preferred casing. -->"},
    "1764": {"find": "(\bsome[\s\n]+time\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use vague indications of time. If a delay might be an issue for the user, be precise. -->"},
    "1765": {"find": "(\bSome[\s\n]+time\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use vague indications of time. If a delay might be an issue for the user, be precise. -->"},
    "1766": {"find": "(\bsomebody's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1767": {"find": "(\bSomebody's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1768": {"find": "(\bsomeone's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1769": {"find": "(\bSomeone's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1770": {"find": "(\bsound-card\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |sound card| is preferred. -->"},
    "1771": {"find": "(\bSound-card\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Sound card| is preferred. -->"},
    "1772": {"find": "(\bsound-cards\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |sound cards| is preferred. -->"},
    "1773": {"find": "(\bSound-cards\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Sound cards| is preferred. -->"},
    "1774": {"find": "(\bsoundcard\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |sound card| is preferred. -->"},
    "1775": {"find": "(\bSoundcard\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Sound card| is preferred. -->"},
    "1776": {"find": "(\bsoundcards\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |sound cards| is preferred. -->"},
    "1777": {"find": "(\bSoundcards\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Sound cards| is preferred. -->"},
    "1778": {"find": "(\bspace[\s\n]+bar\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |spacebar| is the name of the key. Note the casing. -->"},
    "1779": {"find": "(\bSpace[\s\n]+bar\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |spacebar| is the name of the key. Note the casing. -->"},
    "1780": {"find": "(\bSpace[\s\n]+Bar\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |spacebar| is the name of the key. Note the casing. -->"},
    "1781": {"find": "(\bSpaceBar\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |spacebar| is the name of the key. Note the casing. -->"},
    "1782": {"find": "(\bSpacebar\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |spacebar| is the name of the key. Note the casing. -->"},
    "1783": {"find": "(\bspec\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |specifications| is preferred. -->"},
    "1784": {"find": "(\bspecs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |specifications| is preferred. -->"},
    "1785": {"find": "(\bspread[\s\n]+sheet\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |spreadsheet| is preferred. -->"},
    "1786": {"find": "(\bSpread[\s\n]+sheet\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Spreadsheet| is preferred. -->"},
    "1787": {"find": "(\bspread[\s\n]+sheets\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |spreadsheets| is preferred. -->"},
    "1788": {"find": "(\bSpread[\s\n]+sheets\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Spreadsheets| is preferred. -->"},
    "1789": {"find": "(\bSpring[\s\n]+\d\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Spring Framework #| is preferred. -->"},
    "1790": {"find": "(\bSpring[\s\n]+Cloud[\s\n]+DataFlow\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Spring Cloud Data Flow| is preferred. -->"},
    "1791": {"find": "(\bSpring[\s\n]+framework[\s\n]+\d(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Spring Framework #| is preferred. -->"},
    "1792": {"find": "(\bspringboot\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Spring Boot| is preferred. -->"},
    "1793": {"find": "(\bSpringBoot\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Spring Boot| is preferred. -->"},
    "1794": {"find": "(\bssh\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |SSH| is preferred. -->"},
    "1795": {"find": "(\bstandalone-(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |standalone-| is preferred. -->"},
    "1796": {"find": "(\bStandalone-(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Standalone-| is preferred. -->"},
    "1797": {"find": "(\bstandard[\s\n]+error\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |stderr| is preferred. -->"},
    "1798": {"find": "(\bstandard[\s\n]+input\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |stdin| is preferred. -->"},
    "1799": {"find": "(\bstandard[\s\n]+output\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |stdout| is preferred. -->"},
    "1800": {"find": "(\bstanza\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |section| is preferred. -->"},
    "1801": {"find": "(\bstart-up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |start up| as a verb. |startup| as a noun. -->"},
    "1802": {"find": "(\bStart-up\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Start up| as a verb. |Startup| as a noun. -->"},
    "1803": {"find": "(\bstatefulset\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |StatefulSet| is the K8s docs style. -->"},
    "1804": {"find": "(\bStatefulset\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |StatefulSet| is the K8s docs style. -->"},
    "1805": {"find": "(\bstatefulsets\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |StatefulSet| is the K8s docs style. -->"},
    "1806": {"find": "(\bStatefulsets\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |StatefulSet| is the K8s docs style. -->"},
    "1807": {"find": "(\bSTDERR\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |stderr| is preferred. -->"},
    "1808": {"find": "(\bSTDIN\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |stdin| is preferred. -->"},
    "1809": {"find": "(\bSTDOUT\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |stdout| is preferred. -->"},
    "1810": {"find": "(\bstem-cell\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |stemcell| is preferred. -->"},
    "1811": {"find": "(\bstem[\s\n]+cell\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |stemcell| is preferred. -->"},
    "1812": {"find": "(\bStemCell\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |stemcell| is preferred. -->"},
    "1813": {"find": "(\bsteps[\s\n]+\w*:(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- To introduce steps just write |To do x:| -->"},
    "1814": {"find": "(\bsteps[\s\n]+on[\s\n]+[a-z]*ing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |steps for doing x| is more natural English than |steps on doing x| -->"},
    "1815": {"find": "(\bSteps[\s\n]+on[\s\n]+[a-z]*ing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Steps for doing x| is more natural English than |Steps on doing x| -->"},
    "1816": {"find": "(\bstorage[\s\n]+space\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |hard disk space| is preferred. -->"},
    "1817": {"find": "(\bstorage[\s\n]+space\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |hard disk space| is preferred. -->"},
    "1818": {"find": "(\bStorage[\s\n]+space\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Hard disk space| is preferred. -->"},
    "1819": {"find": "(\bStorage[\s\n]+space\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Hard disk space| is preferred. -->"},
    "1820": {"find": "(\bstorageClass\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |StorageClass| is the K8s docs style. -->"},
    "1821": {"find": "(\bStorageClasses\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |storage classes| is preferred. Although, for k8s, the singular is |StorageClass|. -->"},
    "1822": {"find": "(\bstorageclasses\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |storage classes| is preferred. Although, for k8s, the singular is |StorageClass|. -->"},
    "1823": {"find": "(\bstrongly\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider deleting, especially if it precedes |recommend|. -->"},
    "1824": {"find": "(\bsub-directory\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |subdirectory| is preferred. -->"},
    "1825": {"find": "(\bsub-property\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |subproperty| is preferred. -->"},
    "1826": {"find": "(\bsubpar\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use. -->"},
    "1827": {"find": "(\bSubpar\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use. -->"},
    "1828": {"find": "(\bsuffer\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred alternatives are |decrease|, |lessen|, |shrink|, |increase|, and |grow|. -->"},
    "1829": {"find": "(\bSuffer\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred alternatives are |Decrease|, |Lessen|, |Shrink|, |Increase|, and |Grow|. -->"},
    "1830": {"find": "(\bsuite\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Only use |suite| when describing a bundle of products sold together under a single SKU. -->"},
    "1831": {"find": "(\bsuper[\s\n]+user\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |superuser| is preferred. -->"},
    "1832": {"find": "(\bSuper[\s\n]+user\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Superuser| is preferred. -->"},
    "1833": {"find": "(\bSupply[\s\n]+Chain[\s\n]+Security[\s\n]+Tools[\s\n]+-[\s\n]+Scan\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Supply Chain Security Tools (SCST) - Scan| on first use. |SCST - Scan| thereafter. -->"},
    "1834": {"find": "(\bSupply[\s\n]+Chain[\s\n]+Security[\s\n]+Tools[\s\n]+-[\s\n]+Sign\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Supply Chain Security Tools (SCST) - Sign| on first use. |SCST - Sign| thereafter. -->"},
    "1835": {"find": "(\bSupply[\s\n]+Chain[\s\n]+Security[\s\n]+Tools[\s\n]+-[\s\n]+Store\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Supply Chain Security Tools (SCST) - Store| on first use. |SCST - Store| thereafter. -->"},
    "1836": {"find": "(\bSuSE[\s\n]+Linux\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |SUSE Linux| is preferred. -->"},
    "1837": {"find": "(\bswapfile\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |swap file| is preferred. -->"},
    "1838": {"find": "(\bSwapfile\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Swap file| is preferred. -->"},
    "1839": {"find": "(\bswapfiles\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |swap files| is preferred. -->"},
    "1840": {"find": "(\bSwapfiles\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Swap files| is preferred. -->"},
    "1841": {"find": "(\bsync.d\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |synchronized| is preferred. -->"},
    "1842": {"find": "(\bSync.d\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Synchronized| is preferred. -->"},
    "1843": {"find": "(\bsynch\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |sync| is preferred. Acceptable as a verb. Do not use |sync’d|. -->"},
    "1844": {"find": "(\bSynch\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Sync| is preferred. Acceptable as a verb. Do not use |Sync’d|. -->"},
    "1845": {"find": "(\bsynchronize\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |sync| is preferred. Acceptable as a verb. Do not use |sync’d|. -->"},
    "1846": {"find": "(\bsynchronized\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |synced| is preferred. Acceptable as a verb. -->"},
    "1847": {"find": "(\btable\>[\s\n]*\*(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Put the asterisk in superscript tags. -->"},
    "1848": {"find": "(\btake[\s\n]+one[\s\n]+of\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |take one of the following actions| is better moved to the start of the step so that the reader is less likely to miss it. -->"},
    "1849": {"find": "(\bTanzu[\s\n]+App[\s\n]+Network\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware Tanzu Network| is the brand. Note the lack of |the|. -->"},
    "1850": {"find": "(\bTanzu[\s\n]+Application[\s\n]+GUI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Tanzu Application Platform GUI| is the component name. -->"},
    "1851": {"find": "(\bTanzu[\s\n]+Application[\s\n]+Network\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware Tanzu Network| is the brand. Note the lack of |the|. -->"},
    "1852": {"find": "(\bTanzu[\s\n]+Application[\s\n]+Platform[\s\n]+Graphical[\s\n]+User[\s\n]+Interface\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Tanzu Application Platform GUI| is preferred. No |the| at the start. -->"},
    "1853": {"find": "(\bTanzu[\s\n]+Application[\s\n]+Platform[\s\n]+UI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Tanzu Application Platform GUI| is preferred. No |the| at the start. -->"},
    "1854": {"find": "(\bTanzu[\s\n]+Application[\s\n]+Platform\b[\s\n]+add-on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tanzu Application Platform has |components|, not |add-ons|, |plug-ins|, or |capabilities|. -->"},
    "1855": {"find": "(\bTanzu[\s\n]+Application[\s\n]+Platform\b[\s\n]+add-ons\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tanzu Application Platform has |components|, not |add-ons|, |plug-ins|, or |capabilities|. -->"},
    "1856": {"find": "(\bTanzu[\s\n]+Application[\s\n]+Platform\b[\s\n]+capabilities\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tanzu Application Platform has |components|, not |add-ons|, |plug-ins|, or |capabilities|. -->"},
    "1857": {"find": "(\bTanzu[\s\n]+Application[\s\n]+Platform\b[\s\n]+capability\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tanzu Application Platform has |components|, not |add-ons|, |plug-ins|, or |capabilities|. -->"},
    "1858": {"find": "(\bTanzu[\s\n]+Application[\s\n]+Platform\b[\s\n]+plug-in\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tanzu Application Platform has |components|, not |add-ons|, |plug-ins|, or |capabilities|. -->"},
    "1859": {"find": "(\bTanzu[\s\n]+Application[\s\n]+Platform\b[\s\n]+plug-ins\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tanzu Application Platform has |components|, not |add-ons|, |plug-ins|, or |capabilities|. -->"},
    "1860": {"find": "(\bTanzu[\s\n]+Developer[\s\n]+Tools(?![\s\n]+for)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Ensure you use the official shorthand, such as |Tanzu Developer Tools for VS Code|. -->"},
    "1861": {"find": "(\bTanzu[\s\n]+Net\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware Tanzu Network| is preferred. Note the lack of |the|. -->"},
    "1862": {"find": "(\bTanzu[\s\n]+net\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware Tanzu Network| is preferred. -->"},
    "1863": {"find": "(\bTanzu[\s\n]+network(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware Tanzu Network| is preferred. -->"},
    "1864": {"find": "(\bTanzu[\s\n]+Tools\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Ensure you use the official shorthand, such as |Tanzu Developer Tools for VS Code|. -->"},
    "1865": {"find": "(\btanzu\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The brand is |Tanzu|. -->"},
    "1866": {"find": "(\bTanzuNet\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware Tanzu Network| is preferred. -->"},
    "1867": {"find": "(\bTanzunet\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware Tanzu Network| is preferred. -->"},
    "1868": {"find": "(\bTAP[\s\n]+GUI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Tanzu Application Platform GUI| is preferred. No |the| at the start. -->"},
    "1869": {"find": "(\bTAP[\s\n]+Repo[\s\n]+Bundle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |TAP repo bundle| is preferred. -->"},
    "1870": {"find": "(\bTAP[\s\n]+Repo[\s\n]+bundle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |TAP repo bundle| is preferred. -->"},
    "1871": {"find": "(\bTAP[\s\n]+UI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Tanzu Application Platform GUI| is preferred. No |the| at the start. -->"},
    "1872": {"find": "(\bTap\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Tanzu Application Platform| is preferred: we do not abbreviate it. -->"},
    "1873": {"find": "(\bTAP\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Tanzu Application Platform| is preferred. -->"},
    "1874": {"find": "(\bTAP\b[\s\n]+add-on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tanzu Application Platfrom has |components|, not |add-ons|, |plug-ins|, or |capabilities|. -->"},
    "1875": {"find": "(\bTAP\b[\s\n]+addon\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tanzu Application Platfrom has |components|, not |add-ons|, |plug-ins|, or |capabilities|. -->"},
    "1876": {"find": "(\bTAP\b[\s\n]+addons\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tanzu Application Platfrom has |components|, not |add-ons|, |plug-ins|, or |capabilities|. -->"},
    "1877": {"find": "(\bTAP\b[\s\n]+capabilities\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tanzu Application Platfrom has |components|, not |add-ons|, |plug-ins|, or |capabilities|. -->"},
    "1878": {"find": "(\bTAP\b[\s\n]+capability\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tanzu Application Platfrom has |components|, not |add-ons|, |plug-ins|, or |capabilities|. -->"},
    "1879": {"find": "(\bTAP\b[\s\n]+plug-in\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tanzu Application Platfrom has |components|, not |add-ons|, |plug-ins|, or |capabilities|. -->"},
    "1880": {"find": "(\bTAP\b[\s\n]+plug-ins\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tanzu Application Platfrom has |components|, not |add-ons|, |plug-ins|, or |capabilities|. -->"},
    "1881": {"find": "(\bTAP\b[\s\n]+plugin\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tanzu Application Platfrom has |components|, not |add-ons|, |plug-ins|, or |capabilities|. -->"},
    "1882": {"find": "(\bTAP\b[\s\n]+plugins\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tanzu Application Platfrom has |components|, not |add-ons|, |plug-ins|, or |capabilities|. -->"},
    "1883": {"find": "(\btar\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |TAR| is preferred. -->"},
    "1884": {"find": "(\bTasks\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |tasks| is preferred. -->"},
    "1885": {"find": "(\bterminal[\s\n]+emulator\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |shell| is preferred. -->"},
    "1886": {"find": "(\bterminate\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |exit the program|, |end a session|, |close|, or |stop| is preferred. -->"},
    "1887": {"find": "(\bTerminate\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Exit the program|, |End a session|, |Close|, or |Stop| is preferred. -->"},
    "1888": {"find": "(\bterminates\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |exit the program|, |end a session|, |close|, or |stop| is preferred. -->"},
    "1889": {"find": "(\bTerminates\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Exit the program|, |End a session|, |Close|, or |Stop| is preferred. -->"},
    "1890": {"find": "(\btext[\s\n]+area\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |field| is preferred. -->"},
    "1891": {"find": "(\btext[\s\n]+field\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |text box| is preferred. -->"},
    "1892": {"find": "(\btext[\s\n]+fields\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |text boxes| is preferred. -->"},
    "1893": {"find": "(\btextbox\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |field| is preferred. -->"},
    "1894": {"find": "(\bthat'll\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1895": {"find": "(\bThat'll\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1896": {"find": "(\bthat's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1897": {"find": "(\bThat's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1898": {"find": "(\bthat[\s\n]+are[\s\n]+in[\s\n]+effect\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "1899": {"find": "(\bthat[\s\n]+is[\s\n]+in[\s\n]+effect\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "1900": {"find": "(\bthat[\s\n]+know\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |can| or |detect| might be better here. -->"},
    "1901": {"find": "(\bthat[\s\n]+knows\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |can| or |detects| might be better here. -->"},
    "1902": {"find": "(\bthat[\s\n]+learn\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |detect| or |acquire| might be better here. -->"},
    "1903": {"find": "(\bthat[\s\n]+learns\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |detects| or |acquires| might be better here. -->"},
    "1904": {"find": "(\bthat[\s\n]+need\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |requires| might be better here. -->"},
    "1905": {"find": "(\bthat[\s\n]+needs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |requires| might be better here. -->"},
    "1906": {"find": "(\bthat[\s\n]+realize\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |detect| might be better here. -->"},
    "1907": {"find": "(\bthat[\s\n]+realizes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |detects| might be better here. -->"},
    "1908": {"find": "(\bthat[\s\n]+recognize\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |detect| might be better here. -->"},
    "1909": {"find": "(\bthat[\s\n]+recognizes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |detects| might be better here. -->"},
    "1910": {"find": "(\bthat[\s\n]+remember\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphising: |store|, |maintain|, |save|, or |retain| might be better here. -->"},
    "1911": {"find": "(\bthat[\s\n]+remembers\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphising: |store|, |maintain|, |save|, or |retain| might be better here. -->"},
    "1912": {"find": "(\bthat[\s\n]+see\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |detect| might be better here. -->"},
    "1913": {"find": "(\bthat[\s\n]+sees\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |detect| might be better here. -->"},
    "1914": {"find": "(\bthat[\s\n]+understand\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |interpret|, |process|, or |handle| might be better here. -->"},
    "1915": {"find": "(\bthat[\s\n]+understands\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing: |interpret|, |process|, or |handle| might be better here. -->"},
    "1916": {"find": "(\bthat[\s\n]+want\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing by writing that software |wants| anything. -->"},
    "1917": {"find": "(\bthat[\s\n]+wants\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid anthropomorphizing by writing that software |wants| anything. -->"},
    "1918": {"find": "(\bthe[\s\n]+(?!above|below|first|following|last|next|previous|same)[a-z-]*(?=[\s\n]+command\b)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Missing code tags? -->"},
    "1919": {"find": "(\bThe[\s\n]+(?!above|below|first|following|last|next|previous|same)[a-z-]*(?=[\s\n]+command\b)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Missing code tags? -->"},
    "1920": {"find": "(\bthe[\s\n]+[A-Za-z-]+[\s\n]+process\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid nominalization: |while deleting| is better than |during the deletion process|. -->"},
    "1921": {"find": "(\bThe[\s\n]+[A-Za-z-]+[\s\n]+process\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid nominalization: |while deleting| is better than |during the deletion process|. -->"},
    "1922": {"find": "(\bthe[\s\n]+ability[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |can| is shorter. -->"},
    "1923": {"find": "(\bThe[\s\n]+act[\s\n]+of\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "1924": {"find": "(\bthe[\s\n]+act[\s\n]+of\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "1925": {"find": "(\bthe[\s\n]+Apps[\s\n]+Manager\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Just |Apps Manager| is preferred -- there is no preceding |the|. -->"},
    "1926": {"find": "(\bthe[\s\n]+deploy\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |the deployment| is preferred. -->"},
    "1927": {"find": "(\bThe[\s\n]+deploy\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |The deployment| is preferred. -->"},
    "1928": {"find": "(\bthe[\s\n]+fact[\s\n]+that\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |because| might be better. -->"},
    "1929": {"find": "(\bthe[\s\n]+following[\s\n]+commands\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |these commands| is preferred -->"},
    "1930": {"find": "(\bthe[\s\n]+GUI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |UI| is preferred. -->"},
    "1931": {"find": "(\bThe[\s\n]+GUI\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |UI| is preferred. -->"},
    "1932": {"find": "(\bthe[\s\n]+install\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |the installation| is preferred. -->"},
    "1933": {"find": "(\bthe[\s\n]+machine\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |the local machine| is preferred. -->"},
    "1934": {"find": "(\bThe[\s\n]+manual\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- In preface information, if the document is delivered as a PDF file, replace with |book| or |guide|. -->"},
    "1935": {"find": "(\bthe[\s\n]+manual\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- In preface information, if the document is delivered as a PDF file, replace with |book| or |guide|. -->"},
    "1936": {"find": "(\bthe[\s\n]+Tanzu[\s\n]+Application[\s\n]+Platform[\s\n]+GUI\.(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Tanzu Application Platform GUI| is preferred. No |the| at the start -->"},
    "1937": {"find": "(\bthe[\s\n]+toggle\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |toggle|. Do not use |Option button|. You may use |radio button|; but, in general, try to avoid referring to the button and instead write |Click BUTTON-TEXT|. -->"},
    "1938": {"find": "(\bthere's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1939": {"find": "(\bThere's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1940": {"find": "(\bthey'd\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1941": {"find": "(\bThey'd\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1942": {"find": "(\bthey'll\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1943": {"find": "(\bThey'll\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1944": {"find": "(\bthey're\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1945": {"find": "(\bThey're\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1946": {"find": "(\bthey've\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1947": {"find": "(\bThey've\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1948": {"find": "(\bthey've\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1949": {"find": "(\bThey've\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "1950": {"find": "(\bthirty\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use numerals for numbers greater than nine. -->"},
    "1951": {"find": "(\bthis[\s\n]+document\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- We call our files |topics|, not |documents|. -->"},
    "1952": {"find": "(\bThis[\s\n]+document\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- We call our files |topics|, not |documents|. -->"},
    "1953": {"find": "(\bThis[\s\n]+manual\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- In preface information, if the document is delivered as a PDF file, replace with |book| or |guide|. -->"},
    "1954": {"find": "(\bthis[\s\n]+manual\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- In preface information, if the document is delivered as a PDF file, replace with |book| or |guide|. -->"},
    "1955": {"find": "(\bthrice\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |three times| is preferred. -->"},
    "1956": {"find": "(\bthrough\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a synonym for |finished| or |done|. Do not use when you mean |by using|. -->"},
    "1957": {"find": "(\bThrough\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use as a synonym for |Finished| or |Done|. Do not use when you mean |By using|. -->"},
    "1958": {"find": "(\bthus\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Re-write the sentence to drop |thus| or, if that is not possible, replace with |therefore|. -->"},
    "1959": {"find": "(\bThus\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Re-write the sentence to drop |Thus| or, if that is not possible, replace with |therefore|. -->"},
    "1960": {"find": "(\bTick\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- For check boxes, use |select| and |deselect| for single check boxes and |clear| for deselecting several check boxes at the same time. -->"},
    "1961": {"find": "(\btick\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- For check boxes, use |select| and |deselect| for single check boxes and |clear| for deselecting several check boxes at the same time. -->"},
    "1962": {"find": "(\btime-line\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |timeline| is preferred. -->"},
    "1963": {"find": "(\bTime-line\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Timeline| is preferred. -->"},
    "1964": {"find": "(\btime-lines\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |timelines| is preferred. -->"},
    "1965": {"find": "(\bTime-lines\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Timelines| is preferred. -->"},
    "1966": {"find": "(\btime-out\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |timeout| is preferred. -->"},
    "1967": {"find": "(\bTime-out\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Timeout| is preferred. -->"},
    "1968": {"find": "(\btime-zone\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Merriam-Webster says |time zone|. -->"},
    "1969": {"find": "(\bTime-zone\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Merriam-Webster says |Time zone|. -->"},
    "1970": {"find": "(\btime-zones\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Merriam-Webster says |time zones|. -->"},
    "1971": {"find": "(\bTime-zones\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Merriam-Webster says |Time zones|. -->"},
    "1972": {"find": "(\btime[\s\n]+line\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |timeline| is preferred. -->"},
    "1973": {"find": "(\bTime[\s\n]+line\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Timeline| is preferred. -->"},
    "1974": {"find": "(\btime[\s\n]+lines\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |timelines| is preferred. -->"},
    "1975": {"find": "(\bTime[\s\n]+lines\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Timelines| is preferred. -->"},
    "1976": {"find": "(\btime[\s\n]+out\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |timeout| is preferred, both as a noun and a verb. -->"},
    "1977": {"find": "(\bTime[\s\n]+out\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Timeout| is preferred, both as a noun and a verb. -->"},
    "1978": {"find": "(\btime[\s\n]+to[\s\n]+live[\s\n]+(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |TTL| after first use. -->"},
    "1979": {"find": "(\btimezone\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Merriam-Webster says |time zone|. -->"},
    "1980": {"find": "(\bTimezone\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Merriam-Webster says |Time zone|. -->"},
    "1981": {"find": "(\btimezones\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Merriam-Webster says |time zones|. -->"},
    "1982": {"find": "(\bTimezones\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Merriam-Webster says |Time zones|. -->"},
    "1983": {"find": "(\bTKG\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Tanzu Kubernetes Grid| is preferred. -->"},
    "1984": {"find": "(\bTKGm\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Tanzu Kubernetes Grid| is preferred. -->"},
    "1985": {"find": "(\bTKGs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |vSphere with Tanzu| is preferred. -->"},
    "1986": {"find": "(\bto[\s\n]+be[\s\n]+displayed\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |to appear| might be better. -->"},
    "1987": {"find": "(\bto[\s\n]+login\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use |login| (n) and |log in| (v). -->"},
    "1988": {"find": "(\bto[\s\n]+setup\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |set up| is the action. |setup| is a noun. -->"},
    "1989": {"find": "(\bTo[\s\n]+setup\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |set up| is the action. |setup| is a noun. -->"},
    "1990": {"find": "(\btool-bar\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |toolbar| is preferred. -->"},
    "1991": {"find": "(\bTool-bar\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Toolbar| is preferred. -->"},
    "1992": {"find": "(\btool-bars\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |toolbars| is preferred. -->"},
    "1993": {"find": "(\bTool-bars\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Toolbars| is preferred. -->"},
    "1994": {"find": "(\btool-box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |toolbox| is preferred. -->"},
    "1995": {"find": "(\bTool-box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Toolbox| is preferred. -->"},
    "1996": {"find": "(\btool-boxes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |toolboxes| is preferred. -->"},
    "1997": {"find": "(\bTool-boxes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Toolboxes| is preferred. -->"},
    "1998": {"find": "(\btool[\s\n]+bar\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |toolbar| is preferred. -->"},
    "1999": {"find": "(\bTool[\s\n]+bar\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Toolbar| is preferred. -->"},
    "2000": {"find": "(\btool[\s\n]+bars\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |toolbars| is preferred. -->"},
    "2001": {"find": "(\bTool[\s\n]+bars\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Toolbars| is preferred. -->"},
    "2002": {"find": "(\btool[\s\n]+box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |toolbox| is preferred. -->"},
    "2003": {"find": "(\bTool[\s\n]+box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Toolbox| is preferred. -->"},
    "2004": {"find": "(\btool[\s\n]+boxes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |toolboxes| is preferred. -->"},
    "2005": {"find": "(\bTool[\s\n]+boxes\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Toolboxes| is preferred. -->"},
    "2006": {"find": "(\bTraffic-controller\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Traffic Controller| is preferred. -->"},
    "2007": {"find": "(\bTraffic-Controller\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Traffic Controller| is preferred. -->"},
    "2008": {"find": "(\bTrafficController\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Traffic Controller| is preferred. -->"},
    "2009": {"find": "(\bTransmission[\s\n]+Control[\s\n]+Protocol\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |TCP| is preferred. -->"},
    "2010": {"find": "(\bTransport[\s\n]+layer[\s\n]+security(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |TLS| after the first use. -->"},
    "2011": {"find": "(\bTransport[\s\n]+Layer[\s\n]+Security(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |TLS| after the first use. -->"},
    "2012": {"find": "(\btransport[\s\n]+layer[\s\n]+security(?!\s\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Shorten to |TLS| after the first use. -->"},
    "2013": {"find": "(\bTriggerMesh[\s\n]+Sources[\s\n]+for[\s\n]+Amazon[\s\n]+Web[\s\n]+Services(?![\s\n]+\()(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |TriggerMesh SAWS| is the preferred abbreviation after first use. -->"},
    "2014": {"find": "(\btriple-parens[\s\n]+expression\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |triple-parentheses expression| is preferred. -->"},
    "2015": {"find": "(\btry[\s\n]+[a-z-]+ing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tell the reader what to do, not what to try. -->"},
    "2016": {"find": "(\bTry[\s\n]+[a-z-]+ing\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Tell the reader what to do, not what to try. -->"},
    "2017": {"find": "(\bturbolinux\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Turbolinux| is preferred. -->"},
    "2018": {"find": "(\bTurbolinux\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Turbolinux| is preferred. -->"},
    "2019": {"find": "(\bTurn[\s\n]+off\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |record| is preferred. -->"},
    "2020": {"find": "(\bturn[\s\n]+off\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |deactivate| is preferred. -->"},
    "2021": {"find": "(\bTurn[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |record| is preferred. -->"},
    "2022": {"find": "(\bturn[\s\n]+on\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |enable| is preferred. -->"},
    "2023": {"find": "(\btwenty\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use numerals for numbers greater than nine. -->"},
    "2024": {"find": "(\btwo[\s\n]+times\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |twice| is preferred. -->"},
    "2025": {"find": "(\btype:(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |run:| is preferred. -->"},
    "2026": {"find": "(\btype[\s\n]+the[\s\n]+following\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |To X, run:| and |X by running:| are preferred. -->"},
    "2027": {"find": "(\bUAA[\s\n]+Client\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |UAA Command Line Client (UAAC)| is preferred for use. |UAAC| thereafter. -->"},
    "2028": {"find": "(\bUAA[\s\n]+Command[\s\n]+Client\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |UAA Command Line Client (UAAC)| is preferred for use. |UAAC| thereafter. -->"},
    "2029": {"find": "(\bUAA[\s\n]+command[\s\n]+line\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |UAA Command Line Client (UAAC)| is preferred for use. |UAAC| thereafter. -->"},
    "2030": {"find": "(\buaac\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |UAAC| is preferred. -->"},
    "2031": {"find": "(\bun-check\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- For check boxes, use |select| and |deselect| for single check boxes and |clear| for deselecting several check boxes at the same time. -->"},
    "2032": {"find": "(\bUn-check\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- For check boxes, use |select| and |deselect| for single check boxes and |clear| for deselecting several check boxes at the same time. -->"},
    "2033": {"find": "(\bun-register\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- deregister -->"},
    "2034": {"find": "(\bun-tick\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- For check boxes, use |select| and |deselect| for single check boxes and |clear| for deselecting several check boxes at the same time. -->"},
    "2035": {"find": "(\buncheck\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- For check boxes, use |select| and |deselect| for single check boxes and |clear| for deselecting several check boxes at the same time. -->"},
    "2036": {"find": "(\bUncheck\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- For check boxes, use |select| and |deselect| for single check boxes and |clear| for deselecting several check boxes at the same time. -->"},
    "2037": {"find": "(\bUnderstanding\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If a procedural topic title, go with |How to...|. If a conceptual title, go with |About...| or |Overview of...| or nothing at all. -->"},
    "2038": {"find": "(\bunfortunately\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Remove. -->"},
    "2039": {"find": "(\bUnfortunately\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Remove. -->"},
    "2040": {"find": "(\bUniform[\s\n]+Resource[\s\n]+Locator\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |URL| is preferred. -->"},
    "2041": {"find": "(\bunix\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Unix| is preferred. -->"},
    "2042": {"find": "(\bUNIX\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Unix| is preferred. -->"},
    "2043": {"find": "(\bUnix\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |UNIX| is preferred. -->"},
    "2044": {"find": "(\bUnix\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |UNIX| is preferred. -->"},
    "2045": {"find": "(\bunregister\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |deregister| is preferred. -->"},
    "2046": {"find": "(\bunsecure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |not secure| is preferred. -->"},
    "2047": {"find": "(\bUnsecure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Not secure| is preferred. -->"},
    "2048": {"find": "(\buntick\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- For check boxes, use |select| and |deselect| for single check boxes and |clear| for deselecting several check boxes at the same time. -->"},
    "2049": {"find": "(\bupgradeable\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |upgradable| is preferred. -->"},
    "2050": {"find": "(\bupper[\s\n]+case\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |uppercase| is preferred. -->"},
    "2051": {"find": "(\bupscale\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |scale up| is preferred. -->"},
    "2052": {"find": "(\bUrl\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |URL| is preferred. -->"},
    "2053": {"find": "(\bURl\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |URL| is preferred. -->"},
    "2054": {"find": "(\burl\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |URL| is preferred. -->"},
    "2055": {"find": "(\bus\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Specify the party (VMware, Cloud Foundry, etc). -->"},
    "2056": {"find": "(\busage(?![\s\n]+data|[\s\n]+service)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |use| is preferred. -->"},
    "2057": {"find": "(\bUsage(?![\s\n]+data|[\s\n]+service)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Use| is preferred. -->"},
    "2058": {"find": "(\busage[\s\n]+data\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |consumption data| is preferred. -->"},
    "2059": {"find": "(\busage[\s\n]+service\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Usage service| is preferred. -->"},
    "2060": {"find": "(\bUsage[\s\n]+Service\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Usage service| is preferred. -->"},
    "2061": {"find": "(\buse[\s\n]+case\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Just |use| is probably better here; avoid the nounification of verbs. -->"},
    "2062": {"find": "(\buse[\s\n]+the[\s\n]+command[\s\n]+line\b(?![\s\n]+interface)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |command line interface| on first use. |CLI| thereafter. -->"},
    "2063": {"find": "(\buse[\s\n]+the[\s\n]+command\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |run| is preferred. -->"},
    "2064": {"find": "(\buser-name\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |user name| is preferred. -->"},
    "2065": {"find": "(\bUser-name\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |User name| is preferred. -->"},
    "2066": {"find": "(\buser-names\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |user names| is preferred. -->"},
    "2067": {"find": "(\bUser-names\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |User names| is preferred. -->"},
    "2068": {"find": "(\buser[\s\n]+friendly\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |user-friendly| is preferred. -->"},
    "2069": {"find": "(\bUser[\s\n]+friendly\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |User-friendly| is preferred. -->"},
    "2070": {"find": "(\buser[\s\n]+interface\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |UI| is preferred. -->"},
    "2071": {"find": "(\buser[\s\n]+name\/password[\s\n]+pair\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |user name-password pair| is preferred. -->"},
    "2072": {"find": "(\bUser[\s\n]+name\/password[\s\n]+pair\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |User name-password pair| is preferred. -->"},
    "2073": {"find": "(\buser[\s\n]+name\/password[\s\n]+pairs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |user name-password pairs| is preferred. -->"},
    "2074": {"find": "(\bUser[\s\n]+name\/password[\s\n]+pairs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |User name-password pairs| is preferred. -->"},
    "2075": {"find": "(\busername\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |user name| is preferred. -->"},
    "2076": {"find": "(\bUsername\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |User name| is preferred. -->"},
    "2077": {"find": "(\busernames\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |user names| is preferred. -->"},
    "2078": {"find": "(\bUsernames\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |User names| is preferred. -->"},
    "2079": {"find": "(\busing[\s\n]+the[\s\n]+command[\s\n]+line\b(?![\s\n]+interface)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |command line interface| on first use. |CLI| thereafter. -->"},
    "2080": {"find": "(\busing[\s\n]+the[\s\n]+command\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |running| is preferred. -->"},
    "2081": {"find": "(\butilisation\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- To |utilize| is to use an item beyond its intended purpose. Otherwise you simply |use| it. -->"},
    "2082": {"find": "(\bUtilisation\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- To |utilize| is to use an item beyond its intended purpose. Otherwise you simply |use| it. -->"},
    "2083": {"find": "(\butilise\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- To |utilize| is to use an item beyond its intended purpose. Otherwise you simply |use| it. -->"},
    "2084": {"find": "(\bUtilise\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- To |utilize| is to use an item beyond its intended purpose. Otherwise you simply |use| it. -->"},
    "2085": {"find": "(\butilization\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- To |utilize| is to use an item beyond its intended purpose. Otherwise you simply |use| it. -->"},
    "2086": {"find": "(\bUtilization\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- To |utilize| is to use an item beyond its intended purpose. Otherwise you simply |use| it. -->"},
    "2087": {"find": "(\butilize\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- To |utilize| is to use an item beyond its intended purpose. Otherwise you simply |use| it. -->"},
    "2088": {"find": "(\bUtilize\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- To |utilize| is to use an item beyond its intended purpose. Otherwise you simply |use| it. -->"},
    "2089": {"find": "(\buuid\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |UUID| is preferred. -->"},
    "2090": {"find": "(\bv[\s\n]+\d\.\d(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The preferred style for writing version numbers is |v#.#| or |v#.#.#|. -->"},
    "2091": {"find": "(\bVA\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |VA| to mean |virtual appliance|. Spell out fully as |virtual appliance|. If a menu item includes |VA|, match the item name as it appears in the interface. -->"},
    "2092": {"find": "(\bValidate[\s\n]+that\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Verify that| is plainer English. -->"},
    "2093": {"find": "(\bvalidate[\s\n]+that\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |verify that| is plainer English. -->"},
    "2094": {"find": "(\bVerify[\s\n]+if\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Verify that| is better. -->"},
    "2095": {"find": "(\bverify[\s\n]+if\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |verify that| is better. -->"},
    "2096": {"find": "(\bversion[\s\n]+[\d\.]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |v#| is the preferred style. -->"},
    "2097": {"find": "(\bVersion[\s\n]+[\d\.]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |v#| is the preferred style. -->"},
    "2098": {"find": "(\bversions[\s\n]+[\d\.]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |v#| is the preferred style. -->"},
    "2099": {"find": "(\bVersions[\s\n]+[\d\.]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |v#| is the preferred style. -->"},
    "2100": {"find": "(\bVersions[\s\n]+\<\= [\d\.]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |v#| is the preferred style. -->"},
    "2101": {"find": "(\bversions[\s\n]+\<\= [\d\.]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |v# or earlier| is the preferred style. -->"},
    "2102": {"find": "(\bVersions[\s\n]+\>\=[\s\n]+[\d\.]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |v#| is the preferred style. -->"},
    "2103": {"find": "(\bversions[\s\n]+\>\=[\s\n]+[\d\.]+(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |v# or earlier| is the preferred style. -->"},
    "2104": {"find": "(\bversus\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |compared to|, |and|, or |or| are preferred. |in contrast| might also work. -->"},
    "2105": {"find": "(\bVersus\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Compared to|, |and|, or |or| are preferred. |In contrast| might also work. -->"},
    "2106": {"find": "(\bvhost\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |virtual host| is preferred. -->"},
    "2107": {"find": "(\bVhost\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |virtual host| is preferred. -->"},
    "2108": {"find": "(\bvia\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |through|, |using| and |by means of| are preferred. -->"},
    "2109": {"find": "(\bvice[\s\n]+versa\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |and the reverse| or other wording is preferred. -->"},
    "2110": {"find": "(\bVice[\s\n]+versa\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |And the reverse| or other wording is preferred. -->"},
    "2111": {"find": "(\bvim\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The text editor is called |Vim|. -->"},
    "2112": {"find": "(\bVIM\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The text editor is called |Vim|. -->"},
    "2113": {"find": "(\bVirtual[\s\n]+Infrastructure\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |virtual infrastructure| is preferred as the generic term. -->"},
    "2114": {"find": "(\bVirtual[\s\n]+Machine[\s\n]+Metrics\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |BOSH health metrics| is preferred. -->"},
    "2115": {"find": "(\bvirtual[\s\n]+machine\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VM| is preferred. -->"},
    "2116": {"find": "(\bvirtue\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Re-word as plainer English. -->"},
    "2117": {"find": "(\bvm\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VM| is preferred. -->"},
    "2118": {"find": "(\bVm\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VM| is preferred. -->"},
    "2119": {"find": "(\bVMT[\s\n]+network(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware Tanzu Network| is preferred. -->"},
    "2120": {"find": "(\bVMT[\s\n]+Network(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware Tanzu Network| is preferred. -->"},
    "2121": {"find": "(\bVMTN(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware Tanzu Network| is preferred. -->"},
    "2122": {"find": "(\bVMware.s\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Never make VMware possessive. -->"},
    "2123": {"find": "(\bVmware.s\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Never make VMware possessive. -->"},
    "2124": {"find": "(\bVMware[\s\n]+Network(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware Tanzu Network| is preferred. -->"},
    "2125": {"find": "(\bVMware[\s\n]+network(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware Tanzu Network| is preferred. -->"},
    "2126": {"find": "(\bVMware[\s\n]+Tanzu[\s\n]+network(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware Tanzu Network| is preferred. -->"},
    "2127": {"find": "(\bVMWare\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware| is preferred. -->"},
    "2128": {"find": "(\bVmware\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware| is preferred. -->"},
    "2129": {"find": "(\bVmWare\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware| is preferred. -->"},
    "2130": {"find": "(\bvmware\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware| is preferred. -->"},
    "2131": {"find": "(\bVNIC\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |vNIC| is preferred. -->"},
    "2132": {"find": "(\bVoluminous\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Very long| and |Very large| are plainer alternatives. -->"},
    "2133": {"find": "(\bvoluminous\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |very long| and |very large| are plainer alternatives. -->"},
    "2134": {"find": "(\bVs[\s\n]+code\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The short form of Visual Studio Code is |VS Code|. -->"},
    "2135": {"find": "(\bVS[\s\n]+code\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The short form of Visual Studio Code is |VS Code|. -->"},
    "2136": {"find": "(\bvs[\s\n]+code\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The short form of Visual Studio Code is |VS Code|. -->"},
    "2137": {"find": "(\bvs[\s\n]+Code\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The short form of Visual Studio Code is |VS Code|. -->"},
    "2138": {"find": "(\bVs[\s\n]+Code\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The short form of Visual Studio Code is |VS Code|. -->"},
    "2139": {"find": "(\bvs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |compared to|, |and|, or |or| are preferred. If you must use this term, spell out |versus|. -->"},
    "2140": {"find": "(\bVs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Compared to|, |And|, or |Or| are preferred. If you must use this term, spell out |Versus|. -->"},
    "2141": {"find": "(\bVscode\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The short form of Visual Studio Code is |VS Code|. -->"},
    "2142": {"find": "(\bVScode\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The short form of Visual Studio Code is |VS Code|. -->"},
    "2143": {"find": "(\bwar[\s\n]+room\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |operations room| or |ops room| is preferred. -->"},
    "2144": {"find": "(\bWar[\s\n]+room\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Operations room| or |ops room| is preferred. -->"},
    "2145": {"find": "(\bWar[\s\n]+Room\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Operations Room| or |Ops Room| is preferred. -->"},
    "2146": {"find": "(\bwarning[\s\n]+box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dialog box| is preferred. -->"},
    "2147": {"find": "(\bWarning[\s\n]+box\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dialog box| is preferred. -->"},
    "2148": {"find": "(\bWarning[\s\n]+window\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dialog box| is preferred. -->"},
    "2149": {"find": "(\bwarning[\s\n]+window\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |dialog box| is preferred. -->"},
    "2150": {"find": "(\bWARNING\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Warning| is preferred. -->"},
    "2151": {"find": "(\bwe'd\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Specify the party (VMware, Cloud Foundry, etc) and avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2152": {"find": "(\bWe'd\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Specify the party (VMware, Cloud Foundry, etc) and avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2153": {"find": "(\bwe'll\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Specify the party (VMware, Cloud Foundry, etc) and avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2154": {"find": "(\bWe'll\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Specify the party (VMware, Cloud Foundry, etc) and avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2155": {"find": "(\bwe're\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Specify the party (VMware, Cloud Foundry, etc) and avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2156": {"find": "(\bWe're\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Specify the party (VMware, Cloud Foundry, etc) and avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2157": {"find": "(\bwe've\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Specify the party (VMware, Cloud Foundry, etc) and avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2158": {"find": "(\bWe've\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Specify the party (VMware, Cloud Foundry, etc) and avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2159": {"find": "(\bwe\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware|, the product name, or another term is preferred. Define who |we| is for the reader is preferred. -->"},
    "2160": {"find": "(\bWe\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |VMware|, the product name, or another term is preferred. Define who |We| is for the reader is preferred. -->"},
    "2161": {"find": "(\bweb-page\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |webpage| is preferred. -->"},
    "2162": {"find": "(\bWeb-page\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Webpage| is preferred. -->"},
    "2163": {"find": "(\bweb-pages\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |webpages| is preferred. -->"},
    "2164": {"find": "(\bWeb-pages\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Webpages| is preferred. -->"},
    "2165": {"find": "(\bweb-service\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |web service| is preferred. -->"},
    "2166": {"find": "(\bWeb-service\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Web service| is preferred. -->"},
    "2167": {"find": "(\bweb-services\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |web services| is preferred. -->"},
    "2168": {"find": "(\bWeb-services\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Web services| is preferred. -->"},
    "2169": {"find": "(\bweb-site\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |website| is preferred. -->"},
    "2170": {"find": "(\bWeb-site\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Website| is preferred. -->"},
    "2171": {"find": "(\bweb-sites\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |websites| is preferred. -->"},
    "2172": {"find": "(\bWeb-sites\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Websites| is preferred. -->"},
    "2173": {"find": "(\bweb[\s\n]+cam\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |webcam| is preferred. -->"},
    "2174": {"find": "(\bWeb[\s\n]+cam\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Webcam| is preferred. -->"},
    "2175": {"find": "(\bweb[\s\n]+page\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |webpage| is preferred. -->"},
    "2176": {"find": "(\bWeb[\s\n]+page\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Webpage| is preferred. -->"},
    "2177": {"find": "(\bweb[\s\n]+pages\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |webpages| is preferred. -->"},
    "2178": {"find": "(\bWeb[\s\n]+pages\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Webpages| is preferred. -->"},
    "2179": {"find": "(\bwebdav\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |WebDAV| is preferred. -->"},
    "2180": {"find": "(\bWebDav\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |WebDAV| is preferred. -->"},
    "2181": {"find": "(\bwebservice\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |web service| is preferred. -->"},
    "2182": {"find": "(\bWebservice\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Web service| is preferred. -->"},
    "2183": {"find": "(\bwebservices\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |web services| is preferred. -->"},
    "2184": {"find": "(\bWebservices\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Web services| is preferred. -->"},
    "2185": {"find": "(\bWebSockets\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |WebSocket| is preferred: there is a WebSocket protocol, not multiple WebSockets. -->"},
    "2186": {"find": "(\bwhat's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2187": {"find": "(\bWhat's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2188": {"find": "(\bwhen[\s\n]+satisfied\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "2189": {"find": "(\bWhen[\s\n]+satisfied\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "2190": {"find": "(\bwhen[\s\n]+you[\s\n]+are[\s\n]+satisfied\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "2191": {"find": "(\bWhen[\s\n]+you[\s\n]+are[\s\n]+satisfied\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant? -->"},
    "2192": {"find": "(\bWhere[\s\n]+[A-Z\-\_]+[\s\n]+is\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Place backticks or code tags around the placeholder. -->"},
    "2193": {"find": "(\bwhether[\s\n]+or[\s\n]+not\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |whether| is preferred in most cases. When the meaning is |regardless of whether| or |irrespective of|, follow with |or not| somewhere in the sentence. -->"},
    "2194": {"find": "(\bWhether[\s\n]+or[\s\n]+not\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Whether| is preferred in most cases. When the meaning is |regardless of whether| or |irrespective of|, follow with |or not| somewhere in the sentence. -->"},
    "2195": {"find": "(\bwhile(?=[\s\n]+there)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |while| as a synonym for |although| or |whereas|. -->"},
    "2196": {"find": "(\bWhile(?=[\s\n]+there)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use |While| as a synonym for |Although| or |Whereas|. -->"},
    "2197": {"find": "(\bwhile[\s\n]+concurrently\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant use of |concurrently|? -->"},
    "2198": {"find": "(\bwhile[\s\n]+simultaneously\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Redundant use of |simultaneously|? -->"},
    "2199": {"find": "(\bwhite-list\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred noun: |allowlist|. Other alternatives: |safelist|, |acceptlist|, |approved list|. Preferred verb: |allow|. Other alternative: |approve|. -->"},
    "2200": {"find": "(\bWhite-list\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred noun: |Allowlist|. Other alternatives: |Safelist|, |Acceptlist|, |Approved list|. Preferred verb: |Allow|. Other alternative: |Approve|. -->"},
    "2201": {"find": "(\bwhite-paper\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |white paper| is preferred. -->"},
    "2202": {"find": "(\bWhite-paper\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |White paper| is preferred. -->"},
    "2203": {"find": "(\bwhite[\s\n]+hat\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |ethical| is preferred. -->"},
    "2204": {"find": "(\bWhite[\s\n]+hat\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Ethical| is preferred. -->"},
    "2205": {"find": "(\bWhite[\s\n]+Hat\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Ethical| is preferred. -->"},
    "2206": {"find": "(\bwhite[\s\n]+list\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred noun: |allowlist|. Other alternatives: |safelist|, |acceptlist|, |approved list|. Preferred verb: |allow|. Other alternative: |approve|. -->"},
    "2207": {"find": "(\bWhite[\s\n]+list\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred noun: |Allowlist|. Other alternatives: |Safelist|, |Acceptlist|, |Approved list|. Preferred verb: |Allow|. Other alternative: |Approve|. -->"},
    "2208": {"find": "(\bwhite[\s\n]+listed\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred noun: |allowlist|. Other alternatives: |safelist|, |acceptlist|, |approved list|. Preferred verb: |allow|. Other alternative: |approve|. -->"},
    "2209": {"find": "(\bWhite[\s\n]+listed\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred noun: |allowlist|. Other alternatives: |safelist|, |acceptlist|, |approved list|. Preferred verb: |allow|. Other alternative: |approve|. -->"},
    "2210": {"find": "(\bwhitelist\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred noun: |allowlist|. Other alternatives: |safelist|, |acceptlist|, |approved list|. Preferred verb: |allow|. Other alternative: |approve|. -->"},
    "2211": {"find": "(\bWhitelist\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred noun: |allowlist|. Other alternatives: |safelist|, |acceptlist|, |approved list|. Preferred verb: |allow|. Other alternative: |approve|. -->"},
    "2212": {"find": "(\bwhitelisted\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred noun: |allowlist|. Other alternatives: |safelist|, |acceptlist|, |approved list|. Preferred verb: |allow|. Other alternative: |approve|. -->"},
    "2213": {"find": "(\bWhitelisted\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Preferred noun: |allowlist|. Other alternatives: |safelist|, |acceptlist|, |approved list|. Preferred verb: |allow|. Other alternative: |approve|. -->"},
    "2214": {"find": "(\bwhitepaper\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |white paper| is preferred. -->"},
    "2215": {"find": "(\bWhitepaper\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |White paper| is preferred. -->"},
    "2216": {"find": "(\bwho'll\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2217": {"find": "(\bwho's\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2218": {"find": "(\bwild-card\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |wildcard| is preferred. -->"},
    "2219": {"find": "(\bWild-card\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Wildcard| is preferred. -->"},
    "2220": {"find": "(\bwild-cards\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |wildcards| is preferred. -->"},
    "2221": {"find": "(\bWild-cards\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Wildcards| is preferred. -->"},
    "2222": {"find": "(\bwild[\s\n]+card\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |wildcard| is preferred. -->"},
    "2223": {"find": "(\bWild[\s\n]+card\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Wildcard| is preferred. -->"},
    "2224": {"find": "(\bwild[\s\n]+cards\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |wildcards| is preferred. -->"},
    "2225": {"find": "(\bWild[\s\n]+cards\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Wildcards| is preferred. -->"},
    "2226": {"find": "(\bwill\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid |will|: present tense is preferred. -->"},
    "2227": {"find": "(\bwill\b[^\.\n]+\s\bfuture\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- If writing about an upcoming change, only say that it is |planned| for a future release; do not promise it. -->"},
    "2228": {"find": "(\bWire\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |sync| is preferred. -->"},
    "2229": {"find": "(\bwire\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |sync| is preferred. -->"},
    "2230": {"find": "(\bWiring\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |sync| is preferred. -->"},
    "2231": {"find": "(\bwiring\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |sync| is preferred. -->"},
    "2232": {"find": "(\bwish\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |want| is preferred. -->"},
    "2233": {"find": "(\bWish\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Want| is preferred. -->"},
    "2234": {"find": "(\bwon't\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid future tense: the present tense |do not| is better. -->"},
    "2235": {"find": "(\bwork-around\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |work around| as a verb. |workaround| as a noun. -->"},
    "2236": {"find": "(\bWork-around\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Work around| as a verb. |Workaround| as a noun. -->"},
    "2237": {"find": "(\bwork-group\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |workgroup| is preferred. -->"},
    "2238": {"find": "(\bWork-group\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Workgroup| is preferred. -->"},
    "2239": {"find": "(\bwork-groups\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |workgroups| is preferred. -->"},
    "2240": {"find": "(\bWork-groups\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Workgroups| is preferred. -->"},
    "2241": {"find": "(\bwork[\s\n]+group\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |workgroup| is preferred. -->"},
    "2242": {"find": "(\bWork[\s\n]+group\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Workgroup| is preferred. -->"},
    "2243": {"find": "(\bwork[\s\n]+groups\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |workgroups| is preferred. -->"},
    "2244": {"find": "(\bWork[\s\n]+groups\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Workgroups| is preferred. -->"},
    "2245": {"find": "(\bworld[\s\n]+wide[\s\n]+web\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |World Wide Web| is preferred. Do not use |WWW|. -->"},
    "2246": {"find": "(\bWorld[\s\n]+wide[\s\n]+web\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |World Wide Web| is preferred. Do not use |WWW|. -->"},
    "2247": {"find": "(\bwould\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Re-phrase for present tense if possible. -->"},
    "2248": {"find": "(\bwouldn't\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Re-phrase for present tense if possible. -->"},
    "2249": {"find": "(\bwrite[\s\n]+down\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |record| is preferred. -->"},
    "2250": {"find": "(\bWWW\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |World Wide Web| is preferred. -->"},
    "2251": {"find": "(\bx86-processor\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |x86 processor| is preferred. -->"},
    "2252": {"find": "(\bx86[\s\n]+based[\s\n]+system\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |x86-based system| is preferred. -->"},
    "2253": {"find": "(\bX86[\s\n]+based[\s\n]+system\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |x86-based system| is preferred. -->"},
    "2254": {"find": "(\bx86[\s\n]+based[\s\n]+systems\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |x86-based system| is preferred. -->"},
    "2255": {"find": "(\bX86[\s\n]+based[\s\n]+systems\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |x86-based system| is preferred. -->"},
    "2256": {"find": "(\by'all\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2257": {"find": "(\bY'all\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2258": {"find": "(\bYaml\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |YAML| is preferred. -->"},
    "2259": {"find": "(\bYML[\s\n]+file\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |YAML file| is preferred. -->"},
    "2260": {"find": "(\byou'd\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2261": {"find": "(\bYou'd\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2262": {"find": "(\byou'll\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2263": {"find": "(\bYou'll\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Avoid a contraction if it is too colloquial or awkward or uncommonly used. -->"},
    "2264": {"find": "(\byou[\s\n]+can[\s\n]+run\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Maybe replace with just |run|. -->"},
    "2265": {"find": "(\byou[\s\n]+choose[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider if |choose| is redundant. -->"},
    "2266": {"find": "(\byou[\s\n]+might[\s\n]+want\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Re-phrase as a command, if possible. If not, replace with |VMware recommends|. -->"},
    "2267": {"find": "(\byou[\s\n]+need[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider replacing with just |To|. -->"},
    "2268": {"find": "(\bYou[\s\n]+need[\s\n]+to\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Consider replacing with just |To|. -->"},
    "2269": {"find": "(\byour[\s\n]+machine\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |your local machine| is preferred. -->"},
    "2270": {"find": "(\byoutube\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The brand name is |YouTube|. -->"},
    "2271": {"find": "(\bYoutube\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The brand name is |YouTube|. -->"},
    "2272": {"find": "(\bzip[\s\n]+drive\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Zip drive| is preferred. -->"},
    "2273": {"find": "(\bZip[\s\n]+drive\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Zip drive| is preferred. -->"},
    "2274": {"find": "(\bzip[\s\n]+drives\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Zip drives| is preferred. -->"},
    "2275": {"find": "(\bZip[\s\n]+drives\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Zip drives| is preferred. -->"},
    "2276": {"find": "(\d.[\s\n]Finally(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Remove |Finally| at the beginning of a task step. -->"},
    "2277": {"find": "(\d.[\s\n]First(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Remove |First| at the beginning of a task step. -->"},
    "2278": {"find": "(\d.[\s\n]Next(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Remove |Next| at the beginning of a task step. -->"},
    "2279": {"find": "(\d.[\s\n]Now(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Remove |Now| at the beginning of a task step. -->"},
    "2280": {"find": "(\d.[\s\n]Then(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Remove |Then| at the beginning of a task step. -->"},
    "2281": {"find": "(\d[\s\n]+and[\s\n]+greater\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |# and later| is preferred. -->"},
    "2282": {"find": "(\d[\s\n]+and[\s\n]+higher\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |# and later| is preferred. -->"},
    "2283": {"find": "(\d[\s\n]+and[\s\n]+lower\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |# and earlier| is preferred. -->"},
    "2284": {"find": "(\d[\s\n]+bit\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Missing the dash: 128-bit is grammatically correct; 128 bit is not. -->"},
    "2285": {"find": "(\d[\s\n]+CPUs\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |&nbsp;CPUs| is preferred. -->"},
    "2286": {"find": "(\d[\s\n]+GB\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |&nbsp;GB| is preferred. -->"},
    "2287": {"find": "(\d[\s\n]+KB\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |&nbsp;KB| is preferred. -->"},
    "2288": {"find": "(\d[\s\n]+MB\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |&nbsp;MB| is preferred. -->"},
    "2289": {"find": "(\d[\s\n]+or[\s\n]+greater\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |# or later| is preferred. -->"},
    "2290": {"find": "(\d[\s\n]+or[\s\n]+higher\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |# or later| is preferred. -->"},
    "2291": {"find": "(\d[\s\n]+or[\s\n]+lower\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |# or earlier| is preferred. -->"},
    "2292": {"find": "(\d\.\*(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |v1.2.x| is preferred for describing multiple patches for a given minor. -->"},
    "2293": {"find": "(\d&nbsp;bit\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Missing the dash: 128-bit is grammatically correct; 128 bit is not. -->"},
    "2294": {"find": "(\d+(st|nd|rd|th|)[\s\n]+April\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The date format is |MONTH DD, YYYY| -->"},
    "2295": {"find": "(\d+(st|nd|rd|th|)[\s\n]+August\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The date format is |MONTH DD, YYYY| -->"},
    "2296": {"find": "(\d+(st|nd|rd|th|)[\s\n]+December\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The date format is |MONTH DD, YYYY| -->"},
    "2297": {"find": "(\d+(st|nd|rd|th|)[\s\n]+February\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The date format is |MONTH DD, YYYY| -->"},
    "2298": {"find": "(\d+(st|nd|rd|th|)[\s\n]+January\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The date format is |MONTH DD, YYYY| -->"},
    "2299": {"find": "(\d+(st|nd|rd|th|)[\s\n]+July\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The date format is |MONTH DD, YYYY| -->"},
    "2300": {"find": "(\d+(st|nd|rd|th|)[\s\n]+June\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The date format is |MONTH DD, YYYY| -->"},
    "2301": {"find": "(\d+(st|nd|rd|th|)[\s\n]+March\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The date format is |MONTH DD, YYYY| -->"},
    "2302": {"find": "(\d+(st|nd|rd|th|)[\s\n]+May\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The date format is |MONTH DD, YYYY| -->"},
    "2303": {"find": "(\d+(st|nd|rd|th|)[\s\n]+November\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The date format is |MONTH DD, YYYY| -->"},
    "2304": {"find": "(\d+(st|nd|rd|th|)[\s\n]+October\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The date format is |MONTH DD, YYYY| -->"},
    "2305": {"find": "(\d+(st|nd|rd|th|)[\s\n]+September\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- The date format is |MONTH DD, YYYY| -->"},
    "2306": {"find": "(\dGB\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |&nbsp;GB| is preferred. -->"},
    "2307": {"find": "(\dKB\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |&nbsp;KB| is preferred. -->"},
    "2308": {"find": "(\s'[^'\n]+'(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Double quotation marks are preferred in US English. -->"},
    "2309": {"find": "(\w.*\n+#[^#](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Only the topic title should be header level 1. -->"},
    "2310": {"find": "(#[\s\n]+Prerequisites[\s\n]+[-\*+](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Add a stem sentence: |To install x you must have installed:| -->"},
    "2311": {"find": "(#[\s\n]+Requirements[\s\n]+[-\*+](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Add a stem sentence: |To install x you must have installed:| -->"},
    "2312": {"find": "(^(?!\n)[\*\+\-]\s[A-Z-]{2,}(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Enclose placeholders in code tags. -->"},
    "2313": {"find": "(^(?!\n)\*\s(?!(\*\*|\<strong|\<b))[^:`\n]*:(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Embolden run-in headings. -->"},
    "2314": {"find": "(^(?!\n|#).*\bCloud[\s\n]+Controller[\s\n]+Database\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |Cloud Controller database| is preferred. -->"},
    "2315": {"find": "(^[^\n]\s*\>\*\*(Caution:|Important:|Note:)\*\*.*\n[^\n\>]\s*[^\>].*(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Start every line in a note with |>|. -->"},
    "2316": {"find": "(^\*\s[^\*][^#]*###\s(Resolved[\s\n]+Issues|Known[\s\n]+Issues|Features)(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- In release notes, each feature, KI, and resolved issue needs a run-in heading. -->"},
    "2317": {"find": "(^\s*[\-\*\+].*(,|;|also|and|however|or|too|with)\s*\n{2,}(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Make each bullet independent. Do not use link words such as “and” or “or”, or commas or semi-colons at the end of a bullet. -->"},
    "2318": {"find": "(^\s*\n([^\-\*\+\s].+\n){1,}[\-\*\+](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Insert a newline above the bullet list. -->"},
    "2319": {"find": "(^\s*`.{81,}`\.(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Maybe delete the period -- it probably looks odd on the page after this code. -->"},
    "2320": {"find": "(^#\s*[A-Za-z-\s]+[&'\*@\\^$!\(\)%\|#/~](?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Do not use special characters in topic titles. They can cause exports and localization packaging to fail. -->"},
    "2321": {"find": "(^##+.*(?=\n[^\n\s])(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- A header must have 1 newline beneath it and 0 newlines within it. -->"},
    "2322": {"find": "(^##+[^\n]*\n+[^\n]*[^:]\n\n+(?=\s*(\<ol\>|\d\.\s))(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- A procedure requires a stem ending with a colon, as in |To do x:|. -->"},
    "2323": {"find": "(^Note\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Format the note properly. -->"},
    "2324": {"find": "(^Release[\s\n]+Date:(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |**Release Date:**| is house style. -->"},
    "2325": {"find": "(^Release[\s\n]+date:(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- |**Release Date:**| is house style. -->"},
    "2326": {"find": "(<code>[^\w]<\/code>[\s\n]+character\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Write the word for the special character so that screen readers can read it. -->"},
    "2327": {"find": "(<code>[^\w]<\/code>[\s\n]+characters\b(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Write the word for the special character so that screen readers can read it. -->"},
    "2328": {"find": "(<p[\s\n]+class=.note.>(?!([\s\n]*<strong>Note:<\/strong>\s([A-Z]|<)))(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Format the note properly -- https://docs-wiki.tas.vmware.com/wiki/style/html-classes.html#note-class -->"},
    "2329": {"find": "(<p[\s\n]+class=.warning>(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Format the note properly -- https://docs-wiki.tas.vmware.com/wiki/style/html-classes.html#note-class -->"},
    "2330": {"find": "(<td[^\>]*>\s*-\s*\<\/td\>(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use n/a, in italics, to mark an empty table cell. -->"},
    "2331": {"find": "(<td[^\>]*>\s*–\s*\<\/td\>(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use n/a, in italics, to mark an empty table cell. -->"},
    "2332": {"find": "(<td[^\>]*>\s*—\s*\<\/td\>(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use n/a, in italics, to mark an empty table cell. -->"},
    "2333": {"find": "(<td[^\>]*>\s*\(none\)\s*\<\/td\>(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use n/a, in italics, to mark an empty table cell. -->"},
    "2334": {"find": "(<td[^\>]*>\s*&mdash;\s*\<\/td\>(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use n/a, in italics, to mark an empty table cell. -->"},
    "2335": {"find": "(<td[^\>]*>\s*&ndash;\s*\<\/td\>(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use n/a, in italics, to mark an empty table cell. -->"},
    "2336": {"find": "(<td[^\>]*>\s*n\/a\s*\<\/td\>(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use n/a, in italics, to mark an empty table cell. -->"},
    "2337": {"find": "(<td[^\>]*>\s*N\/A\s*\<\/td\>(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use n/a, in italics, to mark an empty table cell. -->"},
    "2338": {"find": "(<td[^\>]*>\s*NA\s*\<\/td\>(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use n/a, in italics, to mark an empty table cell. -->"},
    "2339": {"find": "(<td[^\>]*>\s*none\s*\<\/td\>(?![^`]*`[\s\.,:]|[^`]*```\s|[^<]*<\/code\>|[^\*:]*\*\*[\s\n-\.,]|[^!]*[^\)]\s-->|[^\{]*\}\s-->|[^\[]*\]|\S*\)|[^\.\s]*\.png|[^\(]*\)|\S*\>))", "replace": "$1<!-- Use n/a, in italics, to mark an empty table cell. -->"},

    // Delete duplicate comments.

    "2343": {"find": "(<!-- .* -->)\\1", "replace": "$1"}
    },
    "replacerules.rulesets": {
        "Style Checker": {
            "rules": [
            "6",



            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",



            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159",
            "160",
            "161",
            "162",
            "163",
            "164",
            "165",
            "166",
            "167",
            "168",
            "169",
            "170",
            "171",
            "172",
            "173",
            "174",
            "175",
            "176",
            "177",
            "178",
            "179",
            "180",
            "181",
            "182",
            "183",
            "184",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "243",
            "244",
            "245",
            "246",
            "247",
            "248",
            "249",
            "250",
            "251",
            "252",
            "253",
            "254",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "328",
            "329",
            "330",
            "331",
            "332",
            "333",
            "334",
            "335",
            "336",
            "337",
            "338",
            "339",
            "340",
            "341",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "388",
            "389",
            "390",
            "391",
            "392",
            "393",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "536",
            "537",
            "538",
            "539",
            "540",
            "541",
            "542",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "549",
            "550",
            "551",
            "552",
            "553",
            "554",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "573",
            "574",
            "575",
            "576",
            "577",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "617",
            "618",
            "619",
            "620",
            "621",
            "622",
            "623",
            "624",
            "625",
            "626",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "642",
            "643",
            "644",
            "645",
            "646",
            "647",
            "648",
            "649",
            "650",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "683",
            "684",
            "685",
            "686",
            "687",
            "688",
            "689",
            "690",
            "691",
            "692",
            "693",
            "694",
            "695",
            "696",
            "697",
            "698",
            "699",
            "700",
            "701",
            "702",
            "703",
            "704",
            "705",
            "706",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "752",
            "753",
            "754",
            "755",
            "756",
            "757",
            "758",
            "759",
            "760",
            "761",
            "762",
            "763",
            "764",
            "765",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "816",
            "817",
            "818",
            "819",
            "820",
            "821",
            "822",
            "823",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "832",
            "833",
            "834",
            "835",
            "836",
            "837",
            "838",
            "839",
            "840",
            "841",
            "842",
            "843",
            "844",
            "845",
            "846",
            "847",
            "848",
            "849",
            "850",
            "851",
            "852",
            "853",
            "854",
            "855",
            "856",
            "857",
            "858",
            "859",
            "860",
            "861",
            "862",
            "863",
            "864",
            "865",
            "866",
            "867",
            "868",
            "869",
            "870",
            "871",
            "872",
            "873",
            "874",
            "875",
            "876",
            "877",
            "878",
            "879",
            "880",
            "881",
            "882",
            "883",
            "884",
            "885",
            "886",
            "887",
            "888",
            "889",
            "890",
            "891",
            "892",
            "893",
            "894",
            "895",
            "896",
            "897",
            "898",
            "899",
            "900",
            "901",
            "902",
            "903",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "910",
            "911",
            "912",
            "913",
            "914",
            "915",
            "916",
            "917",
            "918",
            "919",
            "920",
            "921",
            "922",
            "923",
            "924",
            "925",
            "926",
            "927",
            "928",
            "929",
            "930",
            "931",
            "932",
            "933",
            "934",
            "935",
            "936",
            "937",
            "938",
            "939",
            "940",
            "941",
            "942",
            "943",
            "944",
            "945",
            "946",
            "947",
            "948",
            "949",
            "950",
            "951",
            "952",
            "953",
            "954",
            "955",
            "956",
            "957",
            "958",
            "959",
            "960",
            "961",
            "962",
            "963",
            "964",
            "965",
            "966",
            "967",
            "968",
            "969",
            "970",
            "971",
            "972",
            "973",
            "974",
            "975",
            "976",
            "977",
            "978",
            "979",
            "980",
            "981",
            "982",
            "983",
            "984",
            "985",
            "986",
            "987",
            "988",
            "989",
            "990",
            "991",
            "992",
            "993",
            "994",
            "995",
            "996",
            "997",
            "998",
            "999",
            "1000",
            "1001",
            "1002",
            "1003",
            "1004",
            "1005",
            "1006",
            "1007",
            "1008",
            "1009",
            "1010",
            "1011",
            "1012",
            "1013",
            "1014",
            "1015",
            "1016",
            "1017",
            "1018",
            "1019",
            "1020",
            "1021",
            "1022",
            "1023",
            "1024",
            "1025",
            "1026",
            "1027",
            "1028",
            "1029",
            "1030",
            "1031",
            "1032",
            "1033",
            "1034",
            "1035",
            "1036",
            "1037",
            "1038",
            "1039",
            "1040",
            "1041",
            "1042",
            "1043",
            "1044",
            "1045",
            "1046",
            "1047",
            "1048",
            "1049",
            "1050",
            "1051",
            "1052",
            "1053",
            "1054",
            "1055",
            "1056",
            "1057",
            "1058",
            "1059",
            "1060",
            "1061",
            "1062",
            "1063",
            "1064",
            "1065",
            "1066",
            "1067",
            "1068",
            "1069",
            "1070",
            "1071",
            "1072",
            "1073",
            "1074",
            "1075",
            "1076",
            "1077",
            "1078",
            "1079",
            "1080",
            "1081",
            "1082",
            "1083",
            "1084",
            "1085",
            "1086",
            "1087",
            "1088",
            "1089",
            "1090",
            "1091",
            "1092",
            "1093",
            "1094",
            "1095",
            "1096",
            "1097",
            "1098",
            "1099",
            "1100",
            "1101",
            "1102",
            "1103",
            "1104",
            "1105",
            "1106",
            "1107",
            "1108",
            "1109",
            "1110",
            "1111",
            "1112",
            "1113",
            "1114",
            "1115",
            "1116",
            "1117",
            "1118",
            "1119",
            "1120",
            "1121",
            "1122",
            "1123",
            "1124",
            "1125",
            "1126",
            "1127",
            "1128",
            "1129",
            "1130",
            "1131",
            "1132",
            "1133",
            "1134",
            "1135",
            "1136",
            "1137",
            "1138",
            "1139",
            "1140",
            "1141",
            "1142",
            "1143",
            "1144",
            "1145",
            "1146",
            "1147",
            "1148",
            "1149",
            "1150",
            "1151",
            "1152",
            "1153",
            "1154",
            "1155",
            "1156",
            "1157",
            "1158",
            "1159",
            "1160",
            "1161",
            "1162",
            "1163",
            "1164",
            "1165",
            "1166",
            "1167",
            "1168",
            "1169",
            "1170",
            "1171",
            "1172",
            "1173",
            "1174",
            "1175",
            "1176",
            "1177",
            "1178",
            "1179",
            "1180",
            "1181",
            "1182",
            "1183",
            "1184",
            "1185",
            "1186",
            "1187",
            "1188",
            "1189",
            "1190",
            "1191",
            "1192",
            "1193",
            "1194",
            "1195",
            "1196",
            "1197",
            "1198",
            "1199",
            "1200",
            "1201",
            "1202",
            "1203",
            "1204",
            "1205",
            "1206",
            "1207",
            "1208",
            "1209",
            "1210",
            "1211",
            "1212",
            "1213",
            "1214",
            "1215",
            "1216",
            "1217",
            "1218",
            "1219",
            "1220",
            "1221",
            "1222",
            "1223",
            "1224",
            "1225",
            "1226",
            "1227",
            "1228",
            "1229",
            "1230",
            "1231",
            "1232",
            "1233",
            "1234",
            "1235",
            "1236",
            "1237",
            "1238",
            "1239",
            "1240",
            "1241",
            "1242",
            "1243",
            "1244",
            "1245",
            "1246",
            "1247",
            "1248",
            "1249",
            "1250",
            "1251",
            "1252",
            "1253",
            "1254",
            "1255",
            "1256",
            "1257",
            "1258",
            "1259",
            "1260",
            "1261",
            "1262",
            "1263",
            "1264",
            "1265",
            "1266",
            "1267",
            "1268",
            "1269",
            "1270",
            "1271",
            "1272",
            "1273",
            "1274",
            "1275",
            "1276",
            "1277",
            "1278",
            "1279",
            "1280",
            "1281",
            "1282",
            "1283",
            "1284",
            "1285",
            "1286",
            "1287",
            "1288",
            "1289",
            "1290",
            "1291",
            "1292",
            "1293",
            "1294",
            "1295",
            "1296",
            "1297",
            "1298",
            "1299",
            "1300",
            "1301",
            "1302",
            "1303",
            "1304",
            "1305",
            "1306",
            "1307",
            "1308",
            "1309",
            "1310",
            "1311",
            "1312",
            "1313",
            "1314",
            "1315",
            "1316",
            "1317",
            "1318",
            "1319",
            "1320",
            "1321",
            "1322",
            "1323",
            "1324",
            "1325",
            "1326",
            "1327",
            "1328",
            "1329",
            "1330",
            "1331",
            "1332",
            "1333",
            "1334",
            "1335",
            "1336",
            "1337",
            "1338",
            "1339",
            "1340",
            "1341",
            "1342",
            "1343",
            "1344",
            "1345",
            "1346",
            "1347",
            "1348",
            "1349",
            "1350",
            "1351",
            "1352",
            "1353",
            "1354",
            "1355",
            "1356",
            "1357",
            "1358",
            "1359",
            "1360",
            "1361",
            "1362",
            "1363",
            "1364",
            "1365",
            "1366",
            "1367",
            "1368",
            "1369",
            "1370",
            "1371",
            "1372",
            "1373",
            "1374",
            "1375",
            "1376",
            "1377",
            "1378",
            "1379",
            "1380",
            "1381",
            "1382",
            "1383",
            "1384",
            "1385",
            "1386",
            "1387",
            "1388",
            "1389",
            "1390",
            "1391",
            "1392",
            "1393",
            "1394",
            "1395",
            "1396",
            "1397",
            "1398",
            "1399",
            "1400",
            "1401",
            "1402",
            "1403",
            "1404",
            "1405",
            "1406",
            "1407",
            "1408",
            "1409",
            "1410",
            "1411",
            "1412",
            "1413",
            "1414",
            "1415",
            "1416",
            "1417",
            "1418",
            "1419",
            "1420",
            "1421",
            "1422",
            "1423",
            "1424",
            "1425",
            "1426",
            "1427",
            "1428",
            "1429",
            "1430",
            "1431",
            "1432",
            "1433",
            "1434",
            "1435",
            "1436",
            "1437",
            "1438",
            "1439",
            "1440",
            "1441",
            "1442",
            "1443",
            "1444",
            "1445",
            "1446",
            "1447",
            "1448",
            "1449",
            "1450",
            "1451",
            "1452",
            "1453",
            "1454",
            "1455",
            "1456",
            "1457",
            "1458",
            "1459",
            "1460",
            "1461",
            "1462",
            "1463",
            "1464",
            "1465",
            "1466",
            "1467",
            "1468",
            "1469",
            "1470",
            "1471",
            "1472",
            "1473",
            "1474",
            "1475",
            "1476",
            "1477",
            "1478",
            "1479",
            "1480",
            "1481",
            "1482",
            "1483",
            "1484",
            "1485",
            "1486",
            "1487",
            "1488",
            "1489",
            "1490",
            "1491",
            "1492",
            "1493",
            "1494",
            "1495",
            "1496",
            "1497",
            "1498",
            "1499",
            "1500",
            "1501",
            "1502",
            "1503",
            "1504",
            "1505",
            "1506",
            "1507",
            "1508",
            "1509",
            "1510",
            "1511",
            "1512",
            "1513",
            "1514",
            "1515",
            "1516",
            "1517",
            "1518",
            "1519",
            "1520",
            "1521",
            "1522",
            "1523",
            "1524",
            "1525",
            "1526",
            "1527",
            "1528",
            "1529",
            "1530",
            "1531",
            "1532",
            "1533",
            "1534",
            "1535",
            "1536",
            "1537",
            "1538",
            "1539",
            "1540",
            "1541",
            "1542",
            "1543",
            "1544",
            "1545",
            "1546",
            "1547",
            "1548",
            "1549",
            "1550",
            "1551",
            "1552",
            "1553",
            "1554",
            "1555",
            "1556",
            "1557",
            "1558",
            "1559",
            "1560",
            "1561",
            "1562",
            "1563",
            "1564",
            "1565",
            "1566",
            "1567",
            "1568",
            "1569",
            "1570",
            "1571",
            "1572",
            "1573",
            "1574",
            "1575",
            "1576",
            "1577",
            "1578",
            "1579",
            "1580",
            "1581",
            "1582",
            "1583",
            "1584",
            "1585",
            "1586",
            "1587",
            "1588",
            "1589",
            "1590",
            "1591",
            "1592",
            "1593",
            "1594",
            "1595",
            "1596",
            "1597",
            "1598",
            "1599",
            "1600",
            "1601",
            "1602",
            "1603",
            "1604",
            "1605",
            "1606",
            "1607",
            "1608",
            "1609",
            "1610",
            "1611",
            "1612",
            "1613",
            "1614",
            "1615",
            "1616",
            "1617",
            "1618",
            "1619",
            "1620",
            "1621",
            "1622",
            "1623",
            "1624",
            "1625",
            "1626",
            "1627",
            "1628",
            "1629",
            "1630",
            "1631",
            "1632",
            "1633",
            "1634",
            "1635",
            "1636",
            "1637",
            "1638",
            "1639",
            "1640",
            "1641",
            "1642",
            "1643",
            "1644",
            "1645",
            "1646",
            "1647",
            "1648",
            "1649",
            "1650",
            "1651",
            "1652",
            "1653",
            "1654",
            "1655",
            "1656",
            "1657",
            "1658",
            "1659",
            "1660",
            "1661",
            "1662",
            "1663",
            "1664",
            "1665",
            "1666",
            "1667",
            "1668",
            "1669",
            "1670",
            "1671",
            "1672",
            "1673",
            "1674",
            "1675",
            "1676",
            "1677",
            "1678",
            "1679",
            "1680",
            "1681",
            "1682",
            "1683",
            "1684",
            "1685",
            "1686",
            "1687",
            "1688",
            "1689",
            "1690",
            "1691",
            "1692",
            "1693",
            "1694",
            "1695",
            "1696",
            "1697",
            "1698",
            "1699",
            "1700",
            "1701",
            "1702",
            "1703",
            "1704",
            "1705",
            "1706",
            "1707",
            "1708",
            "1709",
            "1710",
            "1711",
            "1712",
            "1713",
            "1714",
            "1715",
            "1716",
            "1717",
            "1718",
            "1719",
            "1720",
            "1721",
            "1722",
            "1723",
            "1724",
            "1725",
            "1726",
            "1727",
            "1728",
            "1729",
            "1730",
            "1731",
            "1732",
            "1733",
            "1734",
            "1735",
            "1736",
            "1737",
            "1738",
            "1739",
            "1740",
            "1741",
            "1742",
            "1743",
            "1744",
            "1745",
            "1746",
            "1747",
            "1748",
            "1749",
            "1750",
            "1751",
            "1752",
            "1753",
            "1754",
            "1755",
            "1756",
            "1757",
            "1758",
            "1759",
            "1760",
            "1761",
            "1762",
            "1763",
            "1764",
            "1765",
            "1766",
            "1767",
            "1768",
            "1769",
            "1770",
            "1771",
            "1772",
            "1773",
            "1774",
            "1775",
            "1776",
            "1777",
            "1778",
            "1779",
            "1780",
            "1781",
            "1782",
            "1783",
            "1784",
            "1785",
            "1786",
            "1787",
            "1788",
            "1789",
            "1790",
            "1791",
            "1792",
            "1793",
            "1794",
            "1795",
            "1796",
            "1797",
            "1798",
            "1799",
            "1800",
            "1801",
            "1802",
            "1803",
            "1804",
            "1805",
            "1806",
            "1807",
            "1808",
            "1809",
            "1810",
            "1811",
            "1812",
            "1813",
            "1814",
            "1815",
            "1816",
            "1817",
            "1818",
            "1819",
            "1820",
            "1821",
            "1822",
            "1823",
            "1824",
            "1825",
            "1826",
            "1827",
            "1828",
            "1829",
            "1830",
            "1831",
            "1832",
            "1833",
            "1834",
            "1835",
            "1836",
            "1837",
            "1838",
            "1839",
            "1840",
            "1841",
            "1842",
            "1843",
            "1844",
            "1845",
            "1846",
            "1847",
            "1848",
            "1849",
            "1850",
            "1851",
            "1852",
            "1853",
            "1854",
            "1855",
            "1856",
            "1857",
            "1858",
            "1859",
            "1860",
            "1861",
            "1862",
            "1863",
            "1864",
            "1865",
            "1866",
            "1867",
            "1868",
            "1869",
            "1870",
            "1871",
            "1872",
            "1873",
            "1874",
            "1875",
            "1876",
            "1877",
            "1878",
            "1879",
            "1880",
            "1881",
            "1882",
            "1883",
            "1884",
            "1885",
            "1886",
            "1887",
            "1888",
            "1889",
            "1890",
            "1891",
            "1892",
            "1893",
            "1894",
            "1895",
            "1896",
            "1897",
            "1898",
            "1899",
            "1900",
            "1901",
            "1902",
            "1903",
            "1904",
            "1905",
            "1906",
            "1907",
            "1908",
            "1909",
            "1910",
            "1911",
            "1912",
            "1913",
            "1914",
            "1915",
            "1916",
            "1917",
            "1918",
            "1919",
            "1920",
            "1921",
            "1922",
            "1923",
            "1924",
            "1925",
            "1926",
            "1927",
            "1928",
            "1929",
            "1930",
            "1931",
            "1932",
            "1933",
            "1934",
            "1935",
            "1936",
            "1937",
            "1938",
            "1939",
            "1940",
            "1941",
            "1942",
            "1943",
            "1944",
            "1945",
            "1946",
            "1947",
            "1948",
            "1949",
            "1950",
            "1951",
            "1952",
            "1953",
            "1954",
            "1955",
            "1956",
            "1957",
            "1958",
            "1959",
            "1960",
            "1961",
            "1962",
            "1963",
            "1964",
            "1965",
            "1966",
            "1967",
            "1968",
            "1969",
            "1970",
            "1971",
            "1972",
            "1973",
            "1974",
            "1975",
            "1976",
            "1977",
            "1978",
            "1979",
            "1980",
            "1981",
            "1982",
            "1983",
            "1984",
            "1985",
            "1986",
            "1987",
            "1988",
            "1989",
            "1990",
            "1991",
            "1992",
            "1993",
            "1994",
            "1995",
            "1996",
            "1997",
            "1998",
            "1999",
            "2000",
            "2001",
            "2002",
            "2003",
            "2004",
            "2005",
            "2006",
            "2007",
            "2008",
            "2009",
            "2010",
            "2011",
            "2012",
            "2013",
            "2014",
            "2015",
            "2016",
            "2017",
            "2018",
            "2019",
            "2020",
            "2021",
            "2022",
            "2023",
            "2024",
            "2025",
            "2026",
            "2027",
            "2028",
            "2029",
            "2030",
            "2031",
            "2032",
            "2033",
            "2034",
            "2035",
            "2036",
            "2037",
            "2038",
            "2039",
            "2040",
            "2041",
            "2042",
            "2043",
            "2044",
            "2045",
            "2046",
            "2047",
            "2048",
            "2049",
            "2050",
            "2051",
            "2052",
            "2053",
            "2054",
            "2055",
            "2056",
            "2057",
            "2058",
            "2059",
            "2060",
            "2061",
            "2062",
            "2063",
            "2064",
            "2065",
            "2066",
            "2067",
            "2068",
            "2069",
            "2070",
            "2071",
            "2072",
            "2073",
            "2074",
            "2075",
            "2076",
            "2077",
            "2078",
            "2079",
            "2080",
            "2081",
            "2082",
            "2083",
            "2084",
            "2085",
            "2086",
            "2087",
            "2088",
            "2089",
            "2090",
            "2091",
            "2092",
            "2093",
            "2094",
            "2095",
            "2096",
            "2097",
            "2098",
            "2099",
            "2100",
            "2101",
            "2102",
            "2103",
            "2104",
            "2105",
            "2106",
            "2107",
            "2108",
            "2109",
            "2110",
            "2111",
            "2112",
            "2113",
            "2114",
            "2115",
            "2116",
            "2117",
            "2118",
            "2119",
            "2120",
            "2121",
            "2122",
            "2123",
            "2124",
            "2125",
            "2126",
            "2127",
            "2128",
            "2129",
            "2130",
            "2131",
            "2132",
            "2133",
            "2134",
            "2135",
            "2136",
            "2137",
            "2138",
            "2139",
            "2140",
            "2141",
            "2142",
            "2143",
            "2144",
            "2145",
            "2146",
            "2147",
            "2148",
            "2149",
            "2150",
            "2151",
            "2152",
            "2153",
            "2154",
            "2155",
            "2156",
            "2157",
            "2158",
            "2159",
            "2160",
            "2161",
            "2162",
            "2163",
            "2164",
            "2165",
            "2166",
            "2167",
            "2168",
            "2169",
            "2170",
            "2171",
            "2172",
            "2173",
            "2174",
            "2175",
            "2176",
            "2177",
            "2178",
            "2179",
            "2180",
            "2181",
            "2182",
            "2183",
            "2184",
            "2185",
            "2186",
            "2187",
            "2188",
            "2189",
            "2190",
            "2191",
            "2192",
            "2193",
            "2194",
            "2195",
            "2196",
            "2197",
            "2198",
            "2199",
            "2200",
            "2201",
            "2202",
            "2203",
            "2204",
            "2205",
            "2206",
            "2207",
            "2208",
            "2209",
            "2210",
            "2211",
            "2212",
            "2213",
            "2214",
            "2215",
            "2216",
            "2217",
            "2218",
            "2219",
            "2220",
            "2221",
            "2222",
            "2223",
            "2224",
            "2225",
            "2226",
            "2227",
            "2228",
            "2229",
            "2230",
            "2231",
            "2232",
            "2233",
            "2234",
            "2235",
            "2236",
            "2237",
            "2238",
            "2239",
            "2240",
            "2241",
            "2242",
            "2243",
            "2244",
            "2245",
            "2246",
            "2247",
            "2248",
            "2249",
            "2250",
            "2251",
            "2252",
            "2253",
            "2254",
            "2255",
            "2256",
            "2257",
            "2258",
            "2259",
            "2260",
            "2261",
            "2262",
            "2263",
            "2264",
            "2265",
            "2266",
            "2267",
            "2268",
            "2269",
            "2270",
            "2271",
            "2272",
            "2273",
            "2274",
            "2275",
            "2276",
            "2277",
            "2278",
            "2279",
            "2280",
            "2281",
            "2282",
            "2283",
            "2284",
            "2285",
            "2286",
            "2287",
            "2288",
            "2289",
            "2290",
            "2291",
            "2292",
            "2293",
            "2294",
            "2295",
            "2296",
            "2297",
            "2298",
            "2299",
            "2300",
            "2301",
            "2302",
            "2303",
            "2304",
            "2305",
            "2306",
            "2307",
            "2308",
            "2309",
            "2310",
            "2311",
            "2312",
            "2313",
            "2314",
            "2315",
            "2316",
            "2317",
            "2318",
            "2319",
            "2320",
            "2321",
            "2322",
            "2323",
            "2324",
            "2325",
            "2326",
            "2327",
            "2328",
            "2329",
            "2330",
            "2331",
            "2332",
            "2333",
            "2334",
            "2335",
            "2336",
            "2337",
            "2338",
            "2339",



            "2343"
        ]
    }
    }
}
