	// Last Updated: 29 March, 2019

	text = text.replace(/(^(?!.*li\>).*\<a href="#..*\>(?!.*(above|below)).*)/gm,'$1<%# After giving the anchor, state whether it is "above" or "below". %>');
	text = text.replace(/(\<a href="https:..bosh.io.docs.*\>(?!.*\n?.*in the BOSH documentation).*)/g,'$1<%# The BOSH cross-referencing format is: "For information about SUBJECT, see [EXACT-HEADING](LINK-TO-BOSH-DOCS) in the BOSH documentation." %>');
	text = text.replace(/(\<a href="https:..pvtl.force.com.*\>(?!.*\n?.*in the Pivotal Support knowledge base).*)/g,'$1<%# Type "in the Pivotal Support knowledge base" somewhere in the cross-reference sentence. %>');
	text = text.replace(/(\<a href="https:..community.pivotal.io.*\>(?!.*\n?.*in the Pivotal Support knowledge base).*)/g,'$1<%# Type "in the Pivotal Support knowledge base" somewhere in the cross-reference sentence. %>');
	text = text.replace(/(\<a href="https:..en.wikipedia.*\>(?!.*\n?.*in Wikipedia).*)/g,'$1<%# Type "in Wikipedia" somewhere in the cross-reference sentence. %>');
	text = text.replace(/(^\s*\<h\d\>\s*\d\.)/gm,'$1<%# Do not format a numbered step as a header. %>');
	text = text.replace(/(\bhere\b\<.a\>)/g,'$1<%# Make the link name descriptive. %>');
	text = text.replace(/(\<a href="https:..docs.aws.amazon.com.*\>(?!.*\n?.*AWS documentation).*\<.a\>)/g,'$1<%# The link name must be "AWS documentation". %>');
	text = text.replace(/(\<a href="https:..docs.cloudfoundry.org.*\>(?!.*\n?.*Cloud Foundry documentation).*\<.a\>)/g,'$1<%# The link name must be "Cloud Foundry documentation". %>');
	text = text.replace(/(\<a href="https:..github.com.*\>(?!.*\n?.*in GitHub).*)/g,'$1<%# Type "in GitHub" somewhere in the cross-reference sentence. %>');
	text = text.replace(/(\<a href="https:..www.percona.com.doc.*\>(?!.*\n?.*Percona documentation).*\<.a\>)/g,'$1<%# The link name must be "Percona documentation". %>');
	text = text.replace(/(\<a href="https:..www.rabbitmq.com.*\>(?!.*\n?.*RabbitMQ documentation).*\<.a\>)/g,'$1<%# The link name must be "RabbitMQ documentation". %>');
	text = text.replace(/(\<a href="https:..docs.spring.io.*\>(?!.*\n?.*Spring AMQP documentation).*\<.a\>)/g,'$1<%# The link name must be "Spring AMQP documentation". %>');
	text = text.replace(/(^(?!\s*(\*\s*|\d\.\s*)).*\]\(#..*\)(?!.*(above|below)).*)/gm,'$1<%# After giving the anchor, state whether it is "above" or "below". %>');
	text = text.replace(/(\(https:..bosh.io.docs.*\)(?!.*\n?.*in the BOSH documentation).*)/g,'$1<%# The BOSH cross-referencing format is: "For information about SUBJECT, see [EXACT-HEADING](LINK-TO-BOSH-DOCS) in the BOSH documentation." %>');
	text = text.replace(/(\(https:..pvtl.force.com.*\)(?!.*\n?.*in the Pivotal Support knowledge base).*)/g,'$1<%# Type "in the Pivotal Support knowledge base" somewhere in the cross-reference sentence. %>');
	text = text.replace(/(\(https:..community.pivotal.io.*\)(?!.*\n?.*in the Pivotal Support knowledge base).*)/g,'$1<%# Type "in the Pivotal Support knowledge base" somewhere in the cross-reference sentence. %>');
	text = text.replace(/(^\s*[#]+\s*\d\.)/gm,'$1<%# Do not format a numbered step as a header. %>');
	text = text.replace(/(\bhere\b\]\()/g,'$1<%# Make the link name descriptive. %>');
	text = text.replace(/(\[(?!.*\n?.*Cloud Foundry documentation).*\]\(https:..docs.cloudfoundry.org.*\))/g,'$1<%# The link name must be "Cloud Foundry documentation". %>');
	text = text.replace(/(\(https:..github.com.*\)(?!.*\n?.*in GitHub).*)/g,'$1<%# Type "in GitHub" somewhere in the cross-reference sentence. %>');
	text = text.replace(/(\[(?!.*\n?.*Percona documentation).*\]\(https:..www.percona.com.doc.*\))/g,'$1<%# The link name must be "the Percona documentation". %>');
	text = text.replace(/(\b0 and above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "0 and later" is preferred. %>');
	text = text.replace(/(\b0 and below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "0 and earlier" is preferred. %>');
	text = text.replace(/(\b0 and greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "0 and later" is preferred. %>');
	text = text.replace(/(\b0 and higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "0 and later" is preferred. %>');
	text = text.replace(/(\b0 and lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "0 and earlier" is preferred. %>');
	text = text.replace(/(\b0 MB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "0&nbsp;MB" is preferred. %>');
	text = text.replace(/(\b0 or above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "0 or later" is preferred. %>');
	text = text.replace(/(\b0 or below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "0 or earlier" is preferred. %>');
	text = text.replace(/(\b0 or greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "0 or later" is preferred. %>');
	text = text.replace(/(\b0 or higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "0 or later" is preferred. %>');
	text = text.replace(/(\b0 or lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "0 or earlier" is preferred. %>');
	text = text.replace(/(\b0GB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "0&nbsp;GB" is preferred. %>');
	text = text.replace(/(\b1 and above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "1 and later" is preferred. %>');
	text = text.replace(/(\b1 and below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "1 and earlier" is preferred. %>');
	text = text.replace(/(\b1 and greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "1 and later" is preferred. %>');
	text = text.replace(/(\b1 and higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "1 and later" is preferred. %>');
	text = text.replace(/(\b1 and lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "1 and earlier" is preferred. %>');
	text = text.replace(/(\b1 MB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "1&nbsp;MB" is preferred. %>');
	text = text.replace(/(\b1 or above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "1 or later" is preferred. %>');
	text = text.replace(/(\b1 or below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "1 or earlier" is preferred. %>');
	text = text.replace(/(\b1 or greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "1 or later" is preferred. %>');
	text = text.replace(/(\b1 or higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "1 or later" is preferred. %>');
	text = text.replace(/(\b1 or lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "1 or earlier" is preferred. %>');
	text = text.replace(/(\b1GB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "1&nbsp;GB" is preferred. %>');
	text = text.replace(/(\b2 and above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "2 and later" is preferred. %>');
	text = text.replace(/(\b2 and below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "2 and earlier" is preferred. %>');
	text = text.replace(/(\b2 and greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "2 and later" is preferred. %>');
	text = text.replace(/(\b2 and higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "2 and later" is preferred. %>');
	text = text.replace(/(\b2 and lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "2 and earlier" is preferred. %>');
	text = text.replace(/(\b2 MB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "2&nbsp;MB" is preferred. %>');
	text = text.replace(/(\b2 or above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "2 or later" is preferred. %>');
	text = text.replace(/(\b2 or below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "2 or earlier" is preferred. %>');
	text = text.replace(/(\b2 or greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "2 or later" is preferred. %>');
	text = text.replace(/(\b2 or higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "2 or later" is preferred. %>');
	text = text.replace(/(\b2 or lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "2 or earlier" is preferred. %>');
	text = text.replace(/(\b2GB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "2&nbsp;GB" is preferred. %>');
	text = text.replace(/(\b3 and above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "3 and later" is preferred. %>');
	text = text.replace(/(\b3 and below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "3 and earlier" is preferred. %>');
	text = text.replace(/(\b3 and greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "3 and later" is preferred. %>');
	text = text.replace(/(\b3 and higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "3 and later" is preferred. %>');
	text = text.replace(/(\b3 and lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "3 and earlier" is preferred. %>');
	text = text.replace(/(\b3 MB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "3&nbsp;MB" is preferred. %>');
	text = text.replace(/(\b3 or above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "3 or later" is preferred. %>');
	text = text.replace(/(\b3 or below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "3 or earlier" is preferred. %>');
	text = text.replace(/(\b3 or greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "3 or later" is preferred. %>');
	text = text.replace(/(\b3 or higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "3 or later" is preferred. %>');
	text = text.replace(/(\b3 or lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "3 or earlier" is preferred. %>');
	text = text.replace(/(\b3GB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "3&nbsp;GB" is preferred. %>');
	text = text.replace(/(\b3rd party\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Use third party (n) or third-party (adj) %>');
	text = text.replace(/(\b4 and above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "4 and later" is preferred. %>');
	text = text.replace(/(\b4 and below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "4 and earlier" is preferred. %>');
	text = text.replace(/(\b4 and greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "4 and later" is preferred. %>');
	text = text.replace(/(\b4 and higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "4 and later" is preferred. %>');
	text = text.replace(/(\b4 and lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "4 and earlier" is preferred. %>');
	text = text.replace(/(\b4 MB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "4&nbsp;MB" is preferred. %>');
	text = text.replace(/(\b4 or above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "4 or later" is preferred. %>');
	text = text.replace(/(\b4 or below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "4 or earlier" is preferred. %>');
	text = text.replace(/(\b4 or greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "4 or later" is preferred. %>');
	text = text.replace(/(\b4 or higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "4 or later" is preferred. %>');
	text = text.replace(/(\b4 or lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "4 or earlier" is preferred. %>');
	text = text.replace(/(\b4GB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "4&nbsp;GB" is preferred. %>');
	text = text.replace(/(\b5 and above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "5 and later" is preferred. %>');
	text = text.replace(/(\b5 and below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "5 and earlier" is preferred. %>');
	text = text.replace(/(\b5 and greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "5 and later" is preferred. %>');
	text = text.replace(/(\b5 and higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "5 and later" is preferred. %>');
	text = text.replace(/(\b5 and lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "5 and earlier" is preferred. %>');
	text = text.replace(/(\b5 MB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "5&nbsp;MB" is preferred. %>');
	text = text.replace(/(\b5 or above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "5 or later" is preferred. %>');
	text = text.replace(/(\b5 or below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "5 or earlier" is preferred. %>');
	text = text.replace(/(\b5 or greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "5 or later" is preferred. %>');
	text = text.replace(/(\b5 or higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "5 or later" is preferred. %>');
	text = text.replace(/(\b5 or lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "5 or earlier" is preferred. %>');
	text = text.replace(/(\b5GB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "5&nbsp;GB" is preferred. %>');
	text = text.replace(/(\b6 and above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "6 and later" is preferred. %>');
	text = text.replace(/(\b6 and below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "6 and earlier" is preferred. %>');
	text = text.replace(/(\b6 and greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "6 and later" is preferred. %>');
	text = text.replace(/(\b6 and higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "6 and later" is preferred. %>');
	text = text.replace(/(\b6 and lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "6 and earlier" is preferred. %>');
	text = text.replace(/(\b6 MB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "6&nbsp;MB" is preferred. %>');
	text = text.replace(/(\b6 or above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "6 or later" is preferred. %>');
	text = text.replace(/(\b6 or below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "6 or earlier" is preferred. %>');
	text = text.replace(/(\b6 or greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "6 or later" is preferred. %>');
	text = text.replace(/(\b6 or higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "6 or later" is preferred. %>');
	text = text.replace(/(\b6 or lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "6 or earlier" is preferred. %>');
	text = text.replace(/(\b6GB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "6&nbsp;GB" is preferred. %>');
	text = text.replace(/(\b7 and above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "7 and later" is preferred. %>');
	text = text.replace(/(\b7 and below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "7 and earlier" is preferred. %>');
	text = text.replace(/(\b7 and greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "7 and later" is preferred. %>');
	text = text.replace(/(\b7 and higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "7 and later" is preferred. %>');
	text = text.replace(/(\b7 and lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "7 and earlier" is preferred. %>');
	text = text.replace(/(\b7 MB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "7&nbsp;MB" is preferred. %>');
	text = text.replace(/(\b7 or above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "7 or later" is preferred. %>');
	text = text.replace(/(\b7 or below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "7 or earlier" is preferred. %>');
	text = text.replace(/(\b7 or greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "7 or later" is preferred. %>');
	text = text.replace(/(\b7 or higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "7 or later" is preferred. %>');
	text = text.replace(/(\b7 or lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "7 or earlier" is preferred. %>');
	text = text.replace(/(\b7GB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "7&nbsp;GB" is preferred. %>');
	text = text.replace(/(\b8 and above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "8 and later" is preferred. %>');
	text = text.replace(/(\b8 and below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "8 and earlier" is preferred. %>');
	text = text.replace(/(\b8 and greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "8 and later" is preferred. %>');
	text = text.replace(/(\b8 and higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "8 and later" is preferred. %>');
	text = text.replace(/(\b8 and lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "8 and earlier" is preferred. %>');
	text = text.replace(/(\b8 MB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "8&nbsp;MB" is preferred. %>');
	text = text.replace(/(\b8 or above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "8 or later" is preferred. %>');
	text = text.replace(/(\b8 or below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "8 or earlier" is preferred. %>');
	text = text.replace(/(\b8 or greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "8 or later" is preferred. %>');
	text = text.replace(/(\b8 or higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "8 or later" is preferred. %>');
	text = text.replace(/(\b8 or lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "8 or earlier" is preferred. %>');
	text = text.replace(/(\b8GB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "8&nbsp;GB" is preferred. %>');
	text = text.replace(/(\b9 and above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "9 and later" is preferred. %>');
	text = text.replace(/(\b9 and below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "9 and earlier" is preferred. %>');
	text = text.replace(/(\b9 and greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "9 and later" is preferred. %>');
	text = text.replace(/(\b9 and higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "9 and later" is preferred. %>');
	text = text.replace(/(\b9 and lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "9 and earlier" is preferred. %>');
	text = text.replace(/(\b9 MB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "9&nbsp;MB" is preferred. %>');
	text = text.replace(/(\b9 or above\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "9 or later" is preferred. %>');
	text = text.replace(/(\b9 or below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "9 or earlier" is preferred. %>');
	text = text.replace(/(\b9 or greater\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "9 or later" is preferred. %>');
	text = text.replace(/(\b9 or higher\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "9 or later" is preferred. %>');
	text = text.replace(/(\b9 or lower\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "9 or earlier" is preferred. %>');
	text = text.replace(/(\b9GB\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "9&nbsp;GB" is preferred. %>');
	text = text.replace(/(\ba SQL\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "an SQL" is preferred. %>');
	text = text.replace(/(\baddon\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "add-on" is preferred. %>');
	text = text.replace(/(\badministrator\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "admin" is preferred. %>');
	text = text.replace(/(\bAI\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "application instance" is preferred. %>');
	text = text.replace(/(\ballow\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Avoid using weak verbs such as allow. %>');
	text = text.replace(/(\ballows\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Avoid using weak verbs such as allow. %>');
	text = text.replace(/(\bAmazon\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "AWS" is preferred. %>');
	text = text.replace(/(\banti-virus\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "antivirus" is preferred. %>');
	text = text.replace(/(\bapp container\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "application container" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bApp Developer\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# "app developer" is preferred. %>');
	text = text.replace(/(\bapp instance\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "application instance" is preferred. %>');
	text = text.replace(/(\bApp Manager\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Apps Manager" is preferred. %>');
	text = text.replace(/(\bapp runtime\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "PAS runtime" is preferred. %>');
	text = text.replace(/(\bapplication developer\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "app developer" is preferred. %>');
	text = text.replace(/(\bapplication program interface\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "API" is preferred. %>');
	text = text.replace(/(\bapplication security group\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "ASG" is preferred. %>');
	text = text.replace(/(\bApplication VM\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "host VM" is preferred. %>');
	text = text.replace(/(\bApplications Manager\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Apps Manager" is preferred. %>');
	text = text.replace(/(\barticle\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "topic" is preferred. %>');
	text = text.replace(/(\bassistance\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "help" is preferred. %>');
	text = text.replace(/(\bauth\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "authentication" is preferred. %>');
	text = text.replace(/(\bAWS S3\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Amazon S3" is preferred. %>');
	text = text.replace(/(\bBest Practices\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Best Practice sections are not forbidden but nor are they recommended. Check if the material could be placed somewhere else. %>');
	text = text.replace(/(\bBETA\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "beta" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bBeta\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# "beta" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bBig Data\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# "big data" is preferred. %>');
	text = text.replace(/(\bblob store\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "blobstore" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bBlue-Green deployment\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# "blue-green deployment" is preferred. %>');
	text = text.replace(/(\bboot the\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "start up the" is preferred. %>');
	text = text.replace(/(\bBosh\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "BOSH" is preferred. %>');
	text = text.replace(/(\bBOSH director\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "BOSH Director" is preferred. %>');
	text = text.replace(/(\bBOSH Health Monitor metrics\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "BOSH health metrics" is preferred. %>');
	text = text.replace(/(\bbosh lite\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "BOSH-Lite" is preferred. %>');
	text = text.replace(/(\bBOSH lite\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "BOSH-Lite" is preferred. %>');
	text = text.replace(/(\bBOSH Lite\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "BOSH-Lite" is preferred. %>');
	text = text.replace(/(\bBOSH metrics\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "BOSH health metrics" is preferred. %>');
	text = text.replace(/(\bBOSH System Metrics\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "BOSH health metrics" is preferred. %>');
	text = text.replace(/(\bBOSH-init\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "bosh-init" is preferred. %>');
	text = text.replace(/(\bbug\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "issue" is preferred. %>');
	text = text.replace(/(\bbutton\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Do not include the word button. Write "click Save", not "Click the Save button". %>');
	text = text.replace(/(\bCell VM\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "host VM" is preferred. %>');
	text = text.replace(/(\bcert\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "certificate" is preferred. %>');
	text = text.replace(/(\bcertificate authority certificate\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "certificate authority (CA) certificate" is preferred. %>');
	text = text.replace(/(\bCertificate Authority certificate\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "certificate authority (CA) certificate" is preferred. %>');
	text = text.replace(/(\bcheck box\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "checkbox" is preferred. %>');
	text = text.replace(/(\bcheckmark\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "check mark" is preferred. %>');
	text = text.replace(/(\bclean-up\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# The verb is "clean up". The noun and adjective are both "cleanup". %>');
	text = text.replace(/(\bclick on\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "click" is preferred. %>');
	text = text.replace(/(\bcloud controller\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Cloud Controller" is preferred. %>');
	text = text.replace(/(\bCloud Controller Database\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Cloud Controller database" is preferred. %>');
	text = text.replace(/(\bcloud native\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "cloud-native" is preferred. %>');
	text = text.replace(/(\bCloudController\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Cloud Controller" is preferred. %>');
	text = text.replace(/(\bCloudformation\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "CloudFormation" is preferred. %>');
	text = text.replace(/(\bcollocate\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "co-locate" is now preferred. %>');
	text = text.replace(/(\bcolocate\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "co-locate" is now preferred. %>');
	text = text.replace(/(\bcoming soon\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Only document what exists. There are legal ramifications to making promises. %>');
	text = text.replace(/(\bcommand below\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "following command" is preferred. %>');
	text = text.replace(/(\bcommand line interface\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "CLI" is preferred. %>');
	text = text.replace(/(\bcommand shell\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "shell" is preferred. %>');
	text = text.replace(/(\bcompiletime\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "compile time" is preferred. %>');
	text = text.replace(/(\bcomponent VM\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# All VMs are component VMs except for the host VMs. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bConfig\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# "config" is preferred. %>');
	text = text.replace(/(\bconsole\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "shell" is preferred. %>');
	text = text.replace(/(\bcontainer networking\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "CF Networking" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bContinuous Integration\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# "continuous integration" is preferred. %>');
	text = text.replace(/(\bcontrol-C\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Ctrl-C" is preferred. %>');
	text = text.replace(/(\bControl-C\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Ctrl-C" is preferred. %>');
	text = text.replace(/(\bcpu\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "CPU" is preferred. %>');
	text = text.replace(/(\bCSR\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "certificate signing request (CSR)" is preferred. %>');
	text = text.replace(/(\bdata store\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "datastore" is preferred. %>');
	text = text.replace(/(\bdatacenter\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "data center" is preferred. %>');
	text = text.replace(/(\bDatacenter\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "data center" is preferred. %>');
	text = text.replace(/(\bdeprecated\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Deprecated" means that a product is still supported but on its way out. %>');
	text = text.replace(/(\bdesire\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "want" is preferred. %>');
	text = text.replace(/(\bdevelopment environment\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "local machine" is preferred. %>');
	text = text.replace(/(\bdevops\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "DevOps" is preferred. %>');
	text = text.replace(/(\bDevops\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "DevOps" is preferred. %>');
	text = text.replace(/(\bDiego BBS\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "BBS" is preferred. %>');
	text = text.replace(/(\bDiego brain\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Diego Brain" is now preferred. %>');
	text = text.replace(/(\bDiego cell\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Diego Cell" is now preferred. %>');
	text = text.replace(/(\bDiego cells\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Diego Cells" is now preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bDigital Transformation\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# "digital transformation" is preferred. %>');
	text = text.replace(/(\bdisk IO\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "disk I/O" is preferred. %>');
	text = text.replace(/(\bdistro\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "distribution" is preferred. %>');
	text = text.replace(/(\bdocker image\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Docker image" is preferred. %>');
	text = text.replace(/(\bDocker trusted registry\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Docker Registry" is preferred. %>');
	text = text.replace(/(\bdoppler\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Doppler" is preferred. %>');
	text = text.replace(/(\bDoppler server\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Doppler" is preferred. %>');
	text = text.replace(/(\bDoppler VM\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Doppler" is preferred. %>');
	text = text.replace(/(\bdouble click\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "double-click" is preferred. %>');
	text = text.replace(/(\bdouble-parens expression\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "double-parentheses expression" is preferred. %>');
	text = text.replace(/(\bdownscale\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "scale down" is preferred. %>');
	text = text.replace(/(\bdrop-down\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "dropdown" is preferred -- without a hyphen and without "list" or "menu" %>');
	text = text.replace(/(\bdropdown list\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "dropdown" is preferred -- without a hyphen and without "list" or "menu" %>');
	text = text.replace(/(\bdropdown menu\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "dropdown" is preferred -- without a hyphen and without "list" or "menu" %>');
	text = text.replace(/(\bduring the boot sequence\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "during startup" is preferred. %>');
	text = text.replace(/(\be-mail\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "email" is preferred. %>');
	text = text.replace(/(\beasily\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Avoid when describing an instruction. %>');
	text = text.replace(/(\beasy\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Avoid when describing an instruction. %>');
	text = text.replace(/(\bElastic Runtime\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Write "PAS" instead if writing about software that is compatible with that. %>');
	text = text.replace(/(\benter the following\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Run" a command instead of "typing" or "entering" it. %>');
	text = text.replace(/(\benv\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "environment" is preferred %>');
	text = text.replace(/(\bephemeral disk\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# There are two kinds of disk: ephemeral and persistent. You do not need to modify "disk" with "ephemeral" unless there is discussion of persistent disks in the same topic. Always define persistent disks as persistent. %>');
	text = text.replace(/(\bERT\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Elastic Runtime" is preferred. Write "PAS" instead if writing about software that is compatible with that. %>');
	text = text.replace(/(\bexperimental\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# The terms "experimental" and "beta" have different meanings only in VMware. Otherwise, use "beta" and never "experimental". %>');
	text = text.replace(/(\bFAQ\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Do not use FAQs unless absolutely necessary. Fold into other appropriate locations in the doc. %>');
	text = text.replace(/(\bfile name\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "filename" is preferred. %>');
	text = text.replace(/(\bfile store\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "filestore" is preferred. %>');
	text = text.replace(/(\bfilestorage\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "file storage" is preferred. %>');
	text = text.replace(/(\bfilesystem\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "file system" is preferred. %>');
	text = text.replace(/(\bfirehose\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Firehose" is capitalized. %>');
	text = text.replace(/(\bfolder\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "directory" is preferred. %>');
	text = text.replace(/(\bfolders\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "directories" is preferred. %>');
	text = text.replace(/(\bfor instance\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "for example" is preferred. %>');
	text = text.replace(/(\bFrequently Asked Questions\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Do not use FAQs unless absolutely necessary. Fold into other appropriate locations in the doc. %>');
	text = text.replace(/(\bfuture\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Only document what exists. There are legal ramifications to making promises. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bGarbage Collector\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# "garbage collector" is preferred. %>');
	text = text.replace(/(\bgarden-runc\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Garden-runC" is preferred. %>');
	text = text.replace(/(\bGarden-RunC\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Garden-runC" is preferred. %>');
	text = text.replace(/(\bGemfire\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "GemFire" is preferred. %>');
	text = text.replace(/(\bGithub\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# The brand name is "GitHub". %>');
	text = text.replace(/(\bGlobal Support Services\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Pivotal Support" is preferred. %>');
	text = text.replace(/(\bgo router\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Gorouter" is preferred. %>');
	text = text.replace(/(\bGo Router\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Gorouter" is preferred. %>');
	text = text.replace(/(\bGo routine\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "goroutine" is preferred. %>');
	text = text.replace(/(\bGolang\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "golang" is preferred. %>');
	text = text.replace(/(\bgorouter\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Gorouter" is preferred. %>');
	text = text.replace(/(\bGoRouter\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Gorouter" is preferred. %>');
	text = text.replace(/(\bGoroutine\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "goroutine" is preferred. %>');
	text = text.replace(/(\bgraphical interface\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "UI" is preferred. %>');
	text = text.replace(/(\bGreenPlum\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Greenplum" is preferred. %>');
	text = text.replace(/(\bGSS\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Pivotal Support" is preferred. %>');
	text = text.replace(/(\bGUI\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "UI" is preferred. %>');
	text = text.replace(/(\bGUID\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "UUID" might be better here; it is the more popular industry term and is preferred for CredHub and BOSH. %>');
	text = text.replace(/(\bguide\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "topic" is preferred. %>');
	text = text.replace(/(\bhankering\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "want" is preferred. %>');
	text = text.replace(/(\bHAproxy\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "HAProxy" is preferred. %>');
	text = text.replace(/(\bHaproxy\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "HAProxy" is preferred. %>');
	text = text.replace(/(\bhealth-check\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "health check" is preferred. %>');
	text = text.replace(/(\bhealthcheck\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "health check" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bHigh Availability\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# "high availability" is preferred. %>');
	text = text.replace(/(\bhighly recommend\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Just "recommend" is preferred. %>');
	text = text.replace(/(\bhighly recommends\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Just "recommend" is preferred. %>');
	text = text.replace(/(\bhis or her\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "they" is preferred. %>');
	text = text.replace(/(\bhost name\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "hostname" is preferred. %>');
	text = text.replace(/(\bHttp\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "HTTP" is preferred. %>');
	text = text.replace(/(\bHTTP Router\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Gorouter" is preferred. %>');
	text = text.replace(/(\bIAAS\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "IaaS" is preferred. %>');
	text = text.replace(/(\bin CredHub\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# There are two CredHubs in PCF v2.0: BOSH CredHub and runtime CredHub. %>');
	text = text.replace(/(\bin go\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "in Go" is preferred. %>');
	text = text.replace(/(\bin order to\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "to" is preferred. %>');
	text = text.replace(/(\bin real-time\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Stuff happens in "real time". %>');
	text = text.replace(/(\bin the terminal window\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "on the command line" is preferred. %>');
	text = text.replace(/(\binformation on\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "information about" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bInternet\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# Only capitalize "internet" when it is part of a title %>');
	text = text.replace(/(\bIPSec for PCF\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "IPsec for PCF" is preferred. %>');
	text = text.replace(/(\bIsolation Segments\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Isolation Segment" is the official title so do not make it plural. It is fine to talk of "isolation segments" though. %>');
	text = text.replace(/(\bit is recommended\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Specify the party that recommends (Pivotal, Cloud Foundry, etc). %>');
	text = text.replace(/(\bIt is recommended\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Specify the party that recommends (Pivotal, Cloud Foundry, etc). %>');
	text = text.replace(/(\bjar\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "JAR" is preferred. %>');
	text = text.replace(/(\bjavascript\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "JavaScript" is preferred. %>');
	text = text.replace(/(\bJavascript\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "JavaScript" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bJumpbox\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# "jumpbox" is preferred. %>');
	text = text.replace(/(\bkeep-alive\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "keepalive" is preferred. %>');
	text = text.replace(/(\bkey pair\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "keypair" is preferred. %>');
	text = text.replace(/(\bkubo\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Container Runtime" is preferred. %>');
	text = text.replace(/(\bKubo\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Container Runtime" is preferred. %>');
	text = text.replace(/(\bKuBo\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Container Runtime" is preferred. %>');
	text = text.replace(/(\blater release\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Never state something is coming in a future release. It could create a legal problem. %>');
	text = text.replace(/(\bLightweight Directory Access Protocol\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "LDAP" is preferred. %>');
	text = text.replace(/(\blog into\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "log in to" is preferred. %>');
	text = text.replace(/(\blog on to\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "log in to" is preferred. %>');
	text = text.replace(/(\blog-in\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Use "login" (n) or "log in" (v) %>');
	text = text.replace(/(\bloggregator\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# We call it "Loggregator" -- capitalized and without a preceding "the". %>');
	text = text.replace(/(\blogin to\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "log in to" is preferred. %>');
	text = text.replace(/(\blower case\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "lowercase" is preferred. %>');
	text = text.replace(/(\bmake sure\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Replace with "ensure" or, better still, rephrase as a command. %>');
	text = text.replace(/(\bmarketplace\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Marketplace" is preferred. %>');
	text = text.replace(/(\bMaterial data\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "consumption data" is preferred. %>');
	text = text.replace(/(\bmay\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "can" usually works better. Use "might" to convey possibility. %>');
	text = text.replace(/(\bmicro-services\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "microservices" is preferred. %>');
	text = text.replace(/(\bmigrate\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# You can migrate a database or migrate apps from DEAs to Diego Cells, but (some of our docs not withstanding) if you are moving from an earlier version to a current version of a PCF product, that is an update, not a migration. %>');
	text = text.replace(/(\bnameserver\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "name server" is preferred. %>');
	text = text.replace(/(\bnext release\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Never state something is coming in a future release. It could create a legal problem. %>');
	text = text.replace(/(\bNGINX\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "nginx" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bNginx\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# "nginx" is preferred. %>');
	text = text.replace(/(\bnote down\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "record" is preferred. %>');
	text = text.replace(/(\bNote that\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Notes must be in Note boxes and start with "Note: ". %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bNozzle\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# Only capitalize "nozzle" when it is part of a title %>');
	text = text.replace(/(\bNSX Edge\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "NSX Edge Services Gateway (ESG)" is preferred. %>');
	text = text.replace(/(\boAuth\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "OAuth" is preferred. %>');
	text = text.replace(/(\bOauth\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "OAuth" is preferred. %>');
	text = text.replace(/(\bon-board\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "onboard" (v) is preferred. %>');
	text = text.replace(/(\bOn-board\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Onboard" (v) is preferred. %>');
	text = text.replace(/(\bOn-demand\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "On-Demand" is preferred. %>');
	text = text.replace(/(\bonce it\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Only use "once" when you mean "one time", not when you mean "after". %>');
	text = text.replace(/(\bonce the\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Only use "once" when you mean "one time", not when you mean "after". %>');
	text = text.replace(/(\bonce they\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Only use "once" when you mean "one time", not when you mean "after". %>');
	text = text.replace(/(\bonce you\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Only use "once" when you mean "one time", not when you mean "after". %>');
	text = text.replace(/(\bonsite\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Needs a space or a hyphen. The on-site interview is the last of the three interviews. The training was held on site. %>');
	text = text.replace(/(\bOperations Manager\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Ops Manager" is preferred. %>');
	text = text.replace(/(\bOps Man\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Ops Manager" is preferred. %>');
	text = text.replace(/(\bOps Manager Director\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "BOSH Director" is preferred. %>');
	text = text.replace(/(\bOpsMan\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Ops Manager" is preferred. %>');
	text = text.replace(/(\bOpsManager\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Ops Manager" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bOrg\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# "org" is preferred. %>');
	text = text.replace(/(\borganization\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "org" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bOrgs\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# "orgs" is preferred. %>');
	text = text.replace(/(\bout of memory error\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "out-of-memory error" is preferred. %>');
	text = text.replace(/(\bOut Of Memory error\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "out-of-memory error" is preferred. %>');
	text = text.replace(/(\bPAAS\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "PaaS" is preferred. %>');
	text = text.replace(/(\bparam\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "parameter" is preferred. %>');
	text = text.replace(/(\bparams\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "parameters" is preferred. %>');
	text = text.replace(/(\bParams\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Parameters" is preferred. %>');
	text = text.replace(/(\bPCF dev\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "PCF Dev" is preferred. %>');
	text = text.replace(/(\bPCF DEV\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "PCF Dev" is preferred. %>');
	text = text.replace(/(\bPCF Ops Manager\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Ops Manager" is preferred. %>');
	text = text.replace(/(\bPCF Small Footprint\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Small Footprint PAS" or "Small Footprint Runtime for v1.12 and earlier" are preferred. %>');
	text = text.replace(/(\bPCFdev\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "PCF Dev" is preferred. %>');
	text = text.replace(/(\bPivNet\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Pivotal Network" is preferred. %>');
	text = text.replace(/(\bPivotal Cloud Foundry Dev\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "PCF Dev" is preferred. %>');
	text = text.replace(/(\bPivotal Ops Manager\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Ops Manager" is preferred. %>');
	text = text.replace(/(\bPivotal Software\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Pivotal" is preferred. %>');
	text = text.replace(/(\bPivotal, Inc\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Pivotal" is preferred. %>');
	text = text.replace(/(\bPivotalTracker\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Write "Pivotal Tracker" (first use on page in body text) and then "Tracker" (subsequent uses). %>');
	text = text.replace(/(\bplain text\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# This refers to unformatted text. If referring to non-encrypted text, delete the space between "plain" and "text". %>');
	text = text.replace(/(\bplain-text\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Replace the hyphen with a space if referring to unformatted text. Delete the hyphen if referring to non-encrypted text. %>');
	text = text.replace(/(\bplaintext\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# This refers to an unencrypted message. If referring to unformatted online text, insert a space between "plain" and "text". %>');
	text = text.replace(/(\bplatform control plane\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "CI/CD plane" is preferred. %>');
	text = text.replace(/(\bplease\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Do not use unless asking the reader to do you a favor, such as giving feedback. %>');
	text = text.replace(/(\bPlease\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Do not use unless asking the reader to do you a favor, such as giving feedback. %>');
	text = text.replace(/(\bplug-in\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "plugin" is preferred. %>');
	text = text.replace(/(\bpoint in time snapshot\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "point-in-time snapshot" is preferred. %>');
	text = text.replace(/(\bpoint release\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Too jargony; do not use, especially because our major releases (like v1.6 to v1.7) are actually point releases.  %>');
	text = text.replace(/(\bpop-up menu\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "pop-up" is preferred with "menu" omitted %>');
	text = text.replace(/(\bpopup\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "pop-up" is preferred. %>');
	text = text.replace(/(\bpost deploy script\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "post-deploy script" is preferred. %>');
	text = text.replace(/(\bPostgres\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "PostgreSQL" is preferred. %>');
	text = text.replace(/(\bprerequisite\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Prerequisites are things that you have to do before carrying out procedures in a topic, such as installing software or carrying out other procedures. Requirements are things that you need before, after or during. %>');
	text = text.replace(/(\bprior to\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "before" is preferred. %>');
	text = text.replace(/(\bprocfile\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Procfile" is preferred. %>');
	text = text.replace(/(\bprod\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "production" is preferred. %>');
	text = text.replace(/(\bProduct Version Matrix\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Product Compatibility Matrix" is preferred. %>');
	text = text.replace(/(\bRabbit MQ\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "RabbitMQ" is preferred. %>');
	text = text.replace(/(\bread more on\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "read more about" is preferred. %>');
	text = text.replace(/(\breboot\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "restart" is preferred. %>');
	text = text.replace(/(\brecreate\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "re-create" is preferred. %>');
	text = text.replace(/(\bRecreate\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "re-create" is preferred. %>');
	text = text.replace(/(\brecreating\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "re-creating" is preferred %>');
	text = text.replace(/(\bRecreating\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Re-creating" is preferred. %>');
	text = text.replace(/(\brefarch\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# The directory name "plan" is preferred over "refarch". %>');
	text = text.replace(/(\brefer\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "see" is preferred. %>');
	text = text.replace(/(\brepo\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "repository" is preferred. %>');
	text = text.replace(/(\brequirement\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Prerequisites are things that you have to do before carrying out procedures in a topic, such as installing software or carrying out other procedures. Requirements are things that you need before, after or during. %>');
	text = text.replace(/(\bresurrector\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Resurrector" is preferred. %>');
	text = text.replace(/(\bRoute Emitter\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "router-emitter component" is preferred. %>');
	text = text.replace(/(\brouter_emitter\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "router-emitter component" is preferred. %>');
	text = text.replace(/(\brun time\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "runtime" is preferred. %>');
	text = text.replace(/(\bRunner VM\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "host VM" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bRuntime CredHub\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# "runtime CredHub" is preferred. %>');
	text = text.replace(/(\bSecure Shell\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "SSH" is preferred. %>');
	text = text.replace(/(\bSecurity Assertion Markup Language\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "SAML" is preferred. %>');
	text = text.replace(/(\bservice broker API\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Service Broker API" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bService Instance\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# Only capitalize "service instance" when it is part of a title %>');
	text = text.replace(/(\bservice instance credentials\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "binding credentials" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bService Key\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# Only capitalize "service key" when it is part of a title %>');
	text = text.replace(/(\bServices Marketplace\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Marketplace" is preferred. %>');
	text = text.replace(/(\bsettings data\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "configuration data" is preferred. %>');
	text = text.replace(/(\bsha\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "SHA" is preferred. %>');
	text = text.replace(/(\bshould\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Replace with "must", if possible, or rephrase as an instruction. %>');
	text = text.replace(/(\bsimple\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Avoid suggesting an instruction is "simple" or "easy". %>');
	text = text.replace(/(\bsimply\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Avoid suggesting an instruction is "simple" or "easy". %>');
	text = text.replace(/(\bsince\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Do not use "since" when you can use "because". %>');
	text = text.replace(/(\bsingle sign-on\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "SSO" is preferred. %>');
	text = text.replace(/(\bslave\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "follower" is preferred. %>');
	text = text.replace(/(\bsmoketest\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Should be "smoke test" (n.) or "smoke-test" (adj.) %>');
	text = text.replace(/(\bSmoketest\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Should be "smoke tests" (n.) or "smoke-tests" (adj.) %>');
	text = text.replace(/(\bsmoketests\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Should be "smoke tests" (n.) or "smoke-tests" (adj.) %>');
	text = text.replace(/(\bSmoketests\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Should be "smoke tests" (n.) or "smoke-tests" (adj.) %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bSpace\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# Only capitalize "space" when it is part of a title %>');
	text = text.replace(/(\bSpring 0\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 0" is preferred. %>');
	text = text.replace(/(\bSpring 1\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 1" is preferred. %>');
	text = text.replace(/(\bSpring 2\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 2" is preferred. %>');
	text = text.replace(/(\bSpring 3\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 3" is preferred. %>');
	text = text.replace(/(\bSpring 4\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 4" is preferred. %>');
	text = text.replace(/(\bSpring 5\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 5" is preferred. %>');
	text = text.replace(/(\bSpring 6\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 6" is preferred. %>');
	text = text.replace(/(\bSpring 7\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 7" is preferred. %>');
	text = text.replace(/(\bSpring 8\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 8" is preferred. %>');
	text = text.replace(/(\bSpring 9\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 9" is preferred. %>');
	text = text.replace(/(\bSpring Cloud DataFlow\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Cloud Data Flow" is preferred. %>');
	text = text.replace(/(\bSpring framework 0\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 0" is preferred. %>');
	text = text.replace(/(\bSpring framework 1\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 1" is preferred. %>');
	text = text.replace(/(\bSpring framework 2\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 2" is preferred. %>');
	text = text.replace(/(\bSpring framework 3\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 3" is preferred. %>');
	text = text.replace(/(\bSpring framework 4\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 4" is preferred. %>');
	text = text.replace(/(\bSpring framework 5\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 5" is preferred. %>');
	text = text.replace(/(\bSpring framework 6\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 6" is preferred. %>');
	text = text.replace(/(\bSpring framework 7\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 7" is preferred. %>');
	text = text.replace(/(\bSpring framework 8\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 8" is preferred. %>');
	text = text.replace(/(\bSpring framework 9\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Framework 9" is preferred. %>');
	text = text.replace(/(\bspringboot\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Boot" is preferred. %>');
	text = text.replace(/(\bSpringBoot\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Spring Boot" is preferred. %>');
	text = text.replace(/(\bstandard error\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "stderr" is preferred. %>');
	text = text.replace(/(\bstandard input\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "stdin" is preferred. %>');
	text = text.replace(/(\bstandard output\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "stdout" is preferred. %>');
	text = text.replace(/(\bstanza\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "section" is preferred. %>');
	text = text.replace(/(\bSTDERR\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "stderr" is preferred. %>');
	text = text.replace(/(\bSTDIN\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "stdin" is preferred. %>');
	text = text.replace(/(\bSTDOUT\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "stdout" is preferred. %>');
	text = text.replace(/(\bstem cell\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "stemcell" is preferred. %>');
	text = text.replace(/(\bstem-cell\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "stemcell" is preferred. %>');
	text = text.replace(/(\bStemCell\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "stemcell" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bStemcell\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# Lowercase is preferred unless "stemcell" starts a sentence or is in a title. %>');
	text = text.replace(/(\bstrongly\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# This should probably be cut, especially if it precedes "recommend". %>');
	text = text.replace(/(\bsuite\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Only use "suite" when describing a bundle of products sold together under a single SKU. %>');
	text = text.replace(/(\bsynch\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "sync" is preferred. %>');
	text = text.replace(/(\bsynchronize\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "sync" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bSyslog\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# Lowercase is preferred unless "syslog" starts a sentence or is in a title. %>');
	text = text.replace(/(\btar\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "TAR" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bTasks\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# "tasks" is preferred. %>');
	text = text.replace(/(\bterminal emulator\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "shell" is preferred. %>');
	text = text.replace(/(\btext box\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "field" is preferred. %>');
	text = text.replace(/(\btext field\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "field" is preferred. %>');
	text = text.replace(/(\btextbox\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "field" is preferred. %>');
	text = text.replace(/(\bthe Apps Manager\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# We call it just "Apps Manager" -- there is no preceding "the". %>');
	text = text.replace(/(\bthe deploy\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "the deployment" is preferred. %>');
	text = text.replace(/(\bthe install\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "the installation" is preferred. %>');
	text = text.replace(/(\bthe Loggregator\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# We call it "Loggregator" -- capitalized and without a preceding "the". %>');
	text = text.replace(/(\bthe machine\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "the local machine" is preferred. %>');
	text = text.replace(/(\bthe Operator\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "the operator" is preferred. %>');
	text = text.replace(/(\bthe Pivotal Network\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# We call it just "Pivotal Network" -- there is no preceding "the". %>');
	text = text.replace(/(\bthe toggle\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Do not use "toggle". Do not use "Option button". You may use "radio button"; but, in general, try to avoid referring to the button and instead write "Click BUTTON-TEXT". %>');
	text = text.replace(/(\bthrice\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "three times" is preferred. %>');
	text = text.replace(/(\bTraffic-controller\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Traffic Controller" is preferred. %>');
	text = text.replace(/(\bTraffic-Controller\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Traffic Controller" is preferred. %>');
	text = text.replace(/(\bTrafficController\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Traffic Controller" is preferred. %>');
	text = text.replace(/(\bTransmission Control Protocol\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "TCP" is preferred. %>');
	text = text.replace(/(\btriple-parens expression\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "triple-parentheses expression" is preferred. %>');
	text = text.replace(/(\btwo times\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "twice" is preferred. %>');
	text = text.replace(/(\btype the following\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Run" a command instead of "typing" or "entering" it. %>');
	text = text.replace(/(\buncheck\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Disable the LABEL-NAME checkbox" is preferred. Likewise for "Enable the LABEL-NAME checkbox". %>');
	text = text.replace(/(\bUnderstanding\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# If a procedural topic title, go with "How to...". If a conceptual title, go with "About..." or "Overview of..." or nothing at all. %>');
	text = text.replace(/(\bUniform Resource Locator\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "URL" is preferred. %>');
	text = text.replace(/(\bunix\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Unix" is preferred. %>');
	text = text.replace(/(\bUNIX\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Unix" is preferred. %>');
	text = text.replace(/(\buntick\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Disable the LABEL-NAME checkbox" is preferred. Likewise for "Enable the LABEL-NAME checkbox". %>');
	text = text.replace(/(\bupgradeable\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "upgradable" is preferred. %>');
	text = text.replace(/(\bupper case\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "uppercase" is preferred. %>');
	text = text.replace(/(\bupscale\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "scale up" is preferred. %>');
	text = text.replace(/(\bUrl\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "URL" is preferred. %>');
	text = text.replace(/(\bURl\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "URL" is preferred. %>');
	text = text.replace(/(\busage data\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "consumption data" is preferred. %>');
	text = text.replace(/(\busage service\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Usage service" is preferred. %>');
	text = text.replace(/(^(?!(##.*|\<h.\>.*|\<th\>.*)).*\bUsage Service\b[^\*\<\]](?![\w\s\-\d\(\)]*(\w\<\/strong\>.*|\w\*\*.*|\w\].*|\w\<\/a\>)))/gm,'$1<%# "Usage service" is preferred. %>');
	text = text.replace(/(\buser interface\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "UI" is preferred. %>');
	text = text.replace(/(\buser name\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "username" is preferred. %>');
	text = text.replace(/(\butilizing\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "through" is preferred. %>');
	text = text.replace(/(\bversion 1\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "v1" is preferred. %>');
	text = text.replace(/(\bversion 2\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "v2" is preferred. %>');
	text = text.replace(/(\bversion 3\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "v3" is preferred. %>');
	text = text.replace(/(\bversion 4\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "v4" is preferred. %>');
	text = text.replace(/(\bversion 5\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "v5" is preferred. %>');
	text = text.replace(/(\bversion 6\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "v6" is preferred. %>');
	text = text.replace(/(\bversion 7\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "v7" is preferred. %>');
	text = text.replace(/(\bversion 8\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "v8" is preferred. %>');
	text = text.replace(/(\bversion 9\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "v9" is preferred. %>');
	text = text.replace(/(\bversions <= 0\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 0 or earlier" is preferred. %>');
	text = text.replace(/(\bversions <= 1\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 1 or earlier" is preferred. %>');
	text = text.replace(/(\bversions <= 2\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 2 or earlier" is preferred. %>');
	text = text.replace(/(\bversions <= 3\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 3 or earlier" is preferred. %>');
	text = text.replace(/(\bversions <= 4\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 4 or earlier" is preferred. %>');
	text = text.replace(/(\bversions <= 5\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 5 or earlier" is preferred. %>');
	text = text.replace(/(\bversions <= 6\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 6 or earlier" is preferred. %>');
	text = text.replace(/(\bversions <= 7\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 7 or earlier" is preferred. %>');
	text = text.replace(/(\bversions <= 8\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 8 or earlier" is preferred. %>');
	text = text.replace(/(\bversions <= 9\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 9 or earlier" is preferred. %>');
	text = text.replace(/(\bversions >= 0\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 0 and later" is preferred. %>');
	text = text.replace(/(\bversions >= 1\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 1 and later" is preferred. %>');
	text = text.replace(/(\bversions >= 2\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 2 and later" is preferred. %>');
	text = text.replace(/(\bversions >= 3\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 3 and later" is preferred. %>');
	text = text.replace(/(\bversions >= 4\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 4 and later" is preferred. %>');
	text = text.replace(/(\bversions >= 5\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 5 and later" is preferred. %>');
	text = text.replace(/(\bversions >= 6\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 6 and later" is preferred. %>');
	text = text.replace(/(\bversions >= 7\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 7 and later" is preferred. %>');
	text = text.replace(/(\bversions >= 8\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 8 and later" is preferred. %>');
	text = text.replace(/(\bversions >= 9\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "version 9 and later" is preferred. %>');
	text = text.replace(/(\bvhost\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "virtual host" is preferred. %>');
	text = text.replace(/(\bVhost\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "virtual host" is preferred. %>');
	text = text.replace(/(\bvia\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "through", "using" and "by means of" are preferred. %>');
	text = text.replace(/(\bvirtual machine\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "VM" is preferred. %>');
	text = text.replace(/(\bVirtual Machine Metrics\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "BOSH health metrics" is preferred. %>');
	text = text.replace(/(\bVMWare\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "VMware" is preferred. %>');
	text = text.replace(/(\bWARNING\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "Warning" is preferred. %>');
	text = text.replace(/(\bwe recommend\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Specify the party that recommends (Pivotal, Cloud Foundry, etc). %>');
	text = text.replace(/(\bWe recommend\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Specify the party that recommends (Pivotal, Cloud Foundry, etc). %>');
	text = text.replace(/(\bweb site\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "website" is preferred. %>');
	text = text.replace(/(\bwebdav\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "WebDAV" is preferred. %>');
	text = text.replace(/(\bWebDav\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "WebDAV" is preferred. %>');
	text = text.replace(/(\bWebSocket\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Should not be plural as it refers to the WebSocket protocol.  %>');
	text = text.replace(/(\bwhitelist\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "whitelist" is fine for now while it is baked into the product. But where it makes sense, write "list" instead. %>');
	text = text.replace(/(\bwill\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Avoid "will" as we prefer the present tense. %>');
	text = text.replace(/(\bWindows 20\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# Per Kartik, it is "Windows Server, version 1709" NOT "Windows 2016, version 1709" %>');
	text = text.replace(/(\bwish\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "want" is preferred. %>');
	text = text.replace(/(\bworker\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "follower" is preferred. %>');
	text = text.replace(/(\bwrite down\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "record" is preferred. %>');
	text = text.replace(/(\bYaml\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "YAML" is preferred. %>');
	text = text.replace(/(\bYML file\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "YAML file" is preferred. %>');
	text = text.replace(/(\byour machine\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# "your local machine" is preferred. %>');
	text = text.replace(/(\byoutube\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# The brand name is "YouTube". %>');
	text = text.replace(/(\bYoutube\b[^-`'\<\/\)\]](?![^`\/\<\]]*(\w`|\w\]|\w\)|\w\<|[\n\s]*```\n$|[\n\s]*```\n\s*Where|[\n\s]*\<\/pre\>\n$|[\n\s]*\<\/pre\>\n\s*Where|[\n\s]*<\/code\>\n$|[\n\s]*<\/code\>\n\s*Where)))/gm,'$1<%# The brand name is "YouTube". %>');

	// End of commands
