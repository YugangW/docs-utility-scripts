{"format": "3.0",
    "replacements": {
        // Last updated: April 20, 2021

// Substitute 2 spaces for each tab that does not precede a variable.

"6": {"find": "\\t(?!<%= vars)", "replace": "  "},

// Comment on layout errors and also formatting errors within terminal snippets

"10": {"find": "((```|\\<\\/code\\>|\\<\\/pre\\>)\\n{2,}\\s*Where)", "replace": "\\1<%# Place |Where| immediately below the closing code tag. %>"},
"11": {"find": "([A-z](?!\\n)\\s(?!\\n)\\s[A-z])", "replace": "\\1<%# Delete the double space. %>"},
"12": {"find": "([A-Za-z\\)\\>][\\:\\.](?!\\<br)\\n[^\\n]+```)", "replace": "\\1<%# Insert an empty newline before the snippet or, if inside a nested list, use |<br>| instead. %>"},
"13": {"find": "(\\d\\.\\s.*\\n\\s{4}\\*[^\\.]*[^\\<]\\n\\s{4}.*\\n\\s{4}.*\\n\\s{4}.*\\n\\s{4}.*\\n\\s{4}.*)", "replace": "\\1<%# Consider using <br><br> between nested bullets that are many and/or wordy. %>"},
"14": {"find": "(\\n\\n[A-Z][^:\\d\\*]*:\\n\\n\\s+(?=(```|<pre|<code|<t|\\|)))", "replace": "\\1<%# Check if this indentation is definitely needed. %>"},
"15": {"find": "(\\n\\n\\s*```\\n\\s*Where:)", "replace": "\\1<%# Delete the empty newline before the Markdown code snippet closing tag. %>"},
"16": {"find": "(^---\\n+(<([^%].+\\n){1,}\\n*|)(?=##[^#]))", "replace": "\\1<%# Insert missing opening sentence before the first header. |This is topic is about...| %>"},
"17": {"find": "(^(?!\\n).*:\\n\\n\\s+(?=\\d\\.\\s.*\\n\\s+\\d\\.\\s.*))", "replace": "\\1<%# This indentation formats a numbered list as a code snippet. %>"},
"18": {"find": "(^(?!\\n)(\\s{1,3}|\\s{5,7}|\\s{9}|\\s{11}|\\s{13,})(```|<p class|<code|\\|)([^<].+\\n){1,}\\n)", "replace": "\\1<%# Indent 0, 4, 8, or 12 spaces. %>"},
"19": {"find": "(^(?!\\n)[\\*\\+\\-][^\\n]*\\n\\n(?!\\n)(\\s{0,3}|\\s{5,})[A-Z][^#]*\\n+[\\*\\+\\-])", "replace": "\\1<%# Replace the empty newline above with |<br><br>|. %>"},
"20": {"find": "(^(?!\\n)[^\\*\\+\\-\\d\\s][A-Za-z]+\\b\\s\\b[a-z]+\\b[:\\.]\\n[^\\n]+(```|<pre))", "replace": "\\1<%# Put an empty newline between the stem and the opening code tag. %>"},
"21": {"find": "(^(?!\\n)\\d\\.[^:]*\\n\\n(?=\\s+\\d\\.))", "replace": "\\1<%# Place a colon at the end of the step that precedes the nested steps. %>"},
"22": {"find": "(^(?!\\n)\\s{1,3}\\d\\.)", "replace": "\\1<%# Place this step at the start of the line or, if nested, indent it 4 spaces. %>"},
"23": {"find": "(^(?!\\n)\\s{1,4}[\\*\\+\\-\\d][\\.\\s](.+\\n){1,}\\n[^\\n]\\s{4,})", "replace": "\\1<%# Do not insert an empty newline inside a nested list. %>"},
"24": {"find": "(^(?!\\n)\\s{10}[\\*\\+]\\s`[^\\*\\+]*\\.\\n(?!\\n)(\\s{0,7}|\\s{9,})[\\*\\+]\\s\\*\\*)", "replace": "\\1<%# Indent this bullet 8 spaces: it is not part of the |Where| bullet list. %>"},
"25": {"find": "(^(?!\\n)\\s{4}(```|<\\/code>|<\\/pre>|<\\/t|\\|)\\n(?!\\n)(\\s{0,3}|\\s{5,})[^\\s\\d\\*\\+-])", "replace": "\\1<%# Indent this text as much as the closing tag above and place it immediately below it. %>"},
"26": {"find": "(^(?!\\n)\\s{4}(```|<\\/code>|<\\/pre>|<\\/t|\\|)\\n\\n(\\s{0,3}|\\s{5,})[A-Z](?=[^#]*\\d\\.))", "replace": "\\1<%# Indent this sentence the same number of spaces as the closing tag immediately above. %>"},
"27": {"find": "(^(?!\\n)\\s{4}[^\\s]+\\n(\\s{0,3}|\\s{5,})[\\*\\+](?!\\s\\*\\*))", "replace": "\\1<%# Indent this bullet the same amount as the line above. %>"},
"28": {"find": "(^(?!\\n)\\s{4}\\d\\..*(?=\\n\\n(\\s{0,7}|\\s{9,})\\<p[^\\d]*\\n\\n[^#]*\\n\\n\\s{4}\\d\\.))", "replace": "\\1<%# Indent the paragraph 8 spaces to maintain the numbered step sequence. %>"},
"29": {"find": "(^(?!\\n)\\s{4}\\d\\..*\\n(?!\\n)(\\s{0,7}|\\s{9,})[\\*\\+])", "replace": "\\1<%# Indent a bullet beneath a nested step 8 spaces. %>"},
"30": {"find": "(^(?!\\n)\\s{5,}```\\n(?=\\s*Where))", "replace": "\\1<%# If this snippet is within a nested list, add |<br>| after the closing tag and write |Where| immediately below it. %>"},
"31": {"find": "(^(?!\\n)\\s{5,}```<br>\\n\\s*\\n+(?=\\s*Where))", "replace": "\\1<%# If this snippet is within a nested list, remove empty newlines between the closing code tag and |Where|. %>"},
"32": {"find": "(^(?!\\n)\\s{8}(```|<\\/code>|<\\/pre>|<\\/t|\\|)\\n(?!\\n)(\\s{0,7}|\\s{9,})[^\\s\\d\\*\\+-])", "replace": "\\1<%# Indent this text as much as the closing tag above and place it immediately below it. %>"},
"33": {"find": "(^(?!\\n)\\s{8}(```|<\\/code>|<\\/pre>|<\\/t|\\|)\\n\\n(\\s{0,7}|\\s{9,})[A-Z](?=[^#]*\\d\\.))", "replace": "\\1<%# Indent this sentence the same number of spaces as the closing tag immediately above. %>"},
"34": {"find": "(^(?!\\n)\\s{8}[\\*\\+]\\s`[^\\*\\+]*\\.\\n(?!\\n)\\s+[\\*\\+]\\s\\*\\*)", "replace": "\\1<%# Do not indent this bullet: it is not part of the |Where| bullet list. %>"},
"35": {"find": "(^(?!\\n)\\s{8}[\\d\\*\\+](.+\\n){1,}\\n(\\s{0,11}|\\s{13,})(?=(```|<pre|<t|\\|)))", "replace": "\\1<%# Indent this code snippet beneath a nested bullet beneath a nested step 12 spaces. %>"},
"36": {"find": "(^(?!\\n)\\s{8}[^\\s]+\\n(\\s{0,7}|\\s{9,})[\\*\\+](?!\\s\\*\\*))", "replace": "\\1<%# Indent this bullet the same amount as the line above. %>"},
"37": {"find": "(^(?!\\n)\\s{8}\\d\\..*(?=\\n\\n(\\s{0,11}|\\s{13,})\\<p[^\\d]*\\n\\n[^#]*\\n\\n\\s{8}\\d\\.))", "replace": "\\1<%# Indent the paragraph 12 spaces to maintain the numbered step sequence. %>"},
"38": {"find": "(^(?!\\n)\\s*\\d\\..*\\n\\n\\s+[A-Z`](.+\\n){1,}\\n[A-Z](.+\\n){1,}\\n\\s+(.+\\n){1,}\\n\\s*\\d\\.\\s)", "replace": "\\1<%# If some text is indented between steps, indent the rest to preserve the numbered step sequence. %>"},
"39": {"find": "(^(?!\\n)\\s+[\\*\\+\\-\\d].*\\n\\n(?!\\n)\\s+[\\*\\+\\-\\d])", "replace": "\\1<%# Delete the empty newline before this nested bullet or step. %>"},
"40": {"find": "(^(?!\\n)\\s+\\d\\.[^:1]*:\\n\\n(\\s{0,7}|\\s{9,})(?=(```|<pre|<code|<t|\\|)))", "replace": "\\1<%# Indent 8 spaces. %>"},
"41": {"find": "(^\\d\\.[^:\\n]*:\\n\\n(\\s{0,3}|\\s{5,})(?=(\\d\\.)))", "replace": "\\1<%# Indent this nested step 4 spaces. %>"},
"42": {"find": "(^\\d\\.[^:\\n]*:\\n\\n(\\s{0,3}|\\s{5,})(?=(```|<pre|<code|<t|\\|)))", "replace": "\\1<%# Indent 4 spaces. %>"},
"43": {"find": "(^\\d\\.\\s(.+\\n){1,}\\n(<p|```)(.+\\n){1,}\\n\\d\\.\\s)", "replace": "\\1<%# Indent this block 4 spaces to preserve the numbered step sequence it is in. %>"},
"44": {"find": "(<br>\\n*[^#:]*:\\n\\n[\\*\\+\\-])", "replace": "\\1<%# Format these bullets in HTML to align them with the stem above. %>"},
"45": {"find": "(terminal.>\\n[^<]*(<strong>|<em>|<h\\d>|<html>|<body>))", "replace": "\\1<%# Use unicode for HTML tags to ensure the tags show up in the snippet. |&lt;| for |<| and |&gt;| for |>|. %>"},

// Comment on style errors within code outside terminal snippets.

"49": {"find": "(-APP-NAME\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# |APP-NAME| is preferred. %>"},
"50": {"find": "(-SERVICE-INSTANCE-NAME\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# |SERVICE-INSTANCE-NAME| is preferred. %>"},
"51": {"find": "(:alt =\\> .[^\\{\\)]*\\<%= vars\\.[^\\)]*\\) %\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# Use #{} to escape ERB variables within ERB image tags, as in #{vars.product_short}. %>"},
"52": {"find": "(!\\[.{0,44}\\]\\([^\\.]*\\.png\\)(?![^<]*<\\/pre>))", "replace": "\\1<%# Alt text must describe the image in detail. %>"},
"53": {"find": "([\\*\\+\\-]\\s`[A-Za-z]*_(?![^<]*<\\/pre>))", "replace": "\\1<%# Use dashes for spacing in placeholders, not underscores. %>"},
"54": {"find": "([\\n\\s]\\*\\*[^*]{96}(?![^<]*<\\/pre>))", "replace": "\\1<%# Consider reducing this run-in heading to fewer than 100 characters. %>"},
"55": {"find": "([^-]CLIENT-SECRET\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# Specify the server, as in |BOSH-CLIENT-SECRET| or |CREDHUB-CLIENT-SECRET|. %>"},
"56": {"find": "([^-]DEPLOYMENT\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# |BOSH-DEPLOYMENT| is preferred. %>"},
"57": {"find": "([^-]ENVIRONMENT\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# |BOSH-ENVIRONMENT| is preferred. %>"},
"58": {"find": "([^`\\n]{100,}[^`]*```(?=\\n\\n)(?![^<]*<\\/pre>))", "replace": "\\1<%# Consider using // to break up every 100-character line in this snippet. %>"},
"59": {"find": "(\\.\\/[a-z-]*#[a-z-]*\\.html(?![^<]*<\\/pre>))", "replace": "\\1<%# Broken link -- the correct syntax is |page-name.html#anchor-name|. %>"},
"60": {"find": "(\\(https:..discuss.pivotal.io.*\\).*$(?![^<]*<\\/pre>))", "replace": "\\1<%# Discuss Pivotal is a deprecated URL. Contact Knowledge Base staff for its replacement. %>"},
"61": {"find": "(\\(https:..github.com.*\\)(?!.*\\n?.*GitHub).*$(?![^<]*<\\/pre>))", "replace": "\\1<%# Type |in GitHub| somewhere in the cross-reference sentence. %>"},
"62": {"find": "(\\(https:..pvtl.force.com.*\\).*$(?![^<]*<\\/pre>))", "replace": "\\1<%# Pivotal Force is a deprecated URL. Contact Knowledge Base staff for its replacement. %>"},
"63": {"find": "(\\[(?!.*\\n?.*BOSH documentation).*\\]\\(https:..bosh.io.*\\)(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |BOSH documentation|. %>"},
"64": {"find": "(\\[(?!.*\\n?.*cert-manager documentation).*\\]\\(https:..cert-manager.io.docs.*\\)(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |cert-manager documentation|. %>"},
"65": {"find": "(\\[(?!.*\\n?.*Cloud Foundry documentation).*\\]\\(https:..docs.cloudfoundry.org.*\\)(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |Cloud Foundry documentation|. %>"},
"66": {"find": "(\\[(?!.*\\n?.*Concourse documentation).*\\]\\(https:..concourse-ci.org.*\\)(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |Concourse documentation|. %>"},
"67": {"find": "(\\[(?!.*\\n?.*Docker documentation).*\\]\\(https:..docs.docker.com.*\\)(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |Docker documentation|. %>"},
"68": {"find": "(\\[(?!.*\\n?.*GCP documentation).*\\]\\(https:..cloud.google.com.*\\)(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |GCP documentation|. %>"},
"69": {"find": "(\\[(?!.*\\n?.*Istio documentation).*\\]\\(https:..istio.io.latest.docs.*\\)(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |Istio documentation|. %>"},
"70": {"find": "(\\[(?!.*\\n?.*Kubernetes documentation).*\\]\\(https:..kubernetes.io.docs.*\\)(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |Kubernetes documentation|. %>"},
"71": {"find": "(\\[(?!.*\\n?.*Microsoft documentation).*\\]\\(https:..docs.microsoft.com.*\\)(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |Microsoft documentation|. %>"},
"72": {"find": "(\\[(?!.*\\n?.*Percona documentation).*\\]\\(https:..www.percona.com.doc.*\\)(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |Percona documentation|. %>"},
"73": {"find": "(\\[(?!.*\\n?.*RabbitMQ documentation).*\\]\\(https:..www.rabbitmq.com.*\\)(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |RabbitMQ documentation|. %>"},
"74": {"find": "(\\[(?!.*\\n?.*Terraform documentation).*\\]\\(https:..www.terraform.io.docs.*\\)(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |Terraform documentation|. %>"},
"75": {"find": "(\\[(?!.*\\n?.*VMware Tanzu Support knowledge base).*\\]\\(https:..community.pivotal.io.*\\)(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |VMware Tanzu Support documentation|. %>"},
"76": {"find": "(\\[[a-z]+\\s[^\\]]*\\]\\([^\\)]*\\)(?![^<]*<\\/pre>))", "replace": "\\1<%# See https://docs-wiki.cfapps.io/wiki/style/cross-ref-style.html %>"},
"77": {"find": "(\\].(?=\\((http|#))(?![^<]*<\\/pre>))", "replace": "\\1<%# Broken link %>"},
"78": {"find": "(\\<!--(?![^<]*<\\/pre>))", "replace": "\\1<%# HTML comments sometimes slip through to the webpage. Use ERB tags instead. %>"},
"79": {"find": "(\\<%= image_tag(?![^\\)]*:alt)[^%]*%\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# Images require alt text. %>"},
"80": {"find": "(\\<%= image_tag[^\\)]*:alt => \\W.{0,44}\\W\\) %\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# Alt text must describe the image in detail. %>"},
"81": {"find": "(\\<%= var.[\\w]* %\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# ERB variables start with |vars.|, not |var|. %>"},
"82": {"find": "(\\<%= vars.platform_name %\\> v2.0 and later\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# |<%= vars.platform_name %> (formerly <%= vars.platform_old %>)| is preferred. %>"},
"83": {"find": "(\\<%= vars.platform_old %\\> v2.0 and later\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# |<%= vars.platform_name %> (formerly <%= vars.platform_old %>)| is preferred. %>"},
"84": {"find": "(\\<%= vars.runtime_abbr %\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# Use <%= vars.app_runtime_abbr %>"},
"85": {"find": "(\\<a href=.[^\\>]*\\>[a-z]+\\s[^<]*\\<\\/a\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# See https://docs-wiki.cfapps.io/wiki/style/cross-ref-style.html %>"},
"86": {"find": "(\\<a href=.[^\\>]*\\>http[^<]*\\<\\/a\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# See https://docs-wiki.cfapps.io/wiki/style/cross-ref-style.html %>"},
"87": {"find": "(\\<a href=.https:..bosh.io[^\\>]*\\>(?!.*\\n?.*BOSH documentation).*$(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |BOSH documentation|. %>"},
"88": {"find": "(\\<a href=.https:..cert-manager.io.docs[^\\>]*\\>(?!.*\\n?.*cert-manager documentation).*$(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |cert-manager documentation|. %>"},
"89": {"find": "(\\<a href=.https:..cloud.google.com[^\\>]*\\>(?!.*\\n?.*GCP documentation).*\\<.a\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |GCP documentation|. %>"},
"90": {"find": "(\\<a href=.https:..community.pivotal.io[^\\>]*\\>(?!.*\\n?.*VMware Tanzu Support knowledge base).*$(?![^<]*<\\/pre>))", "replace": "\\1<%# Type |in the VMware Tanzu Support knowledge base| somewhere in the cross-reference sentence. %>"},
"91": {"find": "(\\<a href=.https:..concourse-ci.org[^\\>]*\\>(?!.*\\n?.*Concourse documentation).*\\<.a\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |Concourse documentation|. %>"},
"92": {"find": "(\\<a href=.https:..discuss.pivotal.io[^\\>]*\\>.*$(?![^<]*<\\/pre>))", "replace": "\\1<%# Discuss Pivotal is a deprecated URL. Contact Knowledge Base staff for its replacement. %>"},
"93": {"find": "(\\<a href=.https:..docs.aws.amazon.com[^\\>]*\\>(?!.*\\n?.*AWS documentation).*\\<.a\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |AWS documentation|. %>"},
"94": {"find": "(\\<a href=.https:..docs.cloudfoundry.org[^\\>]*\\>(?!.*\\n?.*Cloud Foundry documentation).*\\<.a\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |Cloud Foundry documentation|. %>"},
"95": {"find": "(\\<a href=.https:..docs.docker.com[^\\>]*\\>(?!.*\\n?.*Docker documentation).*\\<.a\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |Docker documentation|. %>"},
"96": {"find": "(\\<a href=.https:..docs.spring.io[^\\>]*\\>(?!.*\\n?.*Spring AMQP documentation).*\\<.a\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |Spring AMQP documentation|. %>"},
"97": {"find": "(\\<a href=.https:..en.wikipedia[^\\>]*\\>(?!.*\\n?.*Wikipedia).*$(?![^<]*<\\/pre>))", "replace": "\\1<%# Type |in Wikipedia| somewhere in the cross-reference sentence. %>"},
"98": {"find": "(\\<a href=.https:..github.com[^\\>]*\\>(?!.*\\n?.*GitHub).*$(?![^<]*<\\/pre>))", "replace": "\\1<%# Type |in GitHub| somewhere in the cross-reference sentence. %>"},
"99": {"find": "(\\<a href=.https:..istio.io.latest.docs[^\\>]*\\>(?!.*\\n?.*Istio documentation).*\\<.a\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |Istio documentation|. %>"},
"100": {"find": "(\\<a href=.https:..kubernetes.io.docs[^\\>]*\\>(?!.*\\n?.*Kubernetes documentation).*\\<.a\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |Kubernetes documentation|. %>"},
"101": {"find": "(\\<a href=.https:..pvtl.force.com[^\\>]*\\>.*$(?![^<]*<\\/pre>))", "replace": "\\1<%# Pivotal Force is a deprecated URL. Contact Knowledge Base staff for its replacement. %>"},
"102": {"find": "(\\<a href=.https:..www.percona.com.doc[^\\>]*\\>(?!.*\\n?.*Percona documentation).*\\<.a\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |Percona documentation|. %>"},
"103": {"find": "(\\<a href=.https:..www.rabbitmq.com[^\\>]*\\>(?!.*\\n?.*RabbitMQ documentation).*\\<.a\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# The link name must be |RabbitMQ documentation|. %>"},
"104": {"find": "(\\<a id=.[^#][^>]*\\>(?!\\<\\/a\\>)(?![^<]*<\\/pre>))", "replace": "\\1<%# In a header, add the closing anchor ID tag immediately after the opening tag. %>"},
"105": {"find": "(\\<a id=[^\\>]*\\.(?![^<]*<\\/pre>))", "replace": "\\1<%# Do not use periods in anchors. %>"},
"106": {"find": "(\\<a id=[^\\d\\>]*\\d\\d[^\\>]*\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# Place dashes between digits in release notes anchor IDs. %>"},
"107": {"find": "(\\<code\\>kubectl\\<\\/code\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# Do not format |kubectl| as code. %>"},
"108": {"find": "(\\<h\\d\\>\\s*\\d\\.(?![^<]*<\\/pre>))", "replace": "\\1<%# Do not format a numbered step as a header. %>"},
"109": {"find": "(\\<h1\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# H1 headers are not allowed within topics. %>"},
"110": {"find": "(\\<img src=.[^\\.]*\\.png. alt=\\W.{0,44}\\W\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# Alt text must describe the image in detail. %>"},
"111": {"find": "(\\<img src=(?!.*alt=.).*$(?![^<]*<\\/pre>))", "replace": "\\1<%# Images require alt text. %>"},
"112": {"find": "(\\<strong\\>Important\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# The only boxes we use are Note and Warning. %>"},
"113": {"find": "(\\<td\\>\\<\\/td\\>(?![^<]*<\\/pre>))", "replace": "\\1<%# Insert |<em>n/a</em>| within purposefully empty cells. %>"},
"114": {"find": "(\\<td\\>\\s*n\\/a(?![^<]*<\\/pre>))", "replace": "\\1<%# Insert |<em>n/a</em>| within purposefully empty cells. %>"},
"115": {"find": "(\\|(?!(\\n))\\s*\\|(?![^<]*<\\/pre>))", "replace": "\\1<%# Insert |_n/a_| within purposefully empty cells. %>"},
"116": {"find": "(\\|(?!(\\n))\\s*n\\/a(?![^<]*<\\/pre>))", "replace": "\\1<%# Insert |_n/a_| within purposefully empty cells. %>"},
"117": {"find": "(\\bAPP(?!-NAME)(?![^<]*<\\/pre>))", "replace": "\\1<%# |APP-NAME| is preferred. %>"},
"118": {"find": "(\\bENV\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# |BOSH-ENVIRONMENT| is preferred. %>"},
"119": {"find": "(\\bHOST\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# |BOSH-DIRECTOR-IP| is preferred. %>"},
"120": {"find": "(\\bPRIVATE-KEY-FILE\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# |PATH-TO-PRIVATE-KEY| is preferred. %>"},
"121": {"find": "(\\brun:[\\s\\n]*\\<code\\>[\\s\\n\\~]*\\$(?![^<]*<\\/pre>))", "replace": "\\1<%# We only include dollar signs in terminal snippet examples. %>"},
"122": {"find": "(\\brun:[\\s\\n]*`+[\\s\\n\\~]*\\$(?![^<]*<\\/pre>))", "replace": "\\1<%# We only include dollar signs in terminal snippet examples. %>"},
"123": {"find": "(\\brun[^:]*:[\\s\\n]*\\<pre class(?![^<]*<\\/pre>))", "replace": "\\1<%# Commands are formatted in triple backtick blocks, not terminal snippets. %>"},
"124": {"find": "(\\brunning[^:]*:[\\s\\n]*\\<code\\>[\\s\\n\\~]*\\$(?![^<]*<\\/pre>))", "replace": "\\1<%# We only include dollar signs in terminal snippet examples. %>"},
"125": {"find": "(\\brunning[^:]*:[\\s\\n]*`+[\\s\\n\\~]*\\$(?![^<]*<\\/pre>))", "replace": "\\1<%# We only include dollar signs in terminal snippet examples. %>"},
"126": {"find": "(\\bSERVICE-INSTANCE[\\s\\n](?![^<]*<\\/pre>))", "replace": "\\1<%# |SERVICE-INSTANCE-NAME| is preferred. %>"},
"127": {"find": "(\\bVERSION(?!-NUMBER)(?![^<]*<\\/pre>))", "replace": "\\1<%# |VERSION-NUMBER| is preferred. %>"},
"128": {"find": "(\\bversion[\\s\\n][\\d\\.]+(?![^<]*<\\/pre>))", "replace": "\\1<%# |v#| is the preferred style. %>"},
"129": {"find": "(\\bVersion[\\s\\n][\\d\\.]+(?![^<]*<\\/pre>))", "replace": "\\1<%# |v#| is the preferred style. %>"},
"130": {"find": "(\\bversions[\\s\\n][\\d\\.]+(?![^<]*<\\/pre>))", "replace": "\\1<%# |v#| is the preferred style. %>"},
"131": {"find": "(\\bVersions[\\s\\n][\\d\\.]+(?![^<]*<\\/pre>))", "replace": "\\1<%# |v#| is the preferred style. %>"},
"132": {"find": "(\\bVersions[\\s\\n]\\<\\= [\\d\\.]+(?![^<]*<\\/pre>))", "replace": "\\1<%# |v#| is the preferred style. %>"},
"133": {"find": "(\\bversions[\\s\\n]\\<\\= [\\d\\.]+(?![^<]*<\\/pre>))", "replace": "\\1<%# |v# or earlier| is the preferred style. %>"},
"134": {"find": "(\\bVersions[\\s\\n]\\>\\=[\\s\\n][\\d\\.]+(?![^<]*<\\/pre>))", "replace": "\\1<%# |v#| is the preferred style. %>"},
"135": {"find": "(\\bversions[\\s\\n]\\>\\=[\\s\\n][\\d\\.]+(?![^<]*<\\/pre>))", "replace": "\\1<%# |v# or earlier| is the preferred style. %>"},
"136": {"find": "(\\bYOUR-PRIVATE-KEY\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# |PATH-TO-PRIVATE-KEY| is preferred. %>"},
"137": {"find": "(\\bYOUR-VM\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# Specify the VM, as in |OPS-MANAGER-VM| or |STEMCELL-BASE-VM|. %>"},
"138": {"find": "(\\n```[^`]*[A-Z][A-Z]+[^`]*```(?![\\s\\n]*Where)(?![^<]*<\\/pre>))", "replace": "\\1<%# Define any non-obvious placeholders present in the code snippet in the style of |Where PLACEHOLDER is...| %>"},
"139": {"find": "(\\sCVE-\\d{4}(?!.*\\n?([^\\[]*\\]|[^\\>]*\\<\\/a\\>)).*$(?![^<]*<\\/pre>))", "replace": "\\1<%# Link to the CVE page at tanzu.vmware.com/security or cve.mitre.org. %>"},
"140": {"find": "(##+[^\\n]*\\>\\s*[A-Z][a-z-]+ing\\b.*\\n\\n(.+\\n){1,}\\n+\\d\\.(?![^<]*<\\/pre>))", "replace": "\\1<%# Procedure headers use imperatives, not gerunds. %>"},
"141": {"find": "(##+\\s*\\d\\.(?![^<]*<\\/pre>))", "replace": "\\1<%# Do not format a numbered step as a header. %>"},
"142": {"find": "(`.*[_\\A-Z].*`[\\s\\n]errand\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# Errands tend to be lowercase and they use dashes instead of underscores or spaces. %>"},
"143": {"find": "(`.*[_\\A-Z].*`[\\s\\n]errands\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# Errands tend to be lowercase and they use dashes instead of underscores or spaces. %>"},
"144": {"find": "(```[^<]*(<strong>|<em>|<h\\d>|<html>|<body>)(?![^<]*<\\/pre>)(?![^<]*<\\/pre>))", "replace": "\\1<%# Use unicode for HTML tags to ensure the tags show up in the snippet. |&lt;| for |<| and |&gt;| for |>|. %>"},
"145": {"find": "(`kubectl`(?![^<]*<\\/pre>))", "replace": "\\1<%# Do not format |kubectl| as code. %>"},
"146": {"find": "(`pdc`[\\s\\n]CLI tool\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# |<%= vars.product_abbr %> CLI tool| is preferred. %>"},
"147": {"find": "(`pdc`[\\s\\n]cli tool\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# |<%= vars.product_abbr %> CLI tool| is preferred. %>"},
"148": {"find": "(`pdc`[\\s\\n]CLI Tool\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# |<%= vars.product_abbr %> CLI tool| is preferred. %>"},
"149": {"find": "(^[\\s]*(?!\\<li\\>)[^\\<]*\\<a href=.#[^\\>]*.>(?![^\\.]*\\n?[^\\.]*(above|below|earlier|previously|before|later)).*$(?![^<]*<\\/pre>))", "replace": "\\1<%# After giving the anchor, state whether it is |above| or |below|. %>"},
"150": {"find": "(^[^\\n#]+#{2,6}(?![^<]*<\\/pre>))", "replace": "\\1<%# Delete any whitespace or other characters before this header. %>"},
"151": {"find": "(^\\[[^\\]]*\\]\\(#[^\\)]*\\)(?![^\\.]*\\n?[^\\.]*(above|below|earlier|previously|before|later)).*$(?![^<]*<\\/pre>))", "replace": "\\1<%# After giving the anchor, state whether it is |above| or |below|. %>"},
"152": {"find": "(^##\\s*[A-Z](?!(reaking Changes|eatures|aintenance Changes|ecurity Fix|esolved Issue|nown Issue|ompatibility|ackages)).*$(?![^<]*<\\/pre>))", "replace": "\\1<%# Make this header an anchor unless the subnav is unusually long. %>"},
"153": {"find": "(^###\\s*[A-Z](?!(reaking Changes|eatures|aintenance Changes|ecurity Fix|esolved Issue|nown Issue|ompatibility|ackages)).*$(?![^<]*<\\/pre>))", "replace": "\\1<%# Make this header an anchor unless the subnav is unusually long. %>"},
"154": {"find": "(Amazon documentation\\](?![^<]*<\\/pre>))", "replace": "\\1<%# The xref link name must be |AWS documentation|. %>"},
"155": {"find": "(docs-pcf-staging.cfapps.io.*$(?![^<]*<\\/pre>))", "replace": "\\1<%# Do not link to staging versions of the docs. %>"},
"156": {"find": "(html#[a-z-]*\\)[\\s\\n]above\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# Delete |above|: the reference is in another topic. %>"},
"157": {"find": "(html#[a-z-]*\\)[\\s\\n]below\\b(?![^<]*<\\/pre>))", "replace": "\\1<%# Delete |below|: the reference is in another topic. %>"},
"158": {"find": "(PATH-TO-MANIFEST[^\\.](?![^<]*<\\/pre>))", "replace": "\\1<%# Include the file extension, as in |PATH-TO-MANIFEST.yml|. %>"},
"159": {"find": "(PATH-TO-VARIABLES[^\\.](?![^<]*<\\/pre>))", "replace": "\\1<%# Include the file extension, as in |PATH-TO-VARIABLES.yml|. %>"},
"160": {"find": "(Where `[A-Za-z]*_(?![^<]*<\\/pre>))", "replace": "\\1<%# Use dashes for spacing in placeholders, not underscores.  %>"},

// Comment on Markdown tags between HTML tags.

"164": {"find": "(__(?=[^<]*<\\/))", "replace": "\\1<%# Do not use Markdown tags inside HTML tags. %>"},
"165": {"find": "(\\!\\[(?=[^<]*<\\/))", "replace": "\\1<%# Do not use Markdown tags inside HTML tags. %>"},
"166": {"find": "(\\[.*\\]\\(.*\\)(?=[^<]*<\\/))", "replace": "\\1<%# Do not use Markdown tags inside HTML tags. %>"},
"167": {"find": "(\\*\\*(?=[^<]*<\\/))", "replace": "\\1<%# Do not use Markdown tags inside HTML tags. %>"},
"168": {"find": "(`(?=[^<]*<\\/))", "replace": "\\1<%# Do not use Markdown tags inside HTML tags. %>"},

// Comment on style errors outside code.

"172": {"find": "(---\\n\\n[^#\\n]*(?=(#[^#]|###))(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The first header must be ## -- no smaller, no larger. %>"},
"173": {"find": "(,(?=[\\s\\n]then[^\\.]*\\.\\n)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider deleting |then| or writing |and| after the comma. %>"},
"174": {"find": "(:\\n[\\*\\+\\-]\\s(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Insert an empty newline before a bullet list. %>"},
"175": {"find": "((^|[^r][\\s\\n])PCF(?![\\s\\n](Dev|Development|Solutions))(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.platform_old %>"},
"176": {"find": "((^|[^r][\\s\\n])Pivotal[\\s\\n]Cloud[\\s\\n]Foundry(?![\\s\\n](Dev|Development|Solutions))(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.platform_old %>"},
"177": {"find": "((^|[^r][\\s\\n])Pivotal[\\s\\n]Platform\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.platform_name %>"},
"178": {"find": "((fix|fixes|issue|issues|this[\\s\\n]release):\\n\\n\\*\\s[^\\*](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# In release notes, each feature, KI, and resolved issue needs a run-in heading. %>"},
"179": {"find": "([\\[\\>\\s\\n][a-z0-9\\-\\._]+\\/[a-z0-9\\-\\._]+(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# If this is a URL then you likely need to present it per xref rules: https://docs-wiki.cfapps.io/wiki/style/cross-ref-style.html %>"},
"180": {"find": "([\\s\\.]\\d+\\-\\d+(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use &ndash; for a range, not a regular dash. %>"},
"181": {"find": "([\\s\\n](?!\\ba\\b|\\bany\\b|\\bthat\\b|\\bthe\\b|\\bthis\\b)[a-z-]*[\\s\\n]shutdown\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The noun is |shutdown|. The action is |shut down|. %>"},
"182": {"find": "([\\s\\n]\\.html\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |HTML| is preferred. %>"},
"183": {"find": "([\\s\\n]\\.zip\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |ZIP| is preferred. %>"},
"184": {"find": "([\\s\\n]\\/[^\\s\\/\\*](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider enclosing in code tags. %>"},
"185": {"find": "([\\s\\n]\\d{1,2}.\\d{1,2}\\.\\d{1,2}(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Version numbers are written as |v1.11.11| unless brand styling dictates otherwise. %>"},
"186": {"find": "([\\s\\n]e\\.g:[\\s\\n](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |For example| is preferred. %>"},
"187": {"find": "([\\s\\n]e\\.g[\\s\\n](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |For example| is preferred. %>"},
"188": {"find": "([\\s\\n]e\\.g\\.,[\\s\\n](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |For example| is preferred. %>"},
"189": {"find": "([\\s\\n]e\\.g\\.:[\\s\\n](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |For example| is preferred. %>"},
"190": {"find": "([\\s\\n]e\\.g\\.[\\s\\n](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |For example| is preferred. %>"},
"191": {"find": "([\\s\\n]eg\\.:[\\s\\n](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |For example| is preferred. %>"},
"192": {"find": "([\\s\\n]eg\\.[\\s\\n](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |For example| is preferred. %>"},
"193": {"find": "([\\w][\\s\\n]{0,1}On-demand(?!(\\n|\\s)(Broker|broker))(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |On-Demand| is preferred -- capitalize the |D| if you capitalized the |O|. %>"},
"194": {"find": "([^:]\\n\\n\\s*\\d\\.\\sRun:(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Write what this command does. As in |Do x by running:| or |To do x, run:|. %>"},
"195": {"find": "([^\\.\\*\\+:-]*,[^\\.\\*\\+:-]*,[^\\.\\*\\+:-]*,[^\\.\\*\\+:-]*,[^\\.\\*\\+:-]*,(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# If a list, maybe reformat it as bullets. If this is a rambling sentence, break it up into smaller sentences. %>"},
"196": {"find": "([^\\.\\n]\\s\\bChart\\b(?=[\\s\\n][\\.a-z]+[\\s\\n][\\.a-z]+)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |chart| is preferred unless part of a pronoun. %>"},
"197": {"find": "([^\\.`]yaml\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |YAML| is preferred. %>"},
"198": {"find": "([^\\s\\n]\\<\\/em\\>(?![\\s\\n\\<\\.:,-])(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# A space is likely missing here. %>"},
"199": {"find": "([^\\s\\n]\\<\\/strong\\>(?![\\s\\n\\<\\.:,-])(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# A space is likely missing here. %>"},
"200": {"find": "([^\\s\\n\\>]\\<em\\>(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# A space is likely missing here. %>"},
"201": {"find": "([^\\s\\n\\>]\\<strong\\>(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# A space is likely missing here. %>"},
"202": {"find": "([^A-Za-z0-9\\s][^A-Za-z0-9\\s][^A-Za-z0-9\\s][\\s\\n]character\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Write the word for the special character so that screen readers can read it. %>"},
"203": {"find": "([^A-Za-z0-9\\s][^A-Za-z0-9\\s][^A-Za-z0-9\\s][\\s\\n]characters\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Write the word for the special character so that screen readers can read it. %>"},
"204": {"find": "([^bo][\\s\\n]button\\b(?![^\\[\\(]*[\\]\\)])(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Delete |button| if redundant. For example, write |click Save| instead of |Click the Save button|. %>"},
"205": {"find": "([^f][\\s\\n]the[\\s\\n]following:(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# To introduce steps just write |To do x:| %>"},
"206": {"find": "([^l][\\s\\n]Compliance[\\s\\n]Scanner(?![^\\(]*\\)[\\s\\n]%\\>)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"207": {"find": "([^l][\\s\\n]Concourse(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"208": {"find": "([^l][\\s\\n]Developer[\\s\\n]Console(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"209": {"find": "([^l][\\s\\n]Event[\\s\\n]Alerts(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"210": {"find": "([^l][\\s\\n]FIM(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_abbr or, if in alt text, #{vars.product_abbr} %>"},
"211": {"find": "([^l][\\s\\n]GemFire(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"212": {"find": "([^l][\\s\\n]Greenplum(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"213": {"find": "([^l][\\s\\n]Healthwatch(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"214": {"find": "([^l][\\s\\n]IPsec(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"215": {"find": "([^l][\\s\\n]Isolation[\\s\\n]Segment(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"216": {"find": "([^l][\\s\\n]On-Demand[\\s\\n]Services[\\s\\n]SDK(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"217": {"find": "([^l][\\s\\n]on-demand[\\s\\n]services[\\s\\n]SDK(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"218": {"find": "([^l][\\s\\n]On[\\s\\n]Demand[\\s\\n]Services[\\s\\n]SDK(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"219": {"find": "([^l][\\s\\n]on[\\s\\n]demand[\\s\\n]services[\\s\\n]SDK(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"220": {"find": "([^l][\\s\\n]Ops[\\s\\n]Manager(?![\\s\\n][Dd]irector)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.ops_manager or, if in alt text, #{vars.ops_manager} %>"},
"221": {"find": "([^l][\\s\\n]Postgre[Ss](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"222": {"find": "([^l][\\s\\n]Push[\\s\\n]Notification(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"223": {"find": "([^l][\\s\\n]Service[\\s\\n]Instance[\\s\\n]Manager(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"224": {"find": "([^l][\\s\\n]Single[\\s\\n]Sign-On(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"225": {"find": "([^r][\\s\\n]image[\\s\\n]registry\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# If generic, |container image registry| on first use. If VMware-provided, |Tanzu Network Registry| on first use. In both cases, |registry| thereafter except where risking ambiguity. %>"},
"226": {"find": "([^r][a-z][\\s\\n]Tanzu[\\s\\n]Network(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_network or, if in alt text, #{vars.product_network} %>"},
"227": {"find": "([^r][a-z][\\s\\n]Tanzu[\\s\\n]network(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_network or, if in alt text, #{vars.product_network} %>"},
"228": {"find": "([^s][\\s\\n]marketplace\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Marketplace| is preferred. %>"},
"229": {"find": "([^u][^b][\\s\\n]Maestro\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not shorten |CredHub Maestro| to just |Maestro| %>"},
"230": {"find": "([A-Z][A-Z]+'s\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# To make an abbreviation a plural, just add a lowercase |s| without an apostrophe. %>"},
"231": {"find": "([a-z]*[\\s\\n]or[\\s\\n][a-z]*[\\s\\n]not\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"232": {"find": "([A-Z]+[a-z]+[\\s\\n]style(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Check if |style| needs a hyphen. %>"},
"233": {"find": "([a-z`\\*]+,[\\s\\n][a-z`\\*]+[\\s\\n]and[\\s\\n][a-z`\\*]+(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Insert the Oxford comma if it is missing here. %>"},
"234": {"find": "([a-z`\\*]+,[\\s\\n][a-z`\\*]+[\\s\\n]or[\\s\\n][a-z`\\*]+(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Insert the Oxford comma if it is missing here. %>"},
"235": {"find": "([A-Za-z][a-z]+teen\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use numerals for numbers greater than nine. %>"},
"236": {"find": "(\\(Go\\)[\\s\\n]Router\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Gorouter| is preferred. %>"},
"237": {"find": "(\\(s\\)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not combine a singular and a plural. Maybe write |one or more| instead. %>"},
"238": {"find": "(\\|[\\s\\n]*\\*(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Put the asterisk in superscript tags. %>"},
"239": {"find": "(\\b[^-]check[\\s\\n](?!mark)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |verify|, |ensure|, and |confirm| are all preferred. %>"},
"240": {"find": "(\\b[a-z]\\.\\s[A-Z](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Write all ordered steps as numbers. %>"},
"241": {"find": "(\\ba[\\s\\n]deploy\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |a deployment| is preferred. %>"},
"242": {"find": "(\\bA[\\s\\n]deploy\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |A deployment| is preferred. %>"},
"243": {"find": "(\\ba[\\s\\n]given\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"244": {"find": "(\\ba[\\s\\n]previous[\\s\\n]step\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Write |earlier in this procedure| or, if referring to a separate procedure, link to it. %>"},
"245": {"find": "(\\ba[\\s\\n]RSU\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |an RSU| is preferred. %>"},
"246": {"find": "(\\bA[\\s\\n]RSU\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |an RSU| is preferred. %>"},
"247": {"find": "(\\ba[\\s\\n]SQL\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |an SQL| is preferred. %>"},
"248": {"find": "(\\babort\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Where practical, |stop| is preferred. Other alternatives: |cancel|, |halt prematurely|, |end prematurely|, |stop prematurely|. %>"},
"249": {"find": "(\\bAbort\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Where practical, |Stop| is preferred. Other alternatives: |Cancel|, |Halt prematurely|, |End prematurely|, |Stop prematurely|. %>"},
"250": {"find": "(\\baddon\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |add-on| is preferred. %>"},
"251": {"find": "(\\bADFS\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Write |AD FS| per the Microsoft preference. %>"},
"252": {"find": "(\\badministrate\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |administer| is preferred or, ideally, a plainer synonym such as |manage|. %>"},
"253": {"find": "(\\bAdministrate\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Administer| is preferred or, ideally, a plainer synonym such as |Manage|. %>"},
"254": {"find": "(\\badministrated\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |administered| is preferred or, ideally, a plainer synonym such as |managed|. %>"},
"255": {"find": "(\\badministrates\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |administers| is preferred or, ideally, a plainer synonym such as |manages|. %>"},
"256": {"find": "(\\badministrating\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |administering| is preferred or, ideally, a plainer synonym such as |managing|. %>"},
"257": {"find": "(\\bAdministrating\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Administering| is preferred or, ideally, a plainer synonym such as |Managing|. %>"},
"258": {"find": "(\\badministrator\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |admin| is preferred. %>"},
"259": {"find": "(\\bAdministrator\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Admin| is preferred. %>"},
"260": {"find": "(\\bAdministrators\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Admins| is preferred. %>"},
"261": {"find": "(\\badministrators\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |admins| is preferred. %>"},
"262": {"find": "(\\baffect\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider using a more precise verb. %>"},
"263": {"find": "(\\bafter[\\s\\n]you[\\s\\n]are[\\s\\n]satisfied\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"264": {"find": "(\\bAfter[\\s\\n]you[\\s\\n]are[\\s\\n]satisfied\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"265": {"find": "(\\bAI\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |application instance| is preferred. %>"},
"266": {"find": "(\\bair-gap\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The noun is |air gap|. %>"},
"267": {"find": "(\\bair[\\s\\n]gapped\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |air-gapped| is preferred. %>"},
"268": {"find": "(\\bAir[\\s\\n]gapped\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Air-gapped| is preferred. %>"},
"269": {"find": "(\\bairgap\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |air-gap| is preferred. %>"},
"270": {"find": "(\\bAirgap\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Air-gap| is preferred. %>"},
"271": {"find": "(\\bairgapped\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |air-gapped| is preferred. %>"},
"272": {"find": "(\\bAirgapped\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Air-gapped| is preferred. %>"},
"273": {"find": "(\\balert[\\s\\n]box\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dialog box| is preferred. %>"},
"274": {"find": "(\\bAlert[\\s\\n]box\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dialog box| is preferred. %>"},
"275": {"find": "(\\bAlert[\\s\\n]window\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dialog box| is preferred. %>"},
"276": {"find": "(\\balert[\\s\\n]window\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dialog box| is preferred. %>"},
"277": {"find": "(\\ball[\\s\\n]the[\\s\\n]necessary\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |all| might be redundant %>"},
"278": {"find": "(\\bAll[\\s\\n]the[\\s\\n]necessary\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |All| might be redundant %>"},
"279": {"find": "(\\ballow[\\s\\n]list\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |allowlist| is preferred. No space. %>"},
"280": {"find": "(\\balpha-numeric\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |alphanumeric| is preferred. %>"},
"281": {"find": "(\\bAmazon[\\s\\n]Web[\\s\\n]Service\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Amazon Web Services| on first use and |AWS| thereafter. %>"},
"282": {"find": "(\\bAmazon[\\s\\n]Web[\\s\\n]Services(?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |AWS| after the first use. %>"},
"283": {"find": "(\\ban[\\s\\n]earlier[\\s\\n]step\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Write |earlier in this procedure| or, if referring to a separate procedure, link to it. %>"},
"284": {"find": "(\\ban[\\s\\n]UAA\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |a UAA| is preferred. %>"},
"285": {"find": "(\\bAn[\\s\\n]UAA\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |A UAA| is preferred. %>"},
"286": {"find": "(\\band\\/or\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |or| is preferred. %>"},
"287": {"find": "(\\banti-virus\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |antivirus| is preferred. %>"},
"288": {"find": "(\\bapi\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |API| is preferred. %>"},
"289": {"find": "(\\bApi\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |API| is preferred. %>"},
"290": {"find": "(\\bapp[\\s\\n]container\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |application container| is preferred. %>"},
"291": {"find": "(\\bApp[\\s\\n]Developer\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |app developer| is preferred. %>"},
"292": {"find": "(\\bApp[\\s\\n]manager\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Apps Manager| is preferred. %>"},
"293": {"find": "(\\bapp[\\s\\n]runtime(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.app_runtime_full or, if in alt text, #{vars.app_runtime_full} %>"},
"294": {"find": "(\\bapplication[\\s\\n]developer\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |app developer| is preferred. %>"},
"295": {"find": "(\\bapplication[\\s\\n]program[\\s\\n]interface\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |API| is preferred. %>"},
"296": {"find": "(\\bapplication[\\s\\n]security[\\s\\n]group\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |ASG| is preferred. %>"},
"297": {"find": "(\\bApplication[\\s\\n]Transformation\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |App Modernization| is preferred. %>"},
"298": {"find": "(\\bApplication[\\s\\n]VM\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |host VM| is preferred. %>"},
"299": {"find": "(\\bapplications(?![\\s\\n][Mm]anager)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |apps| is preferred. %>"},
"300": {"find": "(\\bApplications(?![\\s\\n][Mm]anager)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Apps| is preferred. %>"},
"301": {"find": "(\\bAppTX\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |App Modernization| is preferred. %>"},
"302": {"find": "(\\bApr\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |April| is preferred. %>"},
"303": {"find": "(\\baren't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"304": {"find": "(\\bartefact\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |artifact| is preferred. %>"},
"305": {"find": "(\\bArtefact\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Artifact| is preferred. %>"},
"306": {"find": "(\\bassist[\\s\\n]with\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Simply |help| is preferred. %>"},
"307": {"find": "(\\bassistance\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |help| is preferred. %>"},
"308": {"find": "(\\bassists[\\s\\n]with\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Simply |helps| is preferred. %>"},
"309": {"find": "(\\bAssuming\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |If| might be better here. %>"},
"310": {"find": "(\\bat[\\s\\n]the[\\s\\n]moment\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# 1st preference: delete. 2nd preference: replace these words with |currently|. %>"},
"311": {"find": "(\\bAt[\\s\\n]the[\\s\\n]moment\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# 1st preference: delete. 2nd preference: replace these words with |Currently|. %>"},
"312": {"find": "(\\bat[\\s\\n]the[\\s\\n]time[\\s\\n]of[\\s\\n]writing\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# 1st preference: delete. 2nd preference: replace these words with |currently|. %>"},
"313": {"find": "(\\bAt[\\s\\n]the[\\s\\n]time[\\s\\n]of[\\s\\n]writing\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# 1st preference: delete. 2nd preference: replace these words with |Currently|. %>"},
"314": {"find": "(\\bAug\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |August| is preferred. %>"},
"315": {"find": "(\\bauth\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |authentication| is preferred. %>"},
"316": {"find": "(\\bauto[\\s\\n]TLS\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Auto TLS| is the preferred casing. %>"},
"317": {"find": "(\\bavailability[\\s\\n]zone[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |AZ| after the first use. %>"},
"318": {"find": "(\\bAvailability[\\s\\n]zone[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |AZ| after the first use. %>"},
"319": {"find": "(\\bAvailability[\\s\\n]Zone\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |availability zone (AZ)| on first use and |AZ| thereafter. %>"},
"320": {"find": "(\\bavailability[\\s\\n]zones[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |AZ| after the first use. %>"},
"321": {"find": "(\\bAvailability[\\s\\n]zones[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |AZ| after the first use. %>"},
"322": {"find": "(\\bAWS[\\s\\n]S3(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Amazon S3| is preferred. %>"},
"323": {"find": "(\\bback-up\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The noun is |backup| and the verb is |back up|. %>"},
"324": {"find": "(\\bBack-up\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The noun is |backup| and the verb is |back up|. %>"},
"325": {"find": "(\\bbe[\\s\\n][a-z-]*ed[\\s\\n]by\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Active voice is preferred. %>"},
"326": {"find": "(\\bbe[\\s\\n]sufficient\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |suffice| is punchier. %>"},
"327": {"find": "(\\bbe[\\s\\n]sure\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? |ensure| or even |before| might be better. %>"},
"328": {"find": "(\\bBe[\\s\\n]sure\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? |Ensure| or even |Before| might be better. %>"},
"329": {"find": "(\\bBefore\\b[^,]*,[\\s\\n]first\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |first| is likely redundant. %>"},
"330": {"find": "(\\bbefore\\b[^,]*,[\\s\\n]first\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |first| is likely redundant. %>"},
"331": {"find": "(\\bBest[\\s\\n]Practices\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Best Practice sections are discouraged. Check if the material could be placed somewhere else. %>"},
"332": {"find": "(\\bBeta\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |beta| is preferred. %>"},
"333": {"find": "(\\bBETA\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |beta| is preferred. %>"},
"334": {"find": "(\\bBig[\\s\\n]Data\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |big data| is preferred. %>"},
"335": {"find": "(\\bblack-list\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred noun: |denylist|. Other alternative: |banned list|. Preferred verb: |block|. Other alternatives: |deny|, |ban|. %>"},
"336": {"find": "(\\bBlack-list\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred noun: |Denylist|. Other alternative: |Banned list|. Preferred verb: |Block|. Other alternatives: |Deny|, |Ban|. %>"},
"337": {"find": "(\\bBlack-out\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred verb: |Restrict|. Preferred noun: |Restriction|. Other alternative noun: |Outage|. %>"},
"338": {"find": "(\\bblack-out\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred verb: |restrict|. Preferred noun: |restriction|. Other alternative noun: |outage|. %>"},
"339": {"find": "(\\bblack[\\s\\n]list\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred noun: |denylist|. Other alternative: |banned list|. Preferred verb: |block|. Other alternatives: |deny|, |ban|. %>"},
"340": {"find": "(\\bblacklist\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred noun: |Denylist|. Other alternative: |Banned list|. Preferred verb: |Block|. Other alternatives: |Deny|, |Ban|. %>"},
"341": {"find": "(\\bBlackout\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred verb: |Restrict|. Preferred noun: |Restriction|. Other alternative noun: |Outage|. %>"},
"342": {"find": "(\\bblackout\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred verb: |restrict|. Preferred noun: |restriction|. Other alternative noun: |outage|. %>"},
"343": {"find": "(\\bblob[\\s\\n]store\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |blobstore| is preferred. %>"},
"344": {"find": "(\\bBlue-Green[\\s\\n]deployment\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |blue-green deployment| is preferred. %>"},
"345": {"find": "(\\bboot[\\s\\n]the\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |start up the| is preferred. %>"},
"346": {"find": "(\\bBOSH-init\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |bosh-init| is preferred. %>"},
"347": {"find": "(\\bBosh(?![\\n\\s-]lite)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |BOSH| is preferred. %>"},
"348": {"find": "(\\bbosh[\\s\\n](?![\\n\\s-]lite)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |BOSH| is preferred. %>"},
"349": {"find": "(\\bBOSH[\\s\\n]director\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |BOSH Director| is preferred. %>"},
"350": {"find": "(\\bBOSH[\\s\\n]Health[\\s\\n]Monitor[\\s\\n]metrics\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |BOSH health metrics| is preferred. %>"},
"351": {"find": "(\\bbosh[\\s\\n]lite\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |BOSH-Lite| is preferred. %>"},
"352": {"find": "(\\bBOSH[\\s\\n]lite\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |BOSH-Lite| is preferred. %>"},
"353": {"find": "(\\bBOSH[\\s\\n]Lite\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |BOSH-Lite| is preferred. %>"},
"354": {"find": "(\\bBOSH[\\s\\n]metrics\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |BOSH health metrics| is preferred. %>"},
"355": {"find": "(\\bBOSH[\\s\\n]System[\\s\\n]Metrics\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |BOSH health metrics| is preferred. %>"},
"356": {"find": "(\\bBPM\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |bpm| is preferred as this is the BOSH docs style. %>"},
"357": {"find": "(\\bBrokerpak\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Only capitalize |brokerpak| when it is in a title or starts a sentence. %>"},
"358": {"find": "(\\bBrokerpaks\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Only capitalize |brokerpaks| when it is in a title or starts a sentence. %>"},
"359": {"find": "(\\bbug\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |issue| is preferred. %>"},
"360": {"find": "(\\bBug\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Issue| is preferred. %>"},
"361": {"find": "(\\bbugs\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |issue| is preferred. %>"},
"362": {"find": "(\\bBugs\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Issue| is preferred. %>"},
"363": {"find": "(\\bbump\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |update| is preferred. %>"},
"364": {"find": "(\\bBump\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Update| is preferred. %>"},
"365": {"find": "(\\bBumped\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Updated| is preferred. %>"},
"366": {"find": "(\\bbumped\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |updated| is preferred. %>"},
"367": {"find": "(\\bbumps\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |updates| is preferred. %>"},
"368": {"find": "(\\bBumps\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Updates| is preferred. %>"},
"369": {"find": "(\\bcan't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"370": {"find": "(\\bcan[\\s\\n]be\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider switching to active voice. %>"},
"371": {"find": "(\\bcan[\\s\\n]get[\\s\\n][a-z-]*ed\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |could be| is likely the correct grammar here if sticking with passive voice. %>"},
"372": {"find": "(\\bcatalogue\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |catalog| is preferred. %>"},
"373": {"find": "(\\bcauses[\\s\\n]downtime[\\s\\n]of[\\s\\n]the\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |causes downtime for the| is preferred. %>"},
"374": {"find": "(\\bcauses[\\s\\n]downtime[\\s\\n]on[\\s\\n]the\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |causes downtime for the| is preferred. %>"},
"375": {"find": "(\\bcauses[\\s\\n]downtime[\\s\\n]to[\\s\\n]the\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |causes downtime for the| is preferred. %>"},
"376": {"find": "(\\bCC[\\s\\n]API\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |CAPI| is preferred. %>"},
"377": {"find": "(\\bCell[\\s\\n]VM\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |host VM| is preferred. %>"},
"378": {"find": "(\\bcert\\b[^-`](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |certificate| is preferred. %>"},
"379": {"find": "(\\bcertificate[\\s\\n]authority[\\s\\n]certificate[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |certificate authority (CA) certificate| on first use. |CA certificate| thereafter. %>"},
"380": {"find": "(\\bCertificate[\\s\\n]Authority[\\s\\n]certificate[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |certificate authority (CA) certificate| on first use. |CA certificate| thereafter. %>"},
"381": {"find": "(\\bcertificate[\\s\\n]authority[\\s\\n]certificates[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |certificate authority (CA) certificate| on first use. |CA certificate| thereafter. %>"},
"382": {"find": "(\\bCertificate[\\s\\n]Authority[\\s\\n]certificates[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |certificate authority (CA) certificate| on first use. |CA certificate| thereafter. %>"},
"383": {"find": "(\\bcertificate[\\s\\n]signing[\\s\\n]request[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |CSR| after first use. %>"},
"384": {"find": "(\\bCertificate[\\s\\n]signing[\\s\\n]request[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |CSR| after first use. %>"},
"385": {"find": "(\\bCertificate[\\s\\n]Signing[\\s\\n]Request[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |CSR| after first use. %>"},
"386": {"find": "(\\bcertificate[\\s\\n]signing[\\s\\n]requests[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |CSR| after first use. %>"},
"387": {"find": "(\\bCertificate[\\s\\n]signing[\\s\\n]requests[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |CSR| after first use. %>"},
"388": {"find": "(\\bCertificate[\\s\\n]Signing[\\s\\n]Requests[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |CSR| after first use. %>"},
"389": {"find": "(\\bcerts\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |certificates| is preferred. %>"},
"390": {"find": "(\\bCF-compatible[\\s\\n]CNB[\\s\\n]buildpack\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |CF-compatible CNB| is preferred. %>"},
"391": {"find": "(\\bCF[\\s\\n](?![Cc][Ll][Ii])(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Foundry| is preferred. %>"},
"392": {"find": "(\\bcf[\\s\\n]cli\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The brand name is shortened as |cf CLI|. %>"},
"393": {"find": "(\\bCF[\\s\\n]CLI\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The brand name is shortened as |cf CLI|. %>"},
"394": {"find": "(\\bcf[\\s\\n]push\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# If code, add code tags and sandwich between |the| and |command|. %>"},
"395": {"find": "(\\bchart[\\s\\n]museum\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |ChartMuseum| is preferred. %>"},
"396": {"find": "(\\bChart[\\s\\n]Museum\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |ChartMuseum| is preferred. %>"},
"397": {"find": "(\\bchartmuseum\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |ChartMuseum| is preferred. %>"},
"398": {"find": "(\\bcheck[\\s\\n]box\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |checkbox| is preferred. %>"},
"399": {"find": "(\\bCheck\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Verify|, |Ensure|, and |Confirm| are all preferred. %>"},
"400": {"find": "(\\bcheckmark\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |check mark| is preferred. %>"},
"401": {"find": "(\\bchooses[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider if |choose| is redundant. %>"},
"402": {"find": "(\\bClam[\\s\\n]av\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |ClamAV| is preferred. If referring to Pivotal Anti-Virus, use <%= vars.product_full or, if in alt text, #{vars.product_full}. %>"},
"403": {"find": "(\\bClam[\\s\\n]AV\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |ClamAV| is preferred. If referring to Pivotal Anti-Virus, use <%= vars.product_full or, if in alt text, #{vars.product_full}. %>"},
"404": {"find": "(\\bClamav\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |ClamAV| is preferred. If referring to Pivotal Anti-Virus, use <%= vars.product_full or, if in alt text, #{vars.product_full}. %>"},
"405": {"find": "(\\bclean-up\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The verb is |clean up|. The noun and adjective are both |cleanup|. %>"},
"406": {"find": "(\\bclear[\\s\\n]text\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Unencrypted text is |plaintext|. Unformatted text is |plain text|. %>"},
"407": {"find": "(\\bClear[\\s\\n]text\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Unencrypted text is |plaintext|. Unformatted text is |plain text|. %>"},
"408": {"find": "(\\bclick[\\s\\n][A-Z](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Embolden the names of UI elements. %>"},
"409": {"find": "(\\bClick[\\s\\n][A-Z](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Embolden the names of UI elements. %>"},
"410": {"find": "(\\bclick[\\s\\n]on\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |click| is preferred. %>"},
"411": {"find": "(\\bclick[\\s\\n]the[\\s\\n][A-Z](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Embolden the names of UI elements. %>"},
"412": {"find": "(\\bClick[\\s\\n]the[\\s\\n][A-Z](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Embolden the names of UI elements. %>"},
"413": {"find": "(\\bcloud-native-buildpack\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Native Buildpack| is preferred. %>"},
"414": {"find": "(\\bCloud-Native-buildpack\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Native Buildpack| is preferred. %>"},
"415": {"find": "(\\bCloud-Native-Buildpack\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Native Buildpack| is preferred. %>"},
"416": {"find": "(\\bcloud-native[\\s\\n]application[\\s\\n]bundle\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Native Application Bundle| has no hyphen and is capitalized. Shorten to |CNAB| after first use. %>"},
"417": {"find": "(\\bCloud-native[\\s\\n]application[\\s\\n]bundle\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Native Application Bundle| has no hyphen and is capitalized. Shorten to |CNAB| after first use. %>"},
"418": {"find": "(\\bCloud-native[\\s\\n]Buildpack\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Native Buildpack| is preferred. %>"},
"419": {"find": "(\\bCloud-Native[\\s\\n]Buildpack\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Native Buildpack| is preferred. %>"},
"420": {"find": "(\\bCloud-Native[\\s\\n]buildpack\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Native Buildpack| is preferred. %>"},
"421": {"find": "(\\bCloud[\\s\\n]Controller[\\s\\n]API\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# 1st use: |Cloud Foundry API (CAPI)|. Subsequent uses: |CAPI|. %>"},
"422": {"find": "(\\bcloud[\\s\\n]controller\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Controller| is preferred. %>"},
"423": {"find": "(\\bCloud[\\s\\n]Foundries\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Foundry| has no plural. |Cloud Foundry deployments| is likely what is meant. %>"},
"424": {"find": "(\\bcloud[\\s\\n]foundries\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Foundry| has no plural. |Cloud Foundry deployments| is likely what is meant. %>"},
"425": {"find": "(\\bCloud[\\s\\n]foundries\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Foundry| has no plural. |Cloud Foundry deployments| is likely what is meant. %>"},
"426": {"find": "(\\bCloud[\\s\\n]Foundry[\\s\\n]API(?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |CAPI| after the first use. %>"},
"427": {"find": "(\\bCloud[\\s\\n]Foundry[\\s\\n]Organisation\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Foundry org| or just |org| is preferred. %>"},
"428": {"find": "(\\bCloud[\\s\\n]Foundry[\\s\\n]Organization\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Foundry org| or just |org| is preferred. %>"},
"429": {"find": "(\\bCloud[\\s\\n]Native-Buildpack\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Native Buildpack| is preferred. %>"},
"430": {"find": "(\\bCloud[\\s\\n]Native-buildpack\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Native Buildpack| is preferred. %>"},
"431": {"find": "(\\bCloud[\\s\\n]native-Buildpack\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Native Buildpack| is preferred. %>"},
"432": {"find": "(\\bcloud[\\s\\n]native(?!(-|\\s)(buildpack|Buildpack|application[\\s\\n]bundle|Applicable[\\s\\n]Bundle))(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |cloud-native| is preferred. %>"},
"433": {"find": "(\\bCloud[\\s\\n]native[\\s\\n]application[\\s\\n]bundle\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Native Application Bundle| is capitalized. Shorten to |CNAB| after first use. %>"},
"434": {"find": "(\\bcloud[\\s\\n]native[\\s\\n]application[\\s\\n]bundle\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Native Application Bundle| is capitalized. Shorten to |CNAB| after first use. %>"},
"435": {"find": "(\\bcloud[\\s\\n]native[\\s\\n]buildpack\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Native Buildpack| is preferred. %>"},
"436": {"find": "(\\bCloud[\\s\\n]Native[\\s\\n]buildpack\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Native Buildpack| is preferred. %>"},
"437": {"find": "(\\bCloud[\\s\\n]Service[\\s\\n]Broker(?![\\s\\n]for)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"438": {"find": "(\\bCloud[\\s\\n]Service[\\s\\n]Broker[\\s\\n]for[\\s\\n]VMware[\\s\\n]Tanzu(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"439": {"find": "(\\bCloudController\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Controller| is preferred. %>"},
"440": {"find": "(\\bCloudformation\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |CloudFormation| is preferred. %>"},
"441": {"find": "(\\bCloudFoundry\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Foundry| is preferred %>"},
"442": {"find": "(\\bCNAB[\\s\\n]bundle\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Delete |bundle| -- it is already in the acronym |CNAB|. %>"},
"443": {"find": "(\\bCNAB[\\s\\n]Bundle\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Delete |Bundle| -- it is already in the acronym |CNAB|. %>"},
"444": {"find": "(\\bcollocate\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |co-locate| is now preferred. %>"},
"445": {"find": "(\\bcollocated\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |co-located| is now preferred. %>"},
"446": {"find": "(\\bcollocates\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |co-locates| is now preferred. %>"},
"447": {"find": "(\\bcollocating\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |co-locating| is preferred. %>"},
"448": {"find": "(\\bCollocating\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Co-locating| is preferred. %>"},
"449": {"find": "(\\bcolocate\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |co-locate| is now preferred. %>"},
"450": {"find": "(\\bcolocated\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |co-located| is now preferred. %>"},
"451": {"find": "(\\bcolocates\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |co-locates| is now preferred. %>"},
"452": {"find": "(\\bcolocating\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |co-locating| is preferred. %>"},
"453": {"find": "(\\bColocating\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Co-locating| is preferred. %>"},
"454": {"find": "(\\bcoming[\\s\\n]soon\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Only document what exists. There are legal ramifications to making promises. %>"},
"455": {"find": "(\\bcommand[\\s\\n]below\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |To X, run:| and |X by running:| are preferred. %>"},
"456": {"find": "(\\bCommand[\\s\\n]Line[\\s\\n]Interface\\b(?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |CLI| after first use. %>"},
"457": {"find": "(\\bCommand[\\s\\n]line[\\s\\n]interface\\b(?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |CLI| after first use. %>"},
"458": {"find": "(\\bcommand[\\s\\n]line[\\s\\n]interface\\b(?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |CLI| after first use. %>"},
"459": {"find": "(\\bcommand[\\s\\n]shell\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |shell| is preferred. %>"},
"460": {"find": "(\\bcompiletime\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |compile time| is preferred. %>"},
"461": {"find": "(\\bcomplete[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])procedure\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |follow| is preferred over |complete|. %>"},
"462": {"find": "(\\bComplete[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])procedure\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Follow| is preferred over |Complete|. %>"},
"463": {"find": "(\\bcomplete[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])procedures\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |follow| is preferred over |complete|. %>"},
"464": {"find": "(\\bComplete[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])procedures\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Follow| is preferred over |Complete|. %>"},
"465": {"find": "(\\bcomplete[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])steps\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |follow| is preferred over |complete|. %>"},
"466": {"find": "(\\bComplete[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])steps\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Follow| is preferred over |Complete|. %>"},
"467": {"find": "(\\bcomponent[\\s\\n]VM\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# All VMs are component VMs except for the host VMs. %>"},
"468": {"find": "(\\bconceivably\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"469": {"find": "(\\bConceivably\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"470": {"find": "(\\bConfig\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |config| is preferred. %>"},
"471": {"find": "(\\bConfirm[\\s\\n]if\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Confirm that| is better. %>"},
"472": {"find": "(\\bconfirm[\\s\\n]if\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |confirm that| is better. %>"},
"473": {"find": "(\\bcontainer[\\s\\n]networking\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |CF Networking| is preferred. %>"},
"474": {"find": "(\\bcontainer[\\s\\n]registry\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# If generic, |container image registry| on first use. If VMware-provided, |Tanzu Network Registry| on first use. In both cases, |registry| thereafter except where risking ambiguity. %>"},
"475": {"find": "(\\bContinuous[\\s\\n]Integration\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |continuous integration| is preferred. %>"},
"476": {"find": "(\\bcontrol-C\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Ctrl-C| is preferred. %>"},
"477": {"find": "(\\bControl-C\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Ctrl-C| is preferred. %>"},
"478": {"find": "(\\bcould've\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"479": {"find": "(\\bcouldn't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"480": {"find": "(\\bcpu\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |CPU| is preferred. %>"},
"481": {"find": "(\\bcredhub\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The CF component is named |CredHub| %>"},
"482": {"find": "(\\bCredhub\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The CF component is named |CredHub| %>"},
"483": {"find": "(\\bCSB\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_abbr or, if in alt text, #{vars.product_abbr} %>"},
"484": {"find": "(\\bcURL\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |cURL| is the project. |curl| is the CLI. %>"},
"485": {"find": "(\\bCustom[\\s\\n]resource[\\s\\n]definition[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |CRD| after first use. %>"},
"486": {"find": "(\\bCustom[\\s\\n]Resource[\\s\\n]Definition[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |CRD| after first use. %>"},
"487": {"find": "(\\bcustom[\\s\\n]resource[\\s\\n]definition[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |CRD| after first use. %>"},
"488": {"find": "(\\bdata[\\s\\n]set\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dataset| is preferred. %>"},
"489": {"find": "(\\bdata[\\s\\n]store\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |datastore| is preferred. %>"},
"490": {"find": "(\\bdatacenter\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |data center| is preferred. %>"},
"491": {"find": "(\\bDatacenter\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |data center| is preferred. %>"},
"492": {"find": "(\\bDate:[\\s\\n]X\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Missing the date? %>"},
"493": {"find": "(\\bdate:[\\s\\n]x\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Missing the date? %>"},
"494": {"find": "(\\bDate:[\\s\\n]x\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Missing the date? %>"},
"495": {"find": "(\\bdate:[\\s\\n]X\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Missing the date? %>"},
"496": {"find": "(\\bDB\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |database| is preferred. %>"},
"497": {"find": "(\\bDBs\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |databases| is preferred. %>"},
"498": {"find": "(\\bDec\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |December| is preferred. %>"},
"499": {"find": "(\\bdedicated[\\s\\n]VM[\\s\\n]plan\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dedicated-VM plan| is preferred. %>"},
"500": {"find": "(\\bDedicated[\\s\\n]VM[\\s\\n]plan\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dedicated-VM plan| is preferred. %>"},
"501": {"find": "(\\bDedicated[\\s\\n]VM[\\s\\n]Plan\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dedicated-VM plan| is preferred. %>"},
"502": {"find": "(\\bdedicated[\\s\\n]VM[\\s\\n]Plan\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dedicated-VM plan| is preferred. %>"},
"503": {"find": "(\\bdelimited\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |separated| is preferred. %>"},
"504": {"find": "(\\bDelimited\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Separated| is preferred. %>"},
"505": {"find": "(\\bdeny[\\s\\n]list\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |denylist| is preferred. No space. %>"},
"506": {"find": "(\\bdesire\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |want| is preferred. %>"},
"507": {"find": "(\\bdetails[\\s\\n]on\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |details about| is preferred. %>"},
"508": {"find": "(\\bDetails[\\s\\n]on\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Details about| is preferred. %>"},
"509": {"find": "(\\bdetermine\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |determine| has two meanings. Consider if the univocal |discover| or |verify| would be better. %>"},
"510": {"find": "(\\bDetermine\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Determine| has two meanings. Consider if the univocal |discover| or |verify| would be better. %>"},
"511": {"find": "(\\bDev[\\s\\n]Connect(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"512": {"find": "(\\bdevconnect(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"513": {"find": "(\\bDevconnect(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"514": {"find": "(\\bDevConnect(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"515": {"find": "(\\bdevelopment[\\s\\n]environment\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# If this simply refers to the user machine, |local machine| is preferred. If drawing a distinction from a production environment, leave as is. %>"},
"516": {"find": "(\\bdevops\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |DevOps| is preferred. %>"},
"517": {"find": "(\\bDevops\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |DevOps| is preferred. %>"},
"518": {"find": "(\\bdidn't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"519": {"find": "(\\bDiego[\\s\\n]BBS\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |BBS| is preferred. %>"},
"520": {"find": "(\\bDiego[\\s\\n]brain\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Diego Brain| is now preferred. %>"},
"521": {"find": "(\\bDiego[\\s\\n]cell\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Diego Cell| is now preferred. %>"},
"522": {"find": "(\\bDiego[\\s\\n]cells\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Diego Cells| is now preferred. %>"},
"523": {"find": "(\\bDigital[\\s\\n]Transformation\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |digital transformation| is preferred. %>"},
"524": {"find": "(\\bdisc\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |disk| is preferred. %>"},
"525": {"find": "(\\bdisk[\\s\\n]IO\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |disk I/O| is preferred. %>"},
"526": {"find": "(\\bdistro\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |distribution| is preferred. %>"},
"527": {"find": "(\\bdo[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])procedure\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |follow| is preferred over |do|. %>"},
"528": {"find": "(\\bDo[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])procedure\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Follow| is preferred over |Do|. %>"},
"529": {"find": "(\\bdo[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])procedures\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |follow| is preferred over |do|. %>"},
"530": {"find": "(\\bDo[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])procedures\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Follow| is preferred over |Do|. %>"},
"531": {"find": "(\\bdo[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])steps\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |follow| is preferred over |do|. %>"},
"532": {"find": "(\\bDo[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])steps\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Follow| is preferred over |Do|. %>"},
"533": {"find": "(\\bdo[\\s\\n]manual\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |manually| might be better. %>"},
"534": {"find": "(\\bDo[\\s\\n]manual\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Manually might be better. %>"},
"535": {"find": "(\\bdo[\\s\\n]operations\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |perform operations| or just |operate| might read better. %>"},
"536": {"find": "(\\bdoc\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |documentation| is preferred. %>"},
"537": {"find": "(\\bDocker[\\s\\n]trusted[\\s\\n]registry\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Docker Registry| is preferred. %>"},
"538": {"find": "(\\bdocker\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Docker| is preferred. %>"},
"539": {"find": "(\\bdocs(?!\\.\\w)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |documentation| is preferred. %>"},
"540": {"find": "(\\bDocs\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Documentation| is preferred. %>"},
"541": {"find": "(\\bdoesn't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"542": {"find": "(\\bdon't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"543": {"find": "(\\bDon't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"544": {"find": "(\\bDoppler[\\s\\n]server\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Doppler| is preferred. %>"},
"545": {"find": "(\\bDoppler[\\s\\n]VM\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Doppler| is preferred. %>"},
"546": {"find": "(\\bdoppler\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Doppler| is preferred. %>"},
"547": {"find": "(\\bdouble-parens[\\s\\n]expression\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |double-parentheses expression| is preferred. %>"},
"548": {"find": "(\\bdouble[\\s\\n]click\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |double-click| is preferred. %>"},
"549": {"find": "(\\bdown[\\s\\n]time\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |downtime| is preferred. %>"},
"550": {"find": "(\\bdownscale\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |scale down| is preferred. %>"},
"551": {"find": "(\\bdrop-down\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dropdown| is preferred -- without a hyphen and without |list| or |menu| %>"},
"552": {"find": "(\\bdropdown[\\s\\n]list\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dropdown| is preferred -- without a hyphen and without |list| or |menu| %>"},
"553": {"find": "(\\bdropdown[\\s\\n]menu\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dropdown| is preferred -- without a hyphen and without |list| or |menu| %>"},
"554": {"find": "(\\bdropdown[\\s\\n]menus\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dropdowns| is preferred. %>"},
"555": {"find": "(\\bDropdown[\\s\\n]menus\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Dropdowns| is preferred. %>"},
"556": {"find": "(\\bdue[\\s\\n]to[\\s\\n]the[\\s\\n]fact[\\s\\n]that\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |because| might be better. %>"},
"557": {"find": "(\\bduring[\\s\\n]the[\\s\\n]boot[\\s\\n]sequence\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |during startup| is preferred. %>"},
"558": {"find": "(\\be-mail\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |email| is preferred. %>"},
"559": {"find": "(\\beasily\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Avoid when describing an instruction. %>"},
"560": {"find": "(\\beasy\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Avoid when describing an instruction. %>"},
"561": {"find": "(\\beighty\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use numerals for numbers greater than nine. %>"},
"562": {"find": "(\\beither\\b[^:]*:[\\n\\s]*\\*.*[\\n\\s]*\\*.*[\\n\\s]*\\*(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |either| applies to two items only. If the list exceeds two, use |any|. %>"},
"563": {"find": "(\\beither\\b[^:]*:[\\n\\s]*\\<.l\\>.*[\\n\\s]*\\<li\\>.*[\\n\\s]*\\<li\\>.*[\\n\\s]*\\<li\\>(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |either| applies to two items only. If the list exceeds two, use |any|. %>"},
"564": {"find": "(\\bElastic[\\s\\n]Runtime(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.app_runtime_full or, if in alt text, #{vars.app_runtime_full} %>"},
"565": {"find": "(\\beligible\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Might the plainer |able| be better? %>"},
"566": {"find": "(\\benter[\\s\\n]in\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider shortening to just |enter|. %>"},
"567": {"find": "(\\benter[\\s\\n]the[\\s\\n]following\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |To X, run:| and |X by running:| are preferred. %>"},
"568": {"find": "(\\benv\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |environment| is preferred %>"},
"569": {"find": "(\\bephemeral[\\s\\n]disk\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# There are two kinds of disk: ephemeral and persistent. You do not need to modify |disk| with |ephemeral| unless there is discussion of persistent disks in the same topic. Always define persistent disks as persistent. %>"},
"570": {"find": "(\\bERT(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.app_runtime_full or, if in alt text, #{vars.app_runtime_full} %>"},
"571": {"find": "(\\beventing(?![\\s\\n]component)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Knative Eventing| is preferred. %>"},
"572": {"find": "(\\bEventing[\\s\\n]component\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# In Knative docs, |Knative Eventing| is preferred, sans |component|. %>"},
"573": {"find": "(\\beventing\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Knative Eventing| is preferred. %>"},
"574": {"find": "(\\beveryone's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"575": {"find": "(\\bEveryone's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"576": {"find": "(\\bexecute[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])procedure\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |follow| is preferred over |execute|. %>"},
"577": {"find": "(\\bExecute[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])procedure\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Follow| is preferred over |Execute|. %>"},
"578": {"find": "(\\bexecute[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])procedures\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |follow| is preferred over |execute|. %>"},
"579": {"find": "(\\bExecute[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])procedures\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Follow| is preferred over |Execute|. %>"},
"580": {"find": "(\\bexecute[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])steps\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |follow| is preferred over |execute|. %>"},
"581": {"find": "(\\bExecute[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])steps\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Follow| is preferred over |Execute|. %>"},
"582": {"find": "(\\bexecuting\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |running| is preferred. %>"},
"583": {"find": "(\\bExecuting\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Running| is preferred. %>"},
"584": {"find": "(\\bexpected\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider replacing with |in most cases| to sound more confident. %>"},
"585": {"find": "(\\bexperimental\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The terms |experimental| and |beta| have different meanings only in VMware. Otherwise, use |beta| and never |experimental|. %>"},
"586": {"find": "(\\bexport[\\s\\n]from\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |export to| makes more sense if writing from the perspective of the exporter. %>"},
"587": {"find": "(\\bexport[\\s\\n]out[\\s\\n]of\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |export to| makes more sense if writing from the perspective of the exporter. %>"},
"588": {"find": "(\\bexported[\\s\\n]from\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |export to| makes more sense if writing from the perspective of the exporter. %>"},
"589": {"find": "(\\bexported[\\s\\n]out[\\s\\n]of\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |export to| makes more sense if writing from the perspective of the exporter. %>"},
"590": {"find": "(\\bFAQ\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use FAQs unless absolutely necessary. Fold into other appropriate locations in the doc. %>"},
"591": {"find": "(\\bFeature\\b(?=\\n+[^:]+\\.)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Add a stem to introduce the new feature. %>"},
"592": {"find": "(\\bFeatures\\b(?=\\n+[^:]+\\.)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Add a stem to introduce the new features. %>"},
"593": {"find": "(\\bFeb\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |February| is preferred. %>"},
"594": {"find": "(\\bfifty\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use numerals for numbers greater than nine. %>"},
"595": {"find": "(\\bfile[\\s\\n]name\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |filename| is preferred. %>"},
"596": {"find": "(\\bfile[\\s\\n]store\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |filestore| is preferred. %>"},
"597": {"find": "(\\bfilestorage\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |file storage| is preferred. %>"},
"598": {"find": "(\\bfilesystem\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |file system| is preferred. %>"},
"599": {"find": "(\\bfirehose\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Firehose| is capitalized. %>"},
"600": {"find": "(\\bfolder\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |directory| is preferred. %>"},
"601": {"find": "(\\bfolders\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |directories| is preferred. %>"},
"602": {"find": "(\\bfollowing[\\s\\n]command\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Maybe shorten to just |run:| %>"},
"603": {"find": "(\\bFor[\\s\\n]example\\b[^,:](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider adding a comma or colon after |For example|. %>"},
"604": {"find": "(\\bfor[\\s\\n]example\\b[^,:](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider adding a comma or colon after |for example|. %>"},
"605": {"find": "(\\bfor[\\s\\n]instance\\b[^,:](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |for example| is preferred. %>"},
"606": {"find": "(\\bfor[\\s\\n]more[\\s\\n]information\\.(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The x-ref format is |For more information, see...| %>"},
"607": {"find": "(\\bfor[\\s\\n]the[\\s\\n]sake[\\s\\n]of\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |to| might be better here. %>"},
"608": {"find": "(\\bFor[\\s\\n]the[\\s\\n]sake[\\s\\n]of\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |To| might be better here. %>"},
"609": {"find": "(\\bforty\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use numerals for numbers greater than nine. %>"},
"610": {"find": "(\\bFrequently[\\s\\n]Asked[\\s\\n]Questions\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use FAQs unless absolutely necessary. Fold into other appropriate locations in the doc. %>"},
"611": {"find": "(\\bfully[\\s\\n]qualified[\\s\\n]domain[\\s\\n]name[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |FQDN| after the first use. %>"},
"612": {"find": "(\\bFully[\\s\\n]qualified[\\s\\n]domain[\\s\\n]name[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |FQDN| after the first use. %>"},
"613": {"find": "(\\bfuture\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Only document what exists. There are legal ramifications to making promises. %>"},
"614": {"find": "(\\bGarbage[\\s\\n]Collector\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |garbage collector| is preferred. %>"},
"615": {"find": "(\\bgarden-runc\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Garden-runC| is preferred. %>"},
"616": {"find": "(\\bGarden-RunC\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Garden-runC| is preferred. %>"},
"617": {"find": "(\\bGemfire\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |GemFire| is preferred. %>"},
"618": {"find": "(\\bget[\\s\\n]in[\\s\\n]touch\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use a specific communication verb instead, such as |email|. %>"},
"619": {"find": "(\\bGet[\\s\\n]in[\\s\\n]touch\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use a specific communication verb instead, such as |email|. %>"},
"620": {"find": "(\\bgif\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |GIF| is preferred. %>"},
"621": {"find": "(\\bGithub\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The brand name is |GitHub|. %>"},
"622": {"find": "(\\bGlobal[\\s\\n]Support[\\s\\n]Services\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |VMware Tanzu Support| is preferred. %>"},
"623": {"find": "(\\bgo[\\s\\n]router\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Gorouter| is preferred. %>"},
"624": {"find": "(\\bGo[\\s\\n]Router\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Gorouter| is preferred. %>"},
"625": {"find": "(\\bGo[\\s\\n]routine\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |goroutine| is preferred. %>"},
"626": {"find": "(\\bGolang\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |golang| is preferred. %>"},
"627": {"find": "(\\bgonna\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"628": {"find": "(\\bgood[\\s\\n]chance\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |likely| is shorter, less colloquial, and easier to translate than |good chance|. %>"},
"629": {"find": "(\\bGoogle[\\s\\n]Cloud[\\s\\n]Platform[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |GCP| after the first use. %>"},
"630": {"find": "(\\bgorouter\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Gorouter| is preferred. %>"},
"631": {"find": "(\\bGoRouter\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Gorouter| is preferred. %>"},
"632": {"find": "(\\bGoroutine\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |goroutine| is preferred. %>"},
"633": {"find": "(\\bgotta\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"634": {"find": "(\\bgraphical[\\s\\n]interface\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |UI| is preferred. %>"},
"635": {"find": "(\\bGreenPlum\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Greenplum| is preferred. %>"},
"636": {"find": "(\\bGSS\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |VMware Tanzu Support| is preferred. %>"},
"637": {"find": "(\\bguarantee\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Maybe replace with |ensure| to avoid the sense of legalese. %>"},
"638": {"find": "(\\bGuarantee\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Maybe replace with |Ensure| to avoid the sense of legalese. %>"},
"639": {"find": "(\\bGUI\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |UI| is preferred. %>"},
"640": {"find": "(\\bguid\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |GUID| is preferred. %>"},
"641": {"find": "(\\bHAC\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |HA cluster| is preferred. %>"},
"642": {"find": "(\\bhad[\\s\\n]been\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider replacing with |was| or shifting to present tense. %>"},
"643": {"find": "(\\bhadn't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"644": {"find": "(\\bhankering\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |want| is preferred. %>"},
"645": {"find": "(\\bHAproxy\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |HAProxy| is preferred. %>"},
"646": {"find": "(\\bHaproxy\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |HAProxy| is preferred. %>"},
"647": {"find": "(\\bhas[\\s\\n]been\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider changing to |is| or |has| or rewrite for active voice. %>"},
"648": {"find": "(\\bhas[\\s\\n]finished[\\s\\n][a-z-]*ing\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Possibly inelegant grammar. |has verbed| is better than |has finished verbing|. %>"},
"649": {"find": "(\\bhas[\\s\\n]the[\\s\\n]power[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |can| is shorter. %>"},
"650": {"find": "(\\bhasn't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"651": {"find": "(\\bhave[\\s\\n]been\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider replacing with |were| or shifting to present tense. %>"},
"652": {"find": "(\\bhave[\\s\\n]the[\\s\\n]power[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |can| is shorter. %>"},
"653": {"find": "(\\bhaven't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"654": {"find": "(\\bhe'd\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"655": {"find": "(\\bHe'd\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"656": {"find": "(\\bhe'll\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"657": {"find": "(\\bHe'll\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"658": {"find": "(\\bhe's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"659": {"find": "(\\bHe's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"660": {"find": "(\\bhealth-check\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |health check| is preferred. %>"},
"661": {"find": "(\\bhealthcheck\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |health check| is preferred. %>"},
"662": {"find": "(\\bHelm-Chart\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Helm chart| is preferred. %>"},
"663": {"find": "(\\bhelm-chart\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Helm chart| is preferred. %>"},
"664": {"find": "(\\bHelm-chart\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Helm chart| is preferred. %>"},
"665": {"find": "(\\bhelm[\\s\\n](?!chart)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Helm| is preferred. %>"},
"666": {"find": "(\\bhelm[\\s\\n]chart\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Helm chart| is preferred. %>"},
"667": {"find": "(\\bhigh[\\s\\n]availability[\\s\\n]cluster\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |HA cluster| is preferred. %>"},
"668": {"find": "(\\bHigh[\\s\\n]availability[\\s\\n]cluster\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |HA cluster| is preferred. %>"},
"669": {"find": "(\\bHigh[\\s\\n]Availability\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |high availability| is preferred. %>"},
"670": {"find": "(\\bhighly[\\s\\n]recommend\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Just |recommend| is preferred. %>"},
"671": {"find": "(\\bhighly[\\s\\n]recommends\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Just |recommends| is preferred. %>"},
"672": {"find": "(\\bhis[\\s\\n]or[\\s\\n]her\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |they| is preferred. %>"},
"673": {"find": "(\\bhis\\/her\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |they| is preferred. %>"},
"674": {"find": "(\\bhost[\\s\\n]name\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |hostname| is preferred. %>"},
"675": {"find": "(\\bHTTP[\\s\\n]Router\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Gorouter| is preferred. %>"},
"676": {"find": "(\\bHttp\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |HTTP| is preferred. %>"},
"677": {"find": "(\\bhuman[\\s\\n]readable[\\s\\n]description\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The compound adjective is missing a hyphen. %>"},
"678": {"find": "(\\bHuman[\\s\\n]readable[\\s\\n]description\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The compound adjective is missing a hyphen. %>"},
"679": {"find": "(\\bhuman[\\s\\n]readable[\\s\\n]identifier\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The compound adjective is missing a hyphen. %>"},
"680": {"find": "(\\bHuman[\\s\\n]readable[\\s\\n]identifier\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The compound adjective is missing a hyphen. %>"},
"681": {"find": "(\\bhuman[\\s\\n]readable[\\s\\n]name\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The compound adjective is missing a hyphen. %>"},
"682": {"find": "(\\bHuman[\\s\\n]readable[\\s\\n]name\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The compound adjective is missing a hyphen. %>"},
"683": {"find": "(\\bhuman[\\s\\n]readable[\\s\\n]text\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The compound adjective is missing a hyphen. %>"},
"684": {"find": "(\\bHuman[\\s\\n]readable[\\s\\n]text\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The compound adjective is missing a hyphen. %>"},
"685": {"find": "(\\bHyperloglog\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |HyperLogLog| is preferred. %>"},
"686": {"find": "(\\bhyperloglog\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |HyperLogLog| is preferred. %>"},
"687": {"find": "(\\bHyperloglogs\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |HyperLogLogs| is preferred. %>"},
"688": {"find": "(\\bhyperloglogs\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |HyperLogLogs| is preferred. %>"},
"689": {"find": "(\\bI'd\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"690": {"find": "(\\bI'll\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"691": {"find": "(\\bI'm\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"692": {"find": "(\\bI've\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"693": {"find": "(\\bIAAS\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |IaaS| is preferred. %>"},
"694": {"find": "(\\bIaaSes\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Avoid the plural form of |IaaS| if possible. %>"},
"695": {"find": "(\\bid[\\s\\n](?!=)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The abbreviation for |identity| is |ID|. %>"},
"696": {"find": "(\\bId\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The abbreviation for |identity| is |ID|. %>"},
"697": {"find": "(\\biD\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The abbreviation for |identity| is |ID|. %>"},
"698": {"find": "(\\bIDP\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |IdP (identity provider)| is preferred. %>"},
"699": {"find": "(\\bIDPs\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |identity providers| is preferred. A single identity provider can be shortened to |IdP|. %>"},
"700": {"find": "(\\bIf[\\s\\n]you[\\s\\n]want[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Maybe replace with just |To|. %>"},
"701": {"find": "(\\bif[\\s\\n]you[\\s\\n]want[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Maybe replace with just |to|. %>"},
"702": {"find": "(\\bimport[\\s\\n]into\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |import from| makes more sense if writing from the perspective of the importer. %>"},
"703": {"find": "(\\bimport[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |import from| makes more sense if writing from the perspective of the importer. %>"},
"704": {"find": "(\\bimported[\\s\\n]into\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |import from| makes more sense if writing from the perspective of the importer. %>"},
"705": {"find": "(\\bimported[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |import from| makes more sense if writing from the perspective of the importer. %>"},
"706": {"find": "(\\bin[\\s\\n]a[\\s\\n][a-z]*[\\s\\n]manner\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider replacing with an adverb. %>"},
"707": {"find": "(\\bin[\\s\\n]CredHub\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# There are two CredHubs in PCF v2.0: BOSH CredHub and runtime CredHub. %>"},
"708": {"find": "(\\bin[\\s\\n]go\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |in Go| is preferred. %>"},
"709": {"find": "(\\bin[\\s\\n]order[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |to| is preferred. %>"},
"710": {"find": "(\\bIn[\\s\\n]order[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |To| is preferred. %>"},
"711": {"find": "(\\bin[\\s\\n]preparation[\\s\\n]for\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |to prepare for| might be better. Verbs are punchier than abstract nouns. %>"},
"712": {"find": "(\\bin[\\s\\n]real-time\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Stuff happens in |real time|. %>"},
"713": {"find": "(\\bin[\\s\\n]the[\\s\\n]case[\\s\\n]that\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |when| or |where| might be better here. %>"},
"714": {"find": "(\\bIn[\\s\\n]the[\\s\\n]case[\\s\\n]that\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |When| or |Where| might be better here. %>"},
"715": {"find": "(\\bin[\\s\\n]the[\\s\\n]terminal[\\s\\n]window\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |on the command line| is preferred. %>"},
"716": {"find": "(\\bin[\\s\\n]unexpected[\\s\\n]ways\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |unexpectedly| is more concise. %>"},
"717": {"find": "(\\bincluded[\\s\\n]in\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider deleting |included|. %>"},
"718": {"find": "(\\bindependent[\\s\\n]service[\\s\\n]vendor[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |ISV| after the first use. %>"},
"719": {"find": "(\\bIndependent[\\s\\n]service[\\s\\n]vendor[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |ISV| after the first use. %>"},
"720": {"find": "(\\bIndependent[\\s\\n]Service[\\s\\n]Vendor[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |ISV| after the first use. %>"},
"721": {"find": "(\\bindependent[\\s\\n]service[\\s\\n]vendors[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |ISV| after the first use. %>"},
"722": {"find": "(\\bIndependent[\\s\\n]service[\\s\\n]vendors[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |ISV| after the first use. %>"},
"723": {"find": "(\\bIndependent[\\s\\n]Service[\\s\\n]Vendors[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |ISV| after the first use. %>"},
"724": {"find": "(\\bindices\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |indexes| is preferred. %>"},
"725": {"find": "(\\bineligible\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Might the plainer |unable| be better? %>"},
"726": {"find": "(\\binfo\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |information| is preferred. %>"},
"727": {"find": "(\\bInfo\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Information| is preferred. %>"},
"728": {"find": "(\\binformation[\\s\\n]on\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |information about| is preferred. %>"},
"729": {"find": "(\\binput[\\s\\n]that\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The verb |enter| is preferred. %>"},
"730": {"find": "(\\binput[\\s\\n]the\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The verb |enter| is preferred. %>"},
"731": {"find": "(\\bInput\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The verb |Enter| is preferred. %>"},
"732": {"find": "(\\binsecure\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |not secure| is preferred. %>"},
"733": {"find": "(\\bInsecure\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Not secure| is preferred. %>"},
"734": {"find": "(\\binstallation[\\s\\n]dashboard(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Installation Dashboard| is preferred if this is a VMware product feature. %>"},
"735": {"find": "(\\bInstallation[\\s\\n]dashboard(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Installation Dashboard| is preferred if this is a VMware product feature. %>"},
"736": {"find": "(\\binstallation[\\s\\n]Dashboard(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Installation Dashboard| is preferred if this is a VMware product feature. %>"},
"737": {"find": "(\\binstructions[\\s\\n]on[\\s\\n][a-z]*ing\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |instructions for doing x| is more natural English than |instructions on doing x| %>"},
"738": {"find": "(\\bInstructions[\\s\\n]on[\\s\\n][a-z]*ing\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Instructions for doing x| is more natural English than |Instructions on doing x| %>"},
"739": {"find": "(\\binteractivity\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# There is probably a better alternative, such as |input|. %>"},
"740": {"find": "(\\bInternet[\\s\\n](?![Pp]rotocol)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Only capitalize |internet| when it is part of a title. %>"},
"741": {"find": "(\\bInternet[\\s\\n]Protocol\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |IP address| is preferred. %>"},
"742": {"find": "(\\bIP\\b(?!([\\s\\n]*[Aa]ddress|[\\s\\n]*or[\\s\\n][A-Z]*[\\s\\n][Aa]ddress))(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not omit |address| from |IP address|. %>"},
"743": {"find": "(\\bIPSec[\\s\\n]for[\\s\\n]PCF(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"744": {"find": "(\\bis[\\s\\n][a-z-]*ed[\\s\\n]by\\b(?![\\s\\n]default)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Active voice is preferred. %>"},
"745": {"find": "(\\bis[\\s\\n]a[\\s\\n]sign[\\s\\n]that\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |suggests| is shorter and simplifies the syntax. %>"},
"746": {"find": "(\\bis[\\s\\n]finished[\\s\\n][a-z-]*ing\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Possibly inelegant grammar. |has verbed| is better than |has finished verbing|. %>"},
"747": {"find": "(\\bis[\\s\\n]necessary[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider deleting this or replacing it with the shorter |you must|. %>"},
"748": {"find": "(\\bis[\\s\\n]possible[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |you can| might be better. %>"},
"749": {"find": "(\\bis[\\s\\n]used[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"750": {"find": "(\\bisn't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"751": {"find": "(\\bIsolation[\\s\\n]Segments\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Isolation Segment| is the official title so do not make it plural. It is fine to talk of |isolation segments| though. %>"},
"752": {"find": "(\\bit'll\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"753": {"find": "(\\bit's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"754": {"find": "(\\bit's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"755": {"find": "(\\bIt's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"756": {"find": "(\\bit[\\n\\s]is[\\n\\s]possible\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |might| might be better. %>"},
"757": {"find": "(\\bIt[\\n\\s]is[\\n\\s]possible\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |might| might be better. %>"},
"758": {"find": "(\\bit[\\s\\n]is[\\s\\n]recommended\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Specify the party that recommends (VMware, Cloud Foundry, etc). %>"},
"759": {"find": "(\\bIt[\\s\\n]is[\\s\\n]recommended\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Specify the party that recommends (VMware, Cloud Foundry, etc). %>"},
"760": {"find": "(\\bJan\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |January| is preferred. %>"},
"761": {"find": "(\\bjar\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |JAR| is preferred. %>"},
"762": {"find": "(\\bjavascript\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |JavaScript| is preferred. %>"},
"763": {"find": "(\\bJavascript\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |JavaScript| is preferred. %>"},
"764": {"find": "(\\bjson\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |JSON| is preferred. %>"},
"765": {"find": "(\\bjust[\\s\\n]so[\\s\\n]happened\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"766": {"find": "(\\bjust[\\s\\n]so[\\s\\n]happens\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"767": {"find": "(\\bkeep-alive\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |keepalive| is preferred. %>"},
"768": {"find": "(\\bkeep[\\s\\n]in[\\s\\n]mind\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"769": {"find": "(\\bKeep[\\s\\n]in[\\s\\n]mind\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"770": {"find": "(\\bkey[\\s\\n]pair\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |keypair| is preferred. %>"},
"771": {"find": "(\\bkey\\/value[\\s\\n]pair\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |key-value pair| is preferred. %>"},
"772": {"find": "(\\bKey\\/value[\\s\\n]pair\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Key-value pair| is preferred. %>"},
"773": {"find": "(\\bkey\\/value[\\s\\n]pairs\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |key-value pairs| is preferred. %>"},
"774": {"find": "(\\bKey\\/value[\\s\\n]pairs\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Key-value pairs| is preferred. %>"},
"775": {"find": "(\\bkill\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Where practical, |stop| or |halt| is preferred. %>"},
"776": {"find": "(\\bKill\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Where practical, |stop| or |halt| is preferred. %>"},
"777": {"find": "(\\bKnown\\b[\\s\\n]\\bIssue\\b(?=\\n+[^:]+\\.\\n+\\*)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Add a stem to introduce the known issue. %>"},
"778": {"find": "(\\bKnown\\b[\\s\\n]\\bIssues\\b(?=\\n+[^:]+\\.\\n+\\*)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Add a stem to introduce the known issues. %>"},
"779": {"find": "(\\bkubectl[\\s\\n]CLI\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# First use: |Kubernetes command line tool (kubectl)|. Subsequent uses: |kubectl|. %>"},
"780": {"find": "(\\bkubectl[\\s\\n]command[\\s\\n]line[\\s\\n]tool\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# First use: |Kubernetes command line tool (kubectl)|. Subsequent uses: |kubectl|. %>"},
"781": {"find": "(\\bkubectl[\\s\\n]tool\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# First use: |Kubernetes command line tool (kubectl)|. Subsequent uses: |kubectl|. %>"},
"782": {"find": "(\\bKubectl\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# First use: |Kubernetes command line tool (kubectl)|. Subsequent uses: |kubectl|. %>"},
"783": {"find": "(\\bKubernetes[\\s\\n]operator\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Kubernetes Operator| is preferred. %>"},
"784": {"find": "(\\bkubernetes\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Kubernetes| is preferred. %>"},
"785": {"find": "(\\bkubo\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Container Runtime| is preferred. %>"},
"786": {"find": "(\\bKubo\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Container Runtime| is preferred. %>"},
"787": {"find": "(\\bKuBo\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Container Runtime| is preferred. %>"},
"788": {"find": "(\\blabelled\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |labeled| is the American English spelling. %>"},
"789": {"find": "(\\bLabelled\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |labeled| is the American English spelling. %>"},
"790": {"find": "(\\blater[\\s\\n]release\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Never state something is coming in a future release. It could create a legal problem. %>"},
"791": {"find": "(\\bleft[\\s\\n]hand\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |left-hand| is preferred if modifying a noun, as in |left-hand pane|. %>"},
"792": {"find": "(\\blet's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"793": {"find": "(\\bLet's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"794": {"find": "(\\bLightweight[\\s\\n]Directory[\\s\\n]Access[\\s\\n]Protocol(?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |LDAP| is preferred. %>"},
"795": {"find": "(\\blives\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not anthropomorphize: code does not live anywhere. %>"},
"796": {"find": "(\\bliving\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not anthropomorphize: code does not live anywhere. %>"},
"797": {"find": "(\\blog-in\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use |login| (n) or |log in| (v) %>"},
"798": {"find": "(\\blog[\\s\\n]into\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |log in to| is preferred. %>"},
"799": {"find": "(\\blog[\\s\\n]line\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |log entry| is preferred. %>"},
"800": {"find": "(\\bLog[\\s\\n]line\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Log entry| is preferred. %>"},
"801": {"find": "(\\blog[\\s\\n]lines\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |log entries| is preferred. %>"},
"802": {"find": "(\\bLog[\\s\\n]lines\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Log entries| is preferred. %>"},
"803": {"find": "(\\blog[\\s\\n]message\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |log entry| is preferred. %>"},
"804": {"find": "(\\bLog[\\s\\n]message\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Log entry| is preferred. %>"},
"805": {"find": "(\\blog[\\s\\n]messages\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |log entries| is preferred. %>"},
"806": {"find": "(\\bLog[\\s\\n]messages\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Log entries| is preferred. %>"},
"807": {"find": "(\\blog[\\s\\n]on[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |log in to| is preferred. %>"},
"808": {"find": "(\\bloggregator(?!\\-)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Call it |Loggregator| -- capitalized and without a preceding |the|. %>"},
"809": {"find": "(\\blogin[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |log in to| is preferred. %>"},
"810": {"find": "(\\bLogin[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Log in to| is preferred. %>"},
"811": {"find": "(\\blower[\\s\\n]case\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |lowercase| is preferred. %>"},
"812": {"find": "(\\bmake[\\s\\n]sure\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Replace with |ensure| or, better still, rephrase as a command. %>"},
"813": {"find": "(\\bMake[\\s\\n]sure\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Ensure| is preferred. %>"},
"814": {"find": "(\\bMar\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |March| is preferred. %>"},
"815": {"find": "(\\bmaster\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred alternatives: |primary|, |controller|. Other alternatives: |main|, |original|, |reference|, |control plane|, |control plane node|. %>"},
"816": {"find": "(\\bMaster\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred alternatives: |Primary|, |Controller|. Other alternatives: |Main|, |Original|, |Reference|, |Control plane|, |Control plane node|. %>"},
"817": {"find": "(\\bMaterial[\\s\\n]data\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |consumption data| is preferred. %>"},
"818": {"find": "(\\bmax\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |maximum| is preferred. %>"},
"819": {"find": "(\\bMax\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Maximum| is preferred. %>"},
"820": {"find": "(\\bmay\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |can| usually works better. Use |might| to convey possibility. %>"},
"821": {"find": "(\\bmembers[\\s\\n]of[\\s\\n]a[\\s\\n][a-z]*(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |x members| is more succinct than |members of x|. %>"},
"822": {"find": "(\\bmerge[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |merge with| might be better here. %>"},
"823": {"find": "(\\bmerged[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |merged with| might be better here. %>"},
"824": {"find": "(\\bmicro-services\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |microservices| is preferred. %>"},
"825": {"find": "(\\bmight've\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"826": {"find": "(\\bmin\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |minimum| is preferred. %>"},
"827": {"find": "(\\bMin\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Minimum| is preferred. %>"},
"828": {"find": "(\\bMinIO\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Minio| is preferred. %>"},
"829": {"find": "(\\bminio\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Minio| is preferred. %>"},
"830": {"find": "(\\bmodal\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dialog box| is preferred. %>"},
"831": {"find": "(\\bMore[\\s\\n]information[\\s\\n](can|is)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The xref style is |For more information, see...|. %>"},
"832": {"find": "(\\bmore[\\s\\n]information[\\s\\n](can|is)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The xref style is |For more information, see...|. %>"},
"833": {"find": "(\\bmulti az\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Multi-AZ| is Amazon style. %>"},
"834": {"find": "(\\bmulti AZ\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Multi-AZ| is Amazon style. %>"},
"835": {"find": "(\\bMulti az\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Multi-AZ| is Amazon style. %>"},
"836": {"find": "(\\bMulti AZ\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Multi-AZ| is Amazon style. %>"},
"837": {"find": "(\\bmulti-az\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Multi-AZ| is Amazon style. %>"},
"838": {"find": "(\\bmulti-AZ\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Multi-AZ| is Amazon style. %>"},
"839": {"find": "(\\bMulti-az\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Multi-AZ| is Amazon style. %>"},
"840": {"find": "(\\bmustn't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"841": {"find": "(\\bMySQL[\\s\\n]for[\\s\\n]Pivotal[\\s\\n]Platform(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"842": {"find": "(\\bnameserver\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |name server| is preferred. %>"},
"843": {"find": "(\\bnavigate[\\s\\n]to[\\s\\n]the[\\s\\n][A-Z](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Embolden the names of UI elements. %>"},
"844": {"find": "(\\bNavigate[\\s\\n]to[\\s\\n]the[\\s\\n][A-Z](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Embolden the names of UI elements. %>"},
"845": {"find": "(\\bneedn't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"846": {"find": "(\\bnext[\\s\\n]release\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Never state something is coming in a future release. It could create a legal problem. %>"},
"847": {"find": "(\\bNGINX\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |NGINX| for the brand. |nginx| for files and code. %>"},
"848": {"find": "(\\bNginx\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |NGINX| for the brand. |nginx| for files and code. %>"},
"849": {"find": "(\\bninety\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use numerals for numbers greater than nine. %>"},
"850": {"find": "(\\bnot[\\s\\n]already[\\s\\n]done[\\s\\n]so\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider if this should be listed as a prerequisite. %>"},
"851": {"find": "(\\bnot[\\s\\n]recommend\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |VMware discourages| is preferred for closed source. |Cloud Foundry discourages| for open source. %>"},
"852": {"find": "(\\bnot[\\s\\n]recommended\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |VMware discourages| is preferred for closed source. |Cloud Foundry discourages| for open source. %>"},
"853": {"find": "(\\bnot[\\s\\n]yet\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# 1st preference: delete. 2nd preference: replace these words with |currently|. %>"},
"854": {"find": "(\\bnote[\\s\\n]down\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |record| is preferred. %>"},
"855": {"find": "(\\bNote[\\s\\n]that\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Notes must be in Note boxes and start with |Note: |. %>"},
"856": {"find": "(\\bnote[\\s\\n]that\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Notes must be in Note boxes and start with |Note: |. %>"},
"857": {"find": "(\\bNotice[\\s\\n]that\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Notes must be in Note boxes and start with |Note: |. %>"},
"858": {"find": "(\\bnotice[\\s\\n]that\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Notes must be in Note boxes and start with |Note: |. %>"},
"859": {"find": "(\\bnoting[\\s\\n]that\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Notes must be in Note boxes and start with |Note: |. %>"},
"860": {"find": "(\\bNov\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |November| is preferred. %>"},
"861": {"find": "(\\bnow[\\s\\n][a-z-]*ed[\\s\\n]by\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Active voice is preferred. %>"},
"862": {"find": "(\\bnow[\\s\\n]should\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Favour certainty and agency: |the app now works| over |the app should now work|, and |VMware recommends| over |you should|.  %>"},
"863": {"find": "(\\bNozzle\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Only capitalize |nozzle| when it is part of a title %>"},
"864": {"find": "(\\bNSX[\\s\\n]Edge\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |NSX Edge Services Gateway (ESG)| is preferred. %>"},
"865": {"find": "(\\boAuth\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |OAuth| is preferred. %>"},
"866": {"find": "(\\bOauth\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |OAuth| is preferred. %>"},
"867": {"find": "(\\bOct\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |October| is preferred. %>"},
"868": {"find": "(\\bODB(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_abbr or, if in alt text, #{vars.product_abbr} %>"},
"869": {"find": "(\\bof[\\s\\n]your[\\s\\n]choosing\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |you choose| is snappier and easier for machine translation. %>"},
"870": {"find": "(\\bon-board\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |onboard| (v) is preferred. %>"},
"871": {"find": "(\\bOn-board\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Onboard| (v) is preferred. %>"},
"872": {"find": "(\\bOn-Demand[\\s\\n]Broker(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Full product title: |on-demand service broker|, short version: |on-demand broker| initialism: <%= vars.product_abbr %>"},
"873": {"find": "(\\bOn-demand[\\s\\n]Broker(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Full product title: |on-demand service broker|, short version: |on-demand broker| initialism: <%= vars.product_abbr %>"},
"874": {"find": "(\\bon[\\s\\n]demand[\\s\\n]broker(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Full product title: |on-demand service broker|, short version: |on-demand broker| initialism: <%= vars.product_abbr %>"},
"875": {"find": "(\\bOn[\\s\\n]demand[\\s\\n]broker(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Full product title: |on-demand service broker|, short version: |on-demand broker| initialism: <%= vars.product_abbr %>"},
"876": {"find": "(\\bOn[\\s\\n]Demand[\\s\\n]Broker(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Full product title: |on-demand service broker|, short version: |on-demand broker| initialism: <%= vars.product_abbr %>"},
"877": {"find": "(\\bOn[\\s\\n]Demand[\\s\\n]broker(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Full product title: |on-demand service broker|, short version: |on-demand broker| initialism: <%= vars.product_abbr %>"},
"878": {"find": "(\\bon[\\s\\n]demand[\\s\\n]plan\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |on-demand plan| is preferred. %>"},
"879": {"find": "(\\bOn[\\s\\n]demand[\\s\\n]plan\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |on-demand plan| is preferred. %>"},
"880": {"find": "(\\bOn[\\s\\n]Demand[\\s\\n]Plan\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |on-demand plan| is preferred. %>"},
"881": {"find": "(\\bOn[\\s\\n]Demand[\\s\\n]plan\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |on-demand plan| is preferred. %>"},
"882": {"find": "(\\bonce[\\s\\n]it\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Only use |once| when you mean |one time|, not when you mean |after|. %>"},
"883": {"find": "(\\bonce[\\s\\n]the\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Only use |once| when you mean |one time|, not when you mean |after|. %>"},
"884": {"find": "(\\bonce[\\s\\n]they\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Only use |once| when you mean |one time|, not when you mean |after|. %>"},
"885": {"find": "(\\bonce[\\s\\n]you\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Only use |once| when you mean |one time|, not when you mean |after|. %>"},
"886": {"find": "(\\bOnce\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Only use |once| when you mean |one time|, not when you mean |after|. %>"},
"887": {"find": "(\\bonsite\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Needs a space or a hyphen. The on-site interview is the last of the three interviews. The training was held on site. %>"},
"888": {"find": "(\\bOperations[\\s\\n]Manager(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.ops_manager or, if in alt text, #{vars.ops_manager} %>"},
"889": {"find": "(\\bOps[\\s\\n]Man\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.ops_manager or, if in alt text, #{vars.ops_manager} %>"},
"890": {"find": "(\\bops[\\s\\n]manager(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.ops_manager or, if in alt text, #{vars.ops_manager} %>"},
"891": {"find": "(\\bOps[\\s\\n]Manager[\\s\\n]Director\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |BOSH Director| is preferred. %>"},
"892": {"find": "(\\bOpsMan\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.ops_manager or, if in alt text, #{vars.ops_manager} %>"},
"893": {"find": "(\\bOpsManager\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.ops_manager or, if in alt text, #{vars.ops_manager} %>"},
"894": {"find": "(\\bopsmanager\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.ops_manager or, if in alt text, #{vars.ops_manager} %>"},
"895": {"find": "(\\bOptional[\\s\\n][^\\)\\*\\<](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Our style is (Optional) INSTRUCTION -- as a procedure header or a step. %>"},
"896": {"find": "(\\boptionally\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Our style is (Optional) INSTRUCTION -- as a procedure header or a step. %>"},
"897": {"find": "(\\bOptionally\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Our style is (Optional) INSTRUCTION -- as a procedure header or a step. %>"},
"898": {"find": "(\\borg[\\s\\n]manager\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Org Manager| is preferred. %>"},
"899": {"find": "(\\bOSBAPI[\\s\\n]compliant\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |OSBAPI-compliant| is preferred. %>"},
"900": {"find": "(\\bout[\\s\\n]of[\\s\\n]memory[\\s\\n]error\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |out-of-memory error| is preferred. %>"},
"901": {"find": "(\\bOut[\\s\\n]Of[\\s\\n]Memory[\\s\\n]error\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |out-of-memory error| is preferred. %>"},
"902": {"find": "(\\bPAAS\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |PaaS| is preferred. %>"},
"903": {"find": "(\\bparam\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |parameter| is preferred. %>"},
"904": {"find": "(\\bparams\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |parameters| is preferred. %>"},
"905": {"find": "(\\bParams\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Parameters| is preferred. %>"},
"906": {"find": "(\\bPAS\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.app_runtime_abbr or, if this is for Windows, vars.windows_runtime_abbr, and if alt text, #{ %>"},
"907": {"find": "(\\bPBS\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"908": {"find": "(\\bPCF[\\s\\n]dev\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |PCF Dev| is preferred. %>"},
"909": {"find": "(\\bPCF[\\s\\n]DEV\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |PCF Dev| is preferred. %>"},
"910": {"find": "(\\bPCF[\\s\\n]Solutions\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The brand name is |Platform Ops|. %>"},
"911": {"find": "(\\bPCFdev\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |PCF Dev| is preferred. %>"},
"912": {"find": "(\\bPCFS\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The brand name is |Platform Ops|. %>"},
"913": {"find": "(\\bPDC\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_abbr or, if in alt text, #{vars.product_abbr} %>"},
"914": {"find": "(\\bperform[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])procedure\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |follow| is preferred over |perform|. %>"},
"915": {"find": "(\\bPerform[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])procedure\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Follow| is preferred over |Perform|. %>"},
"916": {"find": "(\\bperform[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])procedures\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |follow| is preferred over |perform|. %>"},
"917": {"find": "(\\bPerform[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])procedures\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Follow| is preferred over |Perform|. %>"},
"918": {"find": "(\\bperform[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])steps\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |follow| is preferred over |perform|. %>"},
"919": {"find": "(\\bPerform[\\s\\n](\\w+[\\s\\n]|\\w+[\\s\\n]\\w+[\\s\\n])steps\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Follow| is preferred over |Perform|. %>"},
"920": {"find": "(\\bPersistent[\\s\\n]Volume[\\s\\n]Claim\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |PersistentVolumeClaim| is preferred. %>"},
"921": {"find": "(\\bPersistent[\\s\\n]Volume\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |PersistentVolume| is preferred. %>"},
"922": {"find": "(\\bPFS\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"923": {"find": "(\\bpick[\\s\\n]and[\\n\\s]choose\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |choose| alone is fine. %>"},
"924": {"find": "(\\bpicking[\\s\\n]and[\\n\\s]choosing\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |choose| alone is fine. %>"},
"925": {"find": "(\\bPID[\\s\\n]file\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Just |PID| is preferred. %>"},
"926": {"find": "(\\bpid[\\s\\n]file\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Just |PID| is preferred. %>"},
"927": {"find": "(\\bpidfile\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Just |PID| is preferred. %>"},
"928": {"find": "(\\bPIDfile\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Just |PID| is preferred. %>"},
"929": {"find": "(\\bPivNet\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_network or, if in alt text, #{vars.product_network} %>"},
"930": {"find": "(\\bPivotal,[\\s\\n]Inc\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Replace with |VMware|. %>"},
"931": {"find": "(\\bPivotal[\\s\\n]Anti-Virus(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"932": {"find": "(\\bPivotal[\\s\\n]App[\\s\\n]Service(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.app_runtime_full or, if this is for Windows, vars.windows_runtime_full, and if in alt text, #{ %>"},
"933": {"find": "(\\bPivotal[\\s\\n]app[\\s\\n]service(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.app_runtime_full or, if this is for Windows, vars.windows_runtime_full, and if in alt text, #{ %>"},
"934": {"find": "(\\bPivotal[\\s\\n]Application[\\s\\n]Service(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.app_runtime_full or, if this is for Windows, vars.windows_runtime_full, and if in alt text, #{ %>"},
"935": {"find": "(\\bPivotal[\\s\\n]application[\\s\\n]service(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.app_runtime_full or, if this is for Windows, vars.windows_runtime_full, and if in alt text, #{ %>"},
"936": {"find": "(\\bPivotal[\\s\\n]Backup[\\s\\n]and[\\s\\n]Restore(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"937": {"find": "(\\bPivotal[\\s\\n]Cloud[\\s\\n]Foundry[\\s\\n]Dev\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |PCF Dev| is preferred. %>"},
"938": {"find": "(\\bPivotal[\\s\\n]Cloud[\\s\\n]Foundry[\\s\\n]Solutions\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The brand name is |Platform Ops|. %>"},
"939": {"find": "(\\bPivotal[\\s\\n]Compliance[\\s\\n]Scanner(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"940": {"find": "(\\bPivotal[\\s\\n]Concourse(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"941": {"find": "(\\bPivotal[\\s\\n]Container[\\s\\n]Service(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.k8s_runtime_full or, if alt text, #{vars.k8s_runtime_full} %>"},
"942": {"find": "(\\bPivotal[\\s\\n]CredHub[\\s\\n]Service[\\s\\n]Broker(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"943": {"find": "(\\bPivotal[\\s\\n]Developer[\\s\\n]Console(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"944": {"find": "(\\bPivotal[\\s\\n]Event[\\s\\n]Alerts(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"945": {"find": "(\\bPivotal[\\s\\n]File[\\s\\n]Integrity[\\s\\n]Monitoring(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"946": {"find": "(\\bPivotal[\\s\\n]GemFire(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_name or, if in alt text, #{vars.product_name} %>"},
"947": {"find": "(\\bPivotal[\\s\\n]Greenplum(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"948": {"find": "(\\bPivotal[\\s\\n]Healthwatch(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"949": {"find": "(\\bPivotal[\\s\\n]IPsec(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"950": {"find": "(\\bPivotal[\\s\\n]Isolation[\\s\\n]Segment\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"951": {"find": "(\\bPivotal[\\s\\n]Labs[\\s\\n]and[\\s\\n]Services\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The brand name is |VMware Pivotal Labs|. %>"},
"952": {"find": "(\\bPivotal[\\s\\n]Labs[\\s\\n]and[\\s\\n]Strategic[\\s\\n]Services\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The brand name is |VMware Pivotal Labs|. %>"},
"953": {"find": "(\\bPivotal[\\s\\n]Network(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_network or, if in alt text, #{vars.product_network} %>"},
"954": {"find": "(\\bPivotal[\\s\\n]On[\\s\\n]Demand[\\s\\n]Services[\\s\\n]SDK(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"955": {"find": "(\\bPivotal[\\s\\n]Ops[\\s\\n]Manager(?![\\s\\n][Dd]irector)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.ops_manager_full or, if in alt text, #{vars.ops_manager_full} %>"},
"956": {"find": "(\\bPivotal[\\s\\n]Postgre[Ss](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"957": {"find": "(\\bPivotal[\\s\\n]Push[\\s\\n]Notification(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"958": {"find": "(\\bPivotal[\\s\\n]RabbitMQ(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"959": {"find": "(\\bPivotal[\\s\\n]Service[\\s\\n]Instance[\\s\\n]Manager(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"960": {"find": "(\\bPivotal[\\s\\n]Services[\\s\\n](?!Marketplace)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The brand name is |VMware Pivotal Labs|. %>"},
"961": {"find": "(\\bPivotal[\\s\\n]Single[\\s\\n]Sign-On(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"962": {"find": "(\\bPivotal[\\s\\n]Software\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Replace with |VMware|. %>"},
"963": {"find": "(\\bPivotalTracker\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Write |Pivotal Tracker| (first use on page in body text) and then |Tracker| (subsequent uses). %>"},
"964": {"find": "(\\bPKS(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Unless this is part of a VMware or Dell Tech brand name, use <%= vars.k8s_runtime_full %>"},
"965": {"find": "(\\bplain-text\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Replace the hyphen with a space if referring to unformatted text. Delete the hyphen if referring to non-encrypted text. %>"},
"966": {"find": "(\\bplatform[\\s\\n]control[\\s\\n]plane\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |CI/CD plane| is preferred. %>"},
"967": {"find": "(\\bplease(?![\\s\\n]email|[\\s\\n]contact|[\\s\\n]send|[\\s\\n]speak|[\\s\\n]\\w*[\\s\\n]\\w*[\\s\\n]issue|[\\s\\n]\\w*[\\s\\n]\\w*[\\s\\n]ticket)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use unless asking the reader to do you a favor, such as giving feedback. %>"},
"968": {"find": "(\\bPlease(?![\\s\\n]email|[\\s\\n]contact|[\\s\\n]send|[\\s\\n]speak|[\\s\\n]\\w*[\\s\\n]\\w*[\\s\\n]issue|[\\s\\n]\\w*[\\s\\n]\\w*[\\s\\n]ticket)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use unless asking the reader to do you a favor, such as giving feedback. %>"},
"969": {"find": "(\\bplug-in\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |plugin| is preferred, even though Merriam-Webster prefers the hyphen. %>"},
"970": {"find": "(\\bpod\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Pod| is capitalized per the K8s docs style. %>"},
"971": {"find": "(\\bpods\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Pods| is capitalized per the K8s docs style. %>"},
"972": {"find": "(\\bpoint[\\s\\n]in[\\s\\n]time[\\s\\n]snapshot\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |point-in-time snapshot| is preferred. %>"},
"973": {"find": "(\\bpoint[\\s\\n]release\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use. v#.## is a |minor release|. v#.#.# is a |patch release|. %>"},
"974": {"find": "(\\bpop-up\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# If referring to a menu that pops up, just write |pop-up| without |menu|. If referring to a dialog box, write |dialog box|. %>"},
"975": {"find": "(\\bpopup\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# If referring to a menu that pops up, just write |pop-up| without |menu|. If referring to a dialog box, write |dialog box|. %>"},
"976": {"find": "(\\bpost[^-](?!res)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Check if a hyphen is missing. %>"},
"977": {"find": "(\\bpostgresSQL\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |PostgreSQL| is preferred. %>"},
"978": {"find": "(\\bPP\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use this acronym for the brand name. %>"},
"979": {"find": "(\\bpp\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use this acronym for the brand name. %>"},
"980": {"find": "(\\bpre[\\s\\n]\\w(?!lass)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Check if a hyphen is missing. %>"},
"981": {"find": "(\\bpreprovision\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |pre-provision| is preferred. %>"},
"982": {"find": "(\\bPreprovision\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Pre-provision| is preferred. %>"},
"983": {"find": "(\\bPreprovisioned\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Pre-provisioned| is preferred. %>"},
"984": {"find": "(\\bpreprovisioned\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |pre-provisioned| is preferred. %>"},
"985": {"find": "(\\bprerequisite\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Requirements are things needed to install and run the product. We list them on the product index page. Prerequisites are things needed for a given procedure beyond the product requirements. We list those on the procedure page. %>"},
"986": {"find": "(\\bprior[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |before| is preferred. %>"},
"987": {"find": "(\\bprocfile\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Procfile| is preferred. %>"},
"988": {"find": "(\\bprod\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |production| is preferred. %>"},
"989": {"find": "(\\bProduct[\\s\\n]Version[\\s\\n]Matrix\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Product Compatibility Matrix| is preferred. %>"},
"990": {"find": "(\\bprompt\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dialog box| is preferred. %>"},
"991": {"find": "(\\bQuorum[\\s\\n]Queue\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |quorum queue| is preferred. %>"},
"992": {"find": "(\\bQuorum[\\s\\n]Queues\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |quorum queues| is preferred. %>"},
"993": {"find": "(\\bRabbit[\\s\\n]MQ\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |RabbitMQ| is preferred. %>"},
"994": {"find": "(\\bRabbitMQ[\\s\\n]\\[Kubernetes\\](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"995": {"find": "(\\bRabbitMQ[\\s\\n]&#91;Kubernetes&#93;(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"996": {"find": "(\\bRabbitMQ[\\s\\n]dashboard\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |RabbitMQ Management UI| is preferred. %>"},
"997": {"find": "(\\bRabbitMQ[\\s\\n]Dashboard\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |RabbitMQ Management UI| is preferred. %>"},
"998": {"find": "(\\bRabbitMQ[\\s\\n]for[\\s\\n]Kubernetes(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"999": {"find": "(\\bRabbitMQ[\\s\\n]for[\\s\\n]Pivotal[\\s\\n]Platform(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"1000": {"find": "(\\bRabbitMQ[\\s\\n]for[\\s\\n]VMware[\\s\\n]Tanzu[\\s\\n]\\[Kubernetes\\](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"1001": {"find": "(\\bRabbitMQ[\\s\\n]for[\\s\\n]VMware[\\s\\n]Tanzu[\\s\\n]&#91;Kubernetes&#93;(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"1002": {"find": "(\\bRabbitMQ[\\s\\n]Management[\\s\\n]Interface\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |RabbitMQ Management UI| is preferred. %>"},
"1003": {"find": "(\\bRabbitMq\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |RabbitMQ| is preferred. %>"},
"1004": {"find": "(\\bRabbitMQCluster\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |RabbitmqCluster| is preferred. %>"},
"1005": {"find": "(\\bRabbitMQcluster\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |RabbitmqCluster| is preferred. %>"},
"1006": {"find": "(\\bRabbitmqcluster\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |RabbitmqCluster| is preferred. %>"},
"1007": {"find": "(\\bRabbitmqClusters\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The plural form is |`RabbitmqCluster` resources|. %>"},
"1008": {"find": "(\\bRam\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |RAM| is preferred. %>"},
"1009": {"find": "(\\bram\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |RAM| is preferred. %>"},
"1010": {"find": "(\\bre-generate\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |regenerate| is preferred. %>"},
"1011": {"find": "(\\bRe-generate\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Re-generate| is preferred. %>"},
"1012": {"find": "(\\bre-stage\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |restage| is preferred. %>"},
"1013": {"find": "(\\bRe-stage\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Restage| is preferred. %>"},
"1014": {"find": "(\\bre-subscribe\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |resubscribe| is preferred. %>"},
"1015": {"find": "(\\bRe-subscribe\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Re-subscribe| is preferred. %>"},
"1016": {"find": "(\\bread[\\s\\n]more[\\s\\n]on\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |read more about| is preferred. %>"},
"1017": {"find": "(\\breboot\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |restart| is preferred. %>"},
"1018": {"find": "(\\brecommend[\\s\\n]against\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |VMware discourages| is preferred for closed source. |Cloud Foundry discourages| for open source. %>"},
"1019": {"find": "(\\brecommendation[\\s\\n]on\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# recommendation for %>"},
"1020": {"find": "(\\brecommendations[\\s\\n]on\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# recommendations for %>"},
"1021": {"find": "(\\brecommends[\\s\\n]against\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |VMware discourages| is preferred for closed source. |Cloud Foundry discourages| for open source. %>"},
"1022": {"find": "(\\bRecreate(?![\\s\\n][A-Z])(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |re-create| is preferred. %>"},
"1023": {"find": "(\\brecreate\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |re-create| is preferred. %>"},
"1024": {"find": "(\\brecreated\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |re-created| is preferred. %>"},
"1025": {"find": "(\\bRecreated\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Re-created| is preferred. %>"},
"1026": {"find": "(\\brecreates\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |re-creates| is preferred. %>"},
"1027": {"find": "(\\brecreating\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |re-creating| is preferred %>"},
"1028": {"find": "(\\bRecreating\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Re-creating| is preferred. %>"},
"1029": {"find": "(\\bRedis[\\s\\n]for[\\s\\n]Pivotal[\\s\\n]Platform(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"1030": {"find": "(\\brefarch\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The directory name |plan| is preferred over |refarch|. %>"},
"1031": {"find": "(\\brefer[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# If telling the reader to read something else, use |see|. %>"},
"1032": {"find": "(\\bRefer[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# If telling the reader to read somewhere else, use |See|. %>"},
"1033": {"find": "(\\brepo\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |repository| is preferred. %>"},
"1034": {"find": "(\\brequirement\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Requirements are things needed to install and run the product. We list them on the product index page. Prerequisites are things needed for a given procedure beyond the product requirements. We list those on the procedure page. %>"},
"1035": {"find": "(\\bResolved\\b[\\s\\n]\\bIssue\\b(?=\\n+[^:]+\\.)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Add a stem to introduce the resolved issue. %>"},
"1036": {"find": "(\\bResolved\\b[\\s\\n]\\bIssues\\b(?=\\n+[^:]+\\.)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Add a stem to introduce the resolved issues. %>"},
"1037": {"find": "(\\brestoration\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use |restore| as both a verb and a noun. %>"},
"1038": {"find": "(\\bresults[\\s\\n]in\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider replacing with |causes|. %>"},
"1039": {"find": "(\\bresurrector\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Resurrector| is preferred. %>"},
"1040": {"find": "(\\bright[\\s\\n]hand\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |right-hand| is preferred if modifying a noun, as in |right-hand pane|. %>"},
"1041": {"find": "(\\bRMQ[\\s\\n]dashboard\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |RabbitMQ Management UI| is preferred. %>"},
"1042": {"find": "(\\bRMQ[\\s\\n]Dashboard\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |RabbitMQ Management UI| is preferred. %>"},
"1043": {"find": "(\\bRMQ[\\s\\n]for[\\s\\n]VMs\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>"},
"1044": {"find": "(\\bRMQ[\\s\\n]Management[\\s\\n]Interface\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |RabbitMQ Management UI| is preferred. %>"},
"1045": {"find": "(\\brun[\\s\\n]time\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |runtime| is preferred unless referring to the time it takes a program to run. %>"},
"1046": {"find": "(\\bRunner[\\s\\n]VM\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |host VM| is preferred. %>"},
"1047": {"find": "(\\bRuntime[\\s\\n]CredHub\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |runtime CredHub| is preferred. %>"},
"1048": {"find": "(\\bruntimes\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |runtime durations| or |runtime environments| is preferred, depending on meaning. %>"},
"1049": {"find": "(\\bSecure[\\s\\n]Shell\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |SSH| is preferred. %>"},
"1050": {"find": "(\\bSecurity[\\s\\n]Assertion[\\s\\n]Markup[\\s\\n]Language\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Never spell out SAML. %>"},
"1051": {"find": "(\\bsecurity[\\s\\n]assertion[\\s\\n]markup[\\s\\n]language\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Never spell out SAML. %>"},
"1052": {"find": "(\\bsegregate\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |separate| is preferred. %>"},
"1053": {"find": "(\\bSegregate\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Separate| is preferred. %>"},
"1054": {"find": "(\\bsegregation\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |separation| is preferred. %>"},
"1055": {"find": "(\\bSegregation\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Separation| is preferred. %>"},
"1056": {"find": "(\\bselect[\\s\\n][A-Z](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Embolden the names of UI elements that you instruct the reader to interact with. %>"},
"1057": {"find": "(\\bSelect[\\s\\n][A-Z](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Embolden the names of UI elements that you instruct the reader to interact with. %>"},
"1058": {"find": "(\\bService-Gateway[\\s\\n]access\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The RabbitMQ feature is |Service-gateway access|. %>"},
"1059": {"find": "(\\bService-gateway[\\s\\n]Access\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The RabbitMQ feature is |Service-gateway access|. %>"},
"1060": {"find": "(\\bService-Gateway[\\s\\n]Access\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The RabbitMQ feature is |Service-gateway access|. %>"},
"1061": {"find": "(\\bservice[\\s\\n]broker[\\s\\n]API\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Service Broker API| is preferred. %>"},
"1062": {"find": "(\\bService[\\s\\n]Gateway[\\s\\n]Access\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The RabbitMQ feature is |Service-gateway access|. %>"},
"1063": {"find": "(\\bservice[\\s\\n]instance[\\s\\n]credentials\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |binding credentials| is preferred. %>"},
"1064": {"find": "(\\bService[\\s\\n]Key\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Only capitalize |service key| when it is part of a title %>"},
"1065": {"find": "(\\bservice[\\s\\n]principle\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# This is likely a misspelling of |service principal|. %>"},
"1066": {"find": "(\\bService[\\s\\n]principle\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# This is likely a misspelling of |Service principal|. %>"},
"1067": {"find": "(\\bService[\\s\\n]Principle\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# This is likely a misspelling of |Service Principal|. %>"},
"1068": {"find": "(\\bServices[\\s\\n]Marketplace\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Marketplace| is preferred. %>"},
"1069": {"find": "(\\bServing[\\s\\n]component\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# In Knative docs, |Knative Serving| is preferred, sans |component|. %>"},
"1070": {"find": "(\\bserving\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# In Knative docs, |Knative Serving| is preferred. %>"},
"1071": {"find": "(\\bset[\\s\\n]to[\\s\\n]off\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |disabled| might be better. %>"},
"1072": {"find": "(\\bset[\\s\\n]to[\\s\\n]on\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |enabled| might be better. %>"},
"1073": {"find": "(\\bsettings[\\s\\n]data\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |configuration data| is preferred. %>"},
"1074": {"find": "(\\bseventy\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use numerals for numbers greater than nine. %>"},
"1075": {"find": "(\\bsha\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |SHA| is preferred. %>"},
"1076": {"find": "(\\bshan't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1077": {"find": "(\\bshared[\\s\\n]VM[\\s\\n]plan\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |shared-VM plan| is preferred. %>"},
"1078": {"find": "(\\bShared[\\s\\n]VM[\\s\\n]plan\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |shared-VM plan| is preferred. %>"},
"1079": {"find": "(\\bShared[\\s\\n]VM[\\s\\n]Plan\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |shared-VM plan| is preferred. %>"},
"1080": {"find": "(\\bshared[\\s\\n]VM[\\s\\n]Plan\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |shared-VM plan| is preferred. %>"},
"1081": {"find": "(\\bshe'd\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1082": {"find": "(\\bShe'd\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1083": {"find": "(\\bshe'll\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1084": {"find": "(\\bShe'll\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1085": {"find": "(\\bshe's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1086": {"find": "(\\bShe's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1087": {"find": "(\\bshould've\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1088": {"find": "(\\bshould[\\s\\n]now\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Favour certainty and agency: |the app now works| over |the app should now work|. |VMware recommends| over |you should|.  %>"},
"1089": {"find": "(\\bshouldn't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1090": {"find": "(\\bsimple\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Avoid suggesting an instruction is |simple| or |easy|. %>"},
"1091": {"find": "(\\bsimply\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Avoid suggesting an instruction is |simple| or |easy|. %>"},
"1092": {"find": "(\\bsince\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use |since| where you can use |because|. %>"},
"1093": {"find": "(\\bSince\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use |Since| where you can use |Because|. %>"},
"1094": {"find": "(\\bsingle[\\s\\n]sign-on(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"1095": {"find": "(\\bsixty\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use numerals for numbers greater than nine. %>"},
"1096": {"find": "(\\bslave\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred alternatives: |secondary|, |worker|. Other alternative: |replica|. %>"},
"1097": {"find": "(\\bSlave\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred alternatives: |Secondary|, |Worker|. Other alternative: |Replica|. %>"},
"1098": {"find": "(\\bslave\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |follower| is preferred. %>"},
"1099": {"find": "(\\bsmoketest\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |smoke test| (n.) or |smoke-test| (adj.) is preferred. %>"},
"1100": {"find": "(\\bSmoketest\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |smoke tests| (n.) or |smoke-tests| (adj.) is preferred. %>"},
"1101": {"find": "(\\bsmoketests\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |smoke tests| (n.) or |smoke-tests| (adj.) is preferred. %>"},
"1102": {"find": "(\\bSmoketests\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |smoke tests| (n.) or |smoke-tests| (adj.) is preferred. %>"},
"1103": {"find": "(\\bsocks\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |SOCKS| is preferred. Do not spell it out, even on first use. %>"},
"1104": {"find": "(\\bSocks\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |SOCKS| is preferred. Do not spell it out, even on first use. %>"},
"1105": {"find": "(\\bsomebody's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1106": {"find": "(\\bSomebody's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1107": {"find": "(\\bsomeone's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1108": {"find": "(\\bSomeone's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1109": {"find": "(\\bspec\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |specifications| is preferred. %>"},
"1110": {"find": "(\\bspecs\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |specifications| is preferred. %>"},
"1111": {"find": "(\\bSpring[\\s\\n]\\d\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Spring Framework #| is preferred. %>"},
"1112": {"find": "(\\bSpring[\\s\\n]Cloud[\\s\\n]DataFlow\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Spring Cloud Data Flow| is preferred. %>"},
"1113": {"find": "(\\bSpring[\\s\\n]framework[\\s\\n]\\d(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Spring Framework #| is preferred. %>"},
"1114": {"find": "(\\bspringboot\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Spring Boot| is preferred. %>"},
"1115": {"find": "(\\bSpringBoot\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Spring Boot| is preferred. %>"},
"1116": {"find": "(\\bssh\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |SSH| is preferred. %>"},
"1117": {"find": "(\\bstandard[\\s\\n]error\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |stderr| is preferred. %>"},
"1118": {"find": "(\\bstandard[\\s\\n]input\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |stdin| is preferred. %>"},
"1119": {"find": "(\\bstandard[\\s\\n]output\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |stdout| is preferred. %>"},
"1120": {"find": "(\\bstanza\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |section| is preferred. %>"},
"1121": {"find": "(\\bstatefulset\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |StatefulSet| is the K8s docs style. %>"},
"1122": {"find": "(\\bStatefulset\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |StatefulSet| is the K8s docs style. %>"},
"1123": {"find": "(\\bstatefulsets\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |StatefulSet| is the K8s docs style. %>"},
"1124": {"find": "(\\bStatefulsets\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |StatefulSet| is the K8s docs style. %>"},
"1125": {"find": "(\\bSTDERR\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |stderr| is preferred. %>"},
"1126": {"find": "(\\bSTDIN\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |stdin| is preferred. %>"},
"1127": {"find": "(\\bSTDOUT\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |stdout| is preferred. %>"},
"1128": {"find": "(\\bstem-cell\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |stemcell| is preferred. %>"},
"1129": {"find": "(\\bstem[\\s\\n]cell\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |stemcell| is preferred. %>"},
"1130": {"find": "(\\bStemCell\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |stemcell| is preferred. %>"},
"1131": {"find": "(\\bsteps[\\s\\n]*\\w*:(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# To introduce steps just write |To do x:| %>"},
"1132": {"find": "(\\bsteps[\\s\\n]on[\\s\\n][a-z]*ing\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |steps for doing x| is more natural English than |steps on doing x| %>"},
"1133": {"find": "(\\bSteps[\\s\\n]on[\\s\\n][a-z]*ing\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Steps for doing x| is more natural English than |Steps on doing x| %>"},
"1134": {"find": "(\\bstorageClass\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |StorageClass| is the K8s docs style. %>"},
"1135": {"find": "(\\bStorageClasses\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |storage classes| is preferred. Although, for k8s, the singular is |StorageClass|. %>"},
"1136": {"find": "(\\bstorageclasses\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |storage classes| is preferred. Although, for k8s, the singular is |StorageClass|. %>"},
"1137": {"find": "(\\bstrongly\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider deleting, especially if it precedes |recommend|. %>"},
"1138": {"find": "(\\bsub-directory\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |subdirectory| is preferred. %>"},
"1139": {"find": "(\\bsub-property\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |subproperty| is preferred. %>"},
"1140": {"find": "(\\bsuite\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Only use |suite| when describing a bundle of products sold together under a single SKU. %>"},
"1141": {"find": "(\\bsuper[\\s\\n]user\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |superuser| is preferred. %>"},
"1142": {"find": "(\\bSuper[\\s\\n]user\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Superuser| is preferred. %>"},
"1143": {"find": "(\\bsynch\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |sync| is preferred. %>"},
"1144": {"find": "(\\bsynchronize\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |sync| is preferred. %>"},
"1145": {"find": "(\\bsynchronized\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |synced| is preferred. %>"},
"1146": {"find": "(\\btable\\>[\\s\\n]*\\*(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Put the asterisk in superscript tags. %>"},
"1147": {"find": "(\\bTanzu[\\s\\n]Application[\\s\\n]Service\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.app_runtime_full or, if this is for Windows, vars.windows_runtime_full, and if alt text, #{ %>"},
"1148": {"find": "(\\bTanzu[\\s\\n]Kubernetes[\\s\\n]Grid[\\s\\n]Integrated[\\s\\n]Edition\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.k8s_runtime_abbr or, if in alt text,  #{vars.k8s_runtime_abbr} %>"},
"1149": {"find": "(\\bTanzu[\\s\\n]Net\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |VMware Tanzu Network| is preferred. %>"},
"1150": {"find": "(\\btanzu\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The brand is |Tanzu|. %>"},
"1151": {"find": "(\\bTanzuNet\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |VMware Tanzu Network| is preferred. %>"},
"1152": {"find": "(\\btar\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |TAR| is preferred. %>"},
"1153": {"find": "(\\bTAS(?![\\s\\n]for)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Depending on the product, use vars.app_runtime_abbr or vars.windows_runtime_abbr or, if in alt text, #{ %>"},
"1154": {"find": "(\\bTAS[\\s\\n]for[\\s\\n]Kubernetes\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.app_runtime_k8s_abbr or, if in alt text, #{vars.app_runtime_k8s_abbr} %>"},
"1155": {"find": "(\\bTAS[\\s\\n]for[\\s\\n]VMs(?=([\\.\\n]|[\\s\\n][^\\[&]))(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.app_runtime_abbr or, if in alt text, #{vars.app_runtime_abbr} %>"},
"1156": {"find": "(\\bTAS[\\s\\n]for[\\s\\n]VMs[\\s\\n]\\[Windows\\](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.windows_runtime_abbr or, if in alt text, #{vars.windows_runtime_abbr} %>"},
"1157": {"find": "(\\bTAS[\\s\\n]for[\\s\\n]VMs[\\s\\n]&#91;Windows&#93;(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.windows_runtime_abbr or, if in alt text, #{vars.windows_runtime_abbr} %>"},
"1158": {"find": "(\\bTasks\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |tasks| is preferred. %>"},
"1159": {"find": "(\\bterminal[\\s\\n]emulator\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |shell| is preferred. %>"},
"1160": {"find": "(\\btext[\\s\\n]area\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |field| is preferred. %>"},
"1161": {"find": "(\\btextbox\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |field| is preferred. %>"},
"1162": {"find": "(\\bthat'll\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1163": {"find": "(\\bThat'll\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1164": {"find": "(\\bthat's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1165": {"find": "(\\bThat's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1166": {"find": "(\\bthat[\\s\\n]are[\\s\\n]in[\\s\\n]effect\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"1167": {"find": "(\\bthat[\\s\\n]is[\\s\\n]in[\\s\\n]effect\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"1168": {"find": "(\\bthe[\\s\\n](?!above|below|first|following|last|next|previous|same)[a-z-]*(?=[\\s\\n]command\\b)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Missing code tags? %>"},
"1169": {"find": "(\\bThe[\\s\\n](?!above|below|first|following|last|next|previous|same)[a-z-]*(?=[\\s\\n]command\\b)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Missing code tags? %>"},
"1170": {"find": "(\\bthe[\\s\\n][A-Za-z-]+[\\s\\n]process\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Avoid nominalization: |while deleting| is better than |during the deletion process|. %>"},
"1171": {"find": "(\\bThe[\\s\\n][A-Za-z-]+[\\s\\n]process\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Avoid nominalization: |while deleting| is better than |during the deletion process|. %>"},
"1172": {"find": "(\\bthe[\\s\\n]Apps[\\s\\n]Manager\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Just |Apps Manager| is preferred -- there is no preceding |the|. %>"},
"1173": {"find": "(\\bthe[\\s\\n]deploy\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |the deployment| is preferred. %>"},
"1174": {"find": "(\\bThe[\\s\\n]deploy\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |The deployment| is preferred. %>"},
"1175": {"find": "(\\bthe[\\s\\n]following[\\s\\n]commands\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |these commands| is preferred %>"},
"1176": {"find": "(\\bthe[\\s\\n]install\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |the installation| is preferred. %>"},
"1177": {"find": "(\\bthe[\\s\\n]Loggregator\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Just |Loggregator| is preferred -- capitalized and without a preceding |the|. %>"},
"1178": {"find": "(\\bthe[\\s\\n]machine\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |the local machine| is preferred. %>"},
"1179": {"find": "(\\bthe[\\s\\n]toggle\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use |toggle|. Do not use |Option button|. You may use |radio button|; but, in general, try to avoid referring to the button and instead write |Click BUTTON-TEXT|. %>"},
"1180": {"find": "(\\bthere's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1181": {"find": "(\\bThere's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1182": {"find": "(\\bthey'd\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1183": {"find": "(\\bThey'd\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1184": {"find": "(\\bthey'll\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1185": {"find": "(\\bThey'll\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1186": {"find": "(\\bthey're\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1187": {"find": "(\\bThey're\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1188": {"find": "(\\bthey've\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1189": {"find": "(\\bThey've\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1190": {"find": "(\\bthirty\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use numerals for numbers greater than nine. %>"},
"1191": {"find": "(\\bthrice\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |three times| is preferred. %>"},
"1192": {"find": "(\\bthus\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Re-write the sentence to drop |thus| or, if that is not possible, replace with |therefore|. %>"},
"1193": {"find": "(\\bThus\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Re-write the sentence to drop |Thus| or, if that is not possible, replace with |therefore|. %>"},
"1194": {"find": "(\\bTick\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# For checkboxes, |Enable| or |Select| is preferred. %>"},
"1195": {"find": "(\\btime[\\s\\n]out\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |timeout| is preferred, both as a noun and a verb. %>"},
"1196": {"find": "(\\btime[\\s\\n]to[\\s\\n]live[\\s\\n](?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |TTL| after first use. %>"},
"1197": {"find": "(\\bto[\\s\\n]login\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use |login| (n) and |log in| (v). %>"},
"1198": {"find": "(\\bTraffic-controller\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Traffic Controller| is preferred. %>"},
"1199": {"find": "(\\bTraffic-Controller\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Traffic Controller| is preferred. %>"},
"1200": {"find": "(\\bTrafficController\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Traffic Controller| is preferred. %>"},
"1201": {"find": "(\\bTransmission[\\s\\n]Control[\\s\\n]Protocol\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |TCP| is preferred. %>"},
"1202": {"find": "(\\bTransport[\\s\\n]layer[\\s\\n]security(?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |TLS| after the first use. %>"},
"1203": {"find": "(\\bTransport[\\s\\n]Layer[\\s\\n]Security(?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |TLS| after the first use. %>"},
"1204": {"find": "(\\btransport[\\s\\n]layer[\\s\\n]security(?!\\s\\()(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Shorten to |TLS| after the first use. %>"},
"1205": {"find": "(\\btriple-parens[\\s\\n]expression\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |triple-parentheses expression| is preferred. %>"},
"1206": {"find": "(\\bTSMGR(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_abbr or, if in alt text, #{vars.product_abbr} %>"},
"1207": {"find": "(\\bTurn[\\s\\n]off\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |record| is preferred. %>"},
"1208": {"find": "(\\bturn[\\s\\n]off\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |disable| is preferred. %>"},
"1209": {"find": "(\\bTurn[\\s\\n]on\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |record| is preferred. %>"},
"1210": {"find": "(\\bturn[\\s\\n]on\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |enable| is preferred. %>"},
"1211": {"find": "(\\btwenty\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use numerals for numbers greater than nine. %>"},
"1212": {"find": "(\\btwo[\\s\\n]times\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |twice| is preferred. %>"},
"1213": {"find": "(\\btype:(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |run:| is preferred. %>"},
"1214": {"find": "(\\btype[\\s\\n]the[\\s\\n]following\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |To X, run:| and |X by running:| are preferred. %>"},
"1215": {"find": "(\\bUAA[\\s\\n]Client\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |UAA Command Line Client (UAAC)| is preferred for use. |UAAC| thereafter. %>"},
"1216": {"find": "(\\bUAA[\\s\\n]Command[\\s\\n]Client\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |UAA Command Line Client (UAAC)| is preferred for use. |UAAC| thereafter. %>"},
"1217": {"find": "(\\bUAA[\\s\\n]command[\\s\\n]line\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |UAA Command Line Client (UAAC)| is preferred for use. |UAAC| thereafter. %>"},
"1218": {"find": "(\\buaac\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |UAAC| is preferred. %>"},
"1219": {"find": "(\\bun-check\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Disable the LABEL-NAME checkbox| is preferred. Likewise for |Enable the LABEL-NAME checkbox|. %>"},
"1220": {"find": "(\\bun-register\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# deregister %>"},
"1221": {"find": "(\\bun-tick\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Disable the LABEL-NAME checkbox| is preferred. Likewise for |Enable the LABEL-NAME checkbox|. %>"},
"1222": {"find": "(\\buncheck\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Disable the LABEL-NAME checkbox| is preferred. Likewise for |Enable the LABEL-NAME checkbox|. %>"},
"1223": {"find": "(\\bUnderstanding\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# If a procedural topic title, go with |How to...|. If a conceptual title, go with |About...| or |Overview of...| or nothing at all. %>"},
"1224": {"find": "(\\bUniform[\\s\\n]Resource[\\s\\n]Locator\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |URL| is preferred. %>"},
"1225": {"find": "(\\bunix\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Unix| is preferred. %>"},
"1226": {"find": "(\\bUNIX\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Unix| is preferred. %>"},
"1227": {"find": "(\\bunregister\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |deregister| is preferred. %>"},
"1228": {"find": "(\\bunsecure\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |not secure| is preferred. %>"},
"1229": {"find": "(\\bUnsecure\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Not secure| is preferred. %>"},
"1230": {"find": "(\\buntick\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Disable the LABEL-NAME checkbox| is preferred. Likewise for |Enable the LABEL-NAME checkbox|. %>"},
"1231": {"find": "(\\bupgradeable\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |upgradable| is preferred. %>"},
"1232": {"find": "(\\bupper[\\s\\n]case\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |uppercase| is preferred. %>"},
"1233": {"find": "(\\bupscale\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |scale up| is preferred. %>"},
"1234": {"find": "(\\bUrl\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |URL| is preferred. %>"},
"1235": {"find": "(\\bURl\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |URL| is preferred. %>"},
"1236": {"find": "(\\burl\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |URL| is preferred. %>"},
"1237": {"find": "(\\bus\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Specify the party (VMware, Cloud Foundry, etc). %>"},
"1238": {"find": "(\\busage[\\s\\n]data\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |consumption data| is preferred. %>"},
"1239": {"find": "(\\busage[\\s\\n]service\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Usage service| is preferred. %>"},
"1240": {"find": "(\\bUsage[\\s\\n]Service\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Usage service| is preferred. %>"},
"1241": {"find": "(\\buse[\\s\\n]the[\\s\\n]command[\\s\\n]line\\b(?![\\n\\s]interface)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |command line interface| on first use. |CLI| thereafter. %>"},
"1242": {"find": "(\\buse[\\s\\n]the[\\s\\n]command\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |run| is preferred. %>"},
"1243": {"find": "(\\buser[\\s\\n]interface\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |UI| is preferred. %>"},
"1244": {"find": "(\\buser[\\s\\n]name\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |username| is preferred. %>"},
"1245": {"find": "(\\bUser[\\s\\n]name\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Username| is preferred. %>"},
"1246": {"find": "(\\busername\\/password[\\s\\n]pair\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |username-password pair| is preferred. %>"},
"1247": {"find": "(\\bUsername\\/password[\\s\\n]pair\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Username-password pair| is preferred. %>"},
"1248": {"find": "(\\busername\\/password[\\s\\n]pairs\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |username-password pairs| is preferred. %>"},
"1249": {"find": "(\\bUsername\\/password[\\s\\n]pairs\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Username-password pairs| is preferred. %>"},
"1250": {"find": "(\\busing[\\s\\n]the[\\s\\n]command[\\s\\n]line\\b(?![\\n\\s]interface)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |command line interface| on first use. |CLI| thereafter. %>"},
"1251": {"find": "(\\busing[\\s\\n]the[\\s\\n]command\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |running| is preferred. %>"},
"1252": {"find": "(\\butilizing\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |through| is preferred. %>"},
"1253": {"find": "(\\buuid\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |UUID| is preferred. %>"},
"1254": {"find": "(\\bValidate[\\s\\n]that\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Verify that| is plainer English. %>"},
"1255": {"find": "(\\bvalidate[\\s\\n]that\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |verify that| is plainer English. %>"},
"1256": {"find": "(\\bVerify[\\s\\n]if\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Verify that| is better. %>"},
"1257": {"find": "(\\bverify[\\s\\n]if\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |verify that| is better. %>"},
"1258": {"find": "(\\bvhost\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |virtual host| is preferred. %>"},
"1259": {"find": "(\\bVhost\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |virtual host| is preferred. %>"},
"1260": {"find": "(\\bvia\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |through|, |using| and |by means of| are preferred. %>"},
"1261": {"find": "(\\bvim\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The text editor is called |Vim|. %>"},
"1262": {"find": "(\\bVIM\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The text editor is called |Vim|. %>"},
"1263": {"find": "(\\bVirtual[\\s\\n]Machine[\\s\\n]Metrics\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |BOSH health metrics| is preferred. %>"},
"1264": {"find": "(\\bvirtual[\\s\\n]machine\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |VM| is preferred. %>"},
"1265": {"find": "(\\bvm\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |VM| is preferred. %>"},
"1266": {"find": "(\\bVMT[\\s\\n]network(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_network or, if in alt text, #{vars.product_network} %>"},
"1267": {"find": "(\\bVMT[\\s\\n]Network(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_network or, if in alt text, #{vars.product_network} %>"},
"1268": {"find": "(\\bVMTN(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_network or, if in alt text, #{vars.product_network} %>"},
"1269": {"find": "(\\bVMware[\\s\\n]Network(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_network or, if in alt text, #{vars.product_network} %>"},
"1270": {"find": "(\\bVMware[\\s\\n]network(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_network or, if in alt text, #{vars.product_network} %>"},
"1271": {"find": "(\\bVMware[\\s\\n]Tanzu[\\s\\n]Network(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_network or, if in alt text, #{vars.product_network} %>"},
"1272": {"find": "(\\bVMware[\\s\\n]Tanzu[\\s\\n]network(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_network or, if in alt text, #{vars.product_network} %>"},
"1273": {"find": "(\\bVMware[\\s\\n]Tanzu[\\s\\n]RabbitMQ[\\s\\n]\\[K8s\\](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"1274": {"find": "(\\bVMware[\\s\\n]Tanzu[\\s\\n]RabbitMQ[\\s\\n]\\[VMs\\](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"1275": {"find": "(\\bVMware[\\s\\n]Tanzu[\\s\\n]SQL[\\s\\n]\\[MySQL\\](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"1276": {"find": "(\\bVMware[\\s\\n]Tanzu[\\s\\n]SQL[\\s\\n]\\[VMs\\](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use <%= vars.product_full or, if in alt text, #{vars.product_full} %>"},
"1277": {"find": "(\\bVMWare\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |VMware| is preferred. %>"},
"1278": {"find": "(\\bVmware\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |VMware| is preferred. %>"},
"1279": {"find": "(\\bVmWare\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |VMware| is preferred. %>"},
"1280": {"find": "(\\bvmware\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |VMware| is preferred. %>"},
"1281": {"find": "(\\bVoluminous\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Very long| and |Very large| are plainer alternatives. %>"},
"1282": {"find": "(\\bvoluminous\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |very long| and |very large| are plainer alternatives. %>"},
"1283": {"find": "(\\bwarning[\\s\\n]box\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dialog box| is preferred. %>"},
"1284": {"find": "(\\bWarning[\\s\\n]box\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dialog box| is preferred. %>"},
"1285": {"find": "(\\bWarning[\\s\\n]window\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dialog box| is preferred. %>"},
"1286": {"find": "(\\bwarning[\\s\\n]window\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |dialog box| is preferred. %>"},
"1287": {"find": "(\\bWARNING\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Warning| is preferred. %>"},
"1288": {"find": "(\\bwasn't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1289": {"find": "(\\bwe'd\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Specify the party (VMware, Cloud Foundry, etc) and do not use contractions. %>"},
"1290": {"find": "(\\bWe'd\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Specify the party (VMware, Cloud Foundry, etc) and do not use contractions. %>"},
"1291": {"find": "(\\bwe'll\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Specify the party (VMware, Cloud Foundry, etc) and do not use contractions. %>"},
"1292": {"find": "(\\bWe'll\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Specify the party (VMware, Cloud Foundry, etc) and do not use contractions. %>"},
"1293": {"find": "(\\bwe're\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Specify the party (VMware, Cloud Foundry, etc) and do not use contractions. %>"},
"1294": {"find": "(\\bWe're\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Specify the party (VMware, Cloud Foundry, etc) and do not use contractions. %>"},
"1295": {"find": "(\\bwe've\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Specify the party (VMware, Cloud Foundry, etc) and do not use contractions. %>"},
"1296": {"find": "(\\bWe've\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Specify the party (VMware, Cloud Foundry, etc) and do not use contractions. %>"},
"1297": {"find": "(\\bwe\\b[^'](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Specify the party (VMware, Cloud Foundry, etc). %>"},
"1298": {"find": "(\\bWe\\b[^'](?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Specify the party (VMware, Cloud Foundry, etc). %>"},
"1299": {"find": "(\\bweb[\\s\\n]site\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |website| is preferred. %>"},
"1300": {"find": "(\\bwebdav\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |WebDAV| is preferred. %>"},
"1301": {"find": "(\\bWebDav\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |WebDAV| is preferred. %>"},
"1302": {"find": "(\\bWebSockets\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |WebSocket| is preferred: there is a WebSocket protocol, not multiple WebSockets. %>"},
"1303": {"find": "(\\bweren't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1304": {"find": "(\\bwhat's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1305": {"find": "(\\bWhat's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1306": {"find": "(\\bwhen[\\s\\n]satisfied\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"1307": {"find": "(\\bWhen[\\s\\n]satisfied\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"1308": {"find": "(\\bwhen[\\s\\n]you[\\s\\n]are[\\s\\n]satisfied\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"1309": {"find": "(\\bWhen[\\s\\n]you[\\s\\n]are[\\s\\n]satisfied\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant? %>"},
"1310": {"find": "(\\bWhere[\\s\\n][A-Z\\-\\_]+[\\s\\n]is\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Place backticks or code tags around the placeholder. %>"},
"1311": {"find": "(\\bwhether[\\s\\n]or[\\s\\n]not\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |whether| is more succinct. %>"},
"1312": {"find": "(\\bwhile[\\s\\n]concurrently\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant use of |concurrently|? %>"},
"1313": {"find": "(\\bwhile[\\s\\n]simultaneously\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Redundant use of |simultaneously|? %>"},
"1314": {"find": "(\\bWhile\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Replace with |Although| if it makes sense to do so. %>"},
"1315": {"find": "(\\bwhite-list\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred noun: |allowlist|. Other alternatives: |safelist|, |acceptlist|, |approved list|. Preferred verb: |allow|. Other alternative: |approve|. %>"},
"1316": {"find": "(\\bWhite-list\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred noun: |Allowlist|. Other alternatives: |Safelist|, |Acceptlist|, |Approved list|. Preferred verb: |Allow|. Other alternative: |Approve|. %>"},
"1317": {"find": "(\\bwhite[\\s\\n]list\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred noun: |allowlist|. Other alternatives: |safelist|, |acceptlist|, |approved list|. Preferred verb: |allow|. Other alternative: |approve|. %>"},
"1318": {"find": "(\\bWhite[\\s\\n]list\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred noun: |Allowlist|. Other alternatives: |Safelist|, |Acceptlist|, |Approved list|. Preferred verb: |Allow|. Other alternative: |Approve|. %>"},
"1319": {"find": "(\\bwhitelist\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred noun: |allowlist|. Other alternatives: |safelist|, |acceptlist|, |approved list|. Preferred verb: |allow|. Other alternative: |approve|. %>"},
"1320": {"find": "(\\bWhitelist\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Preferred noun: |Allowlist|. Other alternatives: |Safelist|, |Acceptlist|, |Approved list|. Preferred verb: |Allow|. Other alternative: |Approve|. %>"},
"1321": {"find": "(\\bwho'll\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1322": {"find": "(\\bwho's\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1323": {"find": "(\\bwill\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Avoid |will|: present tense is preferred. %>"},
"1324": {"find": "(\\bWire\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |sync| is preferred. %>"},
"1325": {"find": "(\\bwire\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |sync| is preferred. %>"},
"1326": {"find": "(\\bWiring\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |sync| is preferred. %>"},
"1327": {"find": "(\\bwiring\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |sync| is preferred. %>"},
"1328": {"find": "(\\bwish\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |want| is preferred. %>"},
"1329": {"find": "(\\bwon't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1330": {"find": "(\\bwould\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Re-phrase for present tense if possible. %>"},
"1331": {"find": "(\\bwouldn't\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1332": {"find": "(\\bwrite[\\s\\n]down\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |record| is preferred. %>"},
"1333": {"find": "(\\by'all\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1334": {"find": "(\\bY'all\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1335": {"find": "(\\bYaml\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |YAML| is preferred. %>"},
"1336": {"find": "(\\bYML[\\s\\n]file\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |YAML file| is preferred. %>"},
"1337": {"find": "(\\byou'd\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1338": {"find": "(\\bYou'd\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1339": {"find": "(\\byou'll\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1340": {"find": "(\\bYou'll\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1341": {"find": "(\\byou're\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1342": {"find": "(\\bYou're\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1343": {"find": "(\\byou've\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1344": {"find": "(\\bYou've\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Do not use contractions. %>"},
"1345": {"find": "(\\byou[\\s\\n]can[\\s\\n]run\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Maybe replace with just |run|. %>"},
"1346": {"find": "(\\byou[\\s\\n]choose[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider if |choose| is redundant. %>"},
"1347": {"find": "(\\byou[\\s\\n]like\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Translation engines might struggle with this. %>"},
"1348": {"find": "(\\byou[\\s\\n]might[\\s\\n]want\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# If possible, replace with |VMware recommends| (or |Cloud Foundry recommends| if open source) or re-phrase as a mandate. %>"},
"1349": {"find": "(\\byou[\\s\\n]need[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider replacing with just |To|. %>"},
"1350": {"find": "(\\bYou[\\s\\n]need[\\s\\n]to\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Consider replacing with just |To|. %>"},
"1351": {"find": "(\\byour[\\s\\n]machine\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |your local machine| is preferred. %>"},
"1352": {"find": "(\\byoutube\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The brand name is |YouTube|. %>"},
"1353": {"find": "(\\bYoutube\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The brand name is |YouTube|. %>"},
"1354": {"find": "(\\d[\\s\\n]and[\\s\\n]above\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |# and later| is preferred. %>"},
"1355": {"find": "(\\d[\\s\\n]and[\\s\\n]below\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |# and earlier| is preferred. %>"},
"1356": {"find": "(\\d[\\s\\n]and[\\s\\n]greater\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |# and later| is preferred. %>"},
"1357": {"find": "(\\d[\\s\\n]and[\\s\\n]higher\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |# and later| is preferred. %>"},
"1358": {"find": "(\\d[\\s\\n]and[\\s\\n]lower\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |# and earlier| is preferred. %>"},
"1359": {"find": "(\\d[\\s\\n]bit\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Missing the dash: 128-bit is grammatically correct; 128 bit is not. %>"},
"1360": {"find": "(\\d[\\s\\n]GB\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |&nbsp;GB| is preferred. %>"},
"1361": {"find": "(\\d[\\s\\n]KB\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |&nbsp;KB| is preferred. %>"},
"1362": {"find": "(\\d[\\s\\n]MB\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |&nbsp;MB| is preferred. %>"},
"1363": {"find": "(\\d[\\s\\n]or[\\s\\n]above\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |# or later| is preferred. %>"},
"1364": {"find": "(\\d[\\s\\n]or[\\s\\n]below\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |# or earlier| is preferred. %>"},
"1365": {"find": "(\\d[\\s\\n]or[\\s\\n]greater\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |# or later| is preferred. %>"},
"1366": {"find": "(\\d[\\s\\n]or[\\s\\n]higher\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |# or later| is preferred. %>"},
"1367": {"find": "(\\d[\\s\\n]or[\\s\\n]lower\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |# or earlier| is preferred. %>"},
"1368": {"find": "(\\d\\.\\*(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |v1.2.x| is preferred for describing multiple patches for a given minor. %>"},
"1369": {"find": "(\\d&nbsp;bit\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Missing the dash: 128-bit is grammatically correct; 128 bit is not. %>"},
"1370": {"find": "(\\d+(st|nd|rd|th|)[\\s\\n]April\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The date format is |MONTH DD, YYYY| %>"},
"1371": {"find": "(\\d+(st|nd|rd|th|)[\\s\\n]August\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The date format is |MONTH DD, YYYY| %>"},
"1372": {"find": "(\\d+(st|nd|rd|th|)[\\s\\n]December\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The date format is |MONTH DD, YYYY| %>"},
"1373": {"find": "(\\d+(st|nd|rd|th|)[\\s\\n]February\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The date format is |MONTH DD, YYYY| %>"},
"1374": {"find": "(\\d+(st|nd|rd|th|)[\\s\\n]January\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The date format is |MONTH DD, YYYY| %>"},
"1375": {"find": "(\\d+(st|nd|rd|th|)[\\s\\n]July\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The date format is |MONTH DD, YYYY| %>"},
"1376": {"find": "(\\d+(st|nd|rd|th|)[\\s\\n]June\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The date format is |MONTH DD, YYYY| %>"},
"1377": {"find": "(\\d+(st|nd|rd|th|)[\\s\\n]March\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The date format is |MONTH DD, YYYY| %>"},
"1378": {"find": "(\\d+(st|nd|rd|th|)[\\s\\n]May\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The date format is |MONTH DD, YYYY| %>"},
"1379": {"find": "(\\d+(st|nd|rd|th|)[\\s\\n]November\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The date format is |MONTH DD, YYYY| %>"},
"1380": {"find": "(\\d+(st|nd|rd|th|)[\\s\\n]October\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The date format is |MONTH DD, YYYY| %>"},
"1381": {"find": "(\\d+(st|nd|rd|th|)[\\s\\n]September\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The date format is |MONTH DD, YYYY| %>"},
"1382": {"find": "(\\dGB\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |&nbsp;GB| is preferred. %>"},
"1383": {"find": "(\\dKB\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |&nbsp;KB| is preferred. %>"},
"1384": {"find": "(^(?!\\n)[\\*\\+\\-]\\s[A-Z-]{2,}(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Enclose placeholders in code tags. %>"},
"1385": {"find": "(^(?!\\n)\\*\\s(?!(\\*\\*|\\<strong|\\<b))[^:`\\n]*:(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Embolden run-in headings. %>"},
"1386": {"find": "(^(?!\\n|#).*\\bCloud[\\s\\n]Controller[\\s\\n]Database\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |Cloud Controller database| is preferred. %>"},
"1387": {"find": "(^[^\\n\\W]+[^\\n#\\<\\d\\(]*[^\\.].\\bBroker\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |broker| is the preferred casing. %>"},
"1388": {"find": "(^[^\\n\\W]+[^\\n#\\<\\d\\(]*[^\\.].\\bBrokers\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |brokers| is the preferred casing. %>"},
"1389": {"find": "(^[^\\n\\W]+[^\\n#\\<\\d\\(]*[^\\.].\\bChannel\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |channel| is the preferred casing. %>"},
"1390": {"find": "(^[^\\n\\W]+[^\\n#\\<\\d\\(]*[^\\.].\\bChannels\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |channels| is the preferred casing. %>"},
"1391": {"find": "(^[^\\n\\W]+[^\\n#\\<\\d\\(]*[^\\.].\\bComponent\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |component| is the preferred casing. %>"},
"1392": {"find": "(^[^\\n\\W]+[^\\n#\\<\\d\\(]*[^\\.].\\bComponents\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |components| is the preferred casing. %>"},
"1393": {"find": "(^[^\\n\\W]+[^\\n#\\<\\d\\(]*[^\\.].\\bJumpbox\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |jumpbox| is preferred. %>"},
"1394": {"find": "(^[^\\n\\W]+[^\\n#\\<\\d\\(]*[^\\.].\\bStemcell\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Lowercase is preferred unless |stemcell| starts a sentence or is in a title. %>"},
"1395": {"find": "(^[^\\n\\W]+[^\\n#\\<\\d\\(]*[^\\.].\\bStemcells\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Lowercase is preferred unless |stemcells| starts a sentence or is in a title. %>"},
"1396": {"find": "(^[^\\n\\W]+[^\\n#\\<\\d\\(]*[^\\.].\\bSyslog\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Lowercase is preferred unless |syslog| starts a sentence or is in a title. %>"},
"1397": {"find": "(^[^\\n\\W]+[^\\n#\\<\\d\\(]*[^\\.].\\bTrigger\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |trigger| is the preferred casing. %>"},
"1398": {"find": "(^[^\\n\\W]+[^\\n#\\<\\d\\(]*[^\\.].\\bTriggers\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# |triggers| is the preferred casing. %>"},
"1399": {"find": "(^\\*\\s[^\\*][^#]*###\\s(Resolved[\\s\\n]Issues|Known[\\s\\n]Issues|Features)(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# In release notes, each feature, KI, and resolved issue needs a run-in heading. %>"},
"1400": {"find": "(^\\s*`.{81,}`\\.(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Maybe delete the period -- it probably looks odd on the page after this code. %>"},
"1401": {"find": "(^##+.*(?=\\n[^\\n\\s])(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# A header must have 1 newline beneath it and 0 newlines within it. %>"},
"1402": {"find": "(^##+.*\\s[a-z]+$(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Per Chicago, capitalize the last word in the header. %>"},
"1403": {"find": "(^##+.*<\\/a>\\s*[a-z][a-z]+(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Per Chicago, capitalize the first word in the header. %>"},
"1404": {"find": "(^##+[^\\n]*\\n+[^\\n]*[^:]\\n\\n+(?=\\s*(\\<ol\\>|\\d\\.\\s))(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# A procedure requires a stem ending with a colon, as in |To do x:|. %>"},
"1405": {"find": "(^Note\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Put notes in Note box formatting per the wiki. %>"},
"1406": {"find": "(<code>[^\\w]<\\/code>[\\s\\n]character\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Write the word for the special character so that screen readers can read it. %>"},
"1407": {"find": "(<code>[^\\w]<\\/code>[\\s\\n]characters\\b(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Write the word for the special character so that screen readers can read it. %>"},
"1408": {"find": "(<p[\\s\\n]class=.note.>(?!([\\s\\n]*<strong>Note:<\\/strong>\\s([A-Z]|<)))(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Format the note properly -- https://docs-wiki.cfapps.io/wiki/style/html-classes.html#note-class %>"},
"1409": {"find": "(<p[\\s\\n]class=.warning>(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Format the note properly -- https://docs-wiki.cfapps.io/wiki/style/html-classes.html#note-class %>"},
"1410": {"find": "(<td[^\\>]*>\\s*-\\s*\\<\\/td\\>(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use n/a, in italics, to mark an empty table cell. %>"},
"1411": {"find": "(<td[^\\>]*>\\s*–\\s*\\<\\/td\\>(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use n/a, in italics, to mark an empty table cell. %>"},
"1412": {"find": "(<td[^\\>]*>\\s*—\\s*\\<\\/td\\>(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use n/a, in italics, to mark an empty table cell. %>"},
"1413": {"find": "(<td[^\\>]*>\\s*\\(none\\)\\s*\\<\\/td\\>(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use n/a, in italics, to mark an empty table cell. %>"},
"1414": {"find": "(<td[^\\>]*>\\s*&mdash;\\s*\\<\\/td\\>(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use n/a, in italics, to mark an empty table cell. %>"},
"1415": {"find": "(<td[^\\>]*>\\s*&ndash;\\s*\\<\\/td\\>(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use n/a, in italics, to mark an empty table cell. %>"},
"1416": {"find": "(<td[^\\>]*>\\s*n\\/a\\s*\\<\\/td\\>(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use n/a, in italics, to mark an empty table cell. %>"},
"1417": {"find": "(<td[^\\>]*>\\s*N\\/A\\s*\\<\\/td\\>(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use n/a, in italics, to mark an empty table cell. %>"},
"1418": {"find": "(<td[^\\>]*>\\s*NA\\s*\\<\\/td\\>(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use n/a, in italics, to mark an empty table cell. %>"},
"1419": {"find": "(<td[^\\>]*>\\s*none\\s*\\<\\/td\\>(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# Use n/a, in italics, to mark an empty table cell. %>"},
"1420": {"find": "(2012R2(?![^`]*`[\\s\\n\\.,:]|[^`]*\\S\\n[^\\n]\\s*``|[^\\*:]*\\*\\*[\\s\\n-\\.]|[^%]*[^\\)] %>|[^\\{]*\\}\\s%>|[^\\[]*\\]|\\S*\\)|[^\\.\\s]*\\.png|[^<]*<\\/(a|b|code|pre|script|strong|style)>|[^-]*---\\n\\n))", "replace": "\\1<%# The short product name is |<%= vars.windows_runtime_abbr %> 2012 R2| or, if in alt text |#{vars.windows_runtime_abbr} 2012 R2 %>"},

// Delete duplicate comments.

"1424": {"find": "(<%# .* %>)\\1", "replace": "\\1"}

   }
}
